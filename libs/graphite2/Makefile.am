## Proxy Makefile.am to build graphite2 for TeX Live.
##
##   Copyright (C) 2012 Peter Breitenlohner <tex-live@tug.org>
##
##   This file is free software; the copyright holder
##   gives unlimited permission to copy and/or distribute it,
##   with or without modifications, as long as this notice is preserved.
##
ACLOCAL_AMFLAGS = -I ../../m4

# Rebuild
.PHONY: rebuild
rebuild: config.force all

## We want to re-distribute the whole original graphite2 source tree.
##
EXTRA_DIST = $(GRAPHITE2_TREE)

## Changes applied to the original source tree
##
EXTRA_DIST += $(GRAPHITE2_TREE)-PATCHES

GRAPHITE2_SRC = $(GRAPHITE2_TREE)/src
GRAPHITE2_INC = $(GRAPHITE2_TREE)/include

# in case of an SVN repository
dist-hook:
	rm -rf `find $(distdir) -name .svn`

SUBDIRS = . include/graphite2

noinst_LIBRARIES = libgraphite2.a

## common
AM_CPPFLAGS = -I$(top_srcdir)/$(GRAPHITE2_SRC) -I$(top_srcdir)/$(GRAPHITE2_INC)
AM_CPPFLAGS += -DGRAPHITE2_STATIC -DGRAPHITE2_CUSTOM_HEADER='<config.h>'
libgraphite2_a_SOURCES =  \
	$(GRAPHITE2_SRC)/Bidi.cpp \
	$(GRAPHITE2_SRC)/CachedFace.cpp \
	$(GRAPHITE2_SRC)/CmapCache.cpp \
	$(GRAPHITE2_SRC)/Code.cpp \
	$(GRAPHITE2_SRC)/Face.cpp \
	$(GRAPHITE2_SRC)/FeatureMap.cpp \
	$(GRAPHITE2_SRC)/Font.cpp \
	$(GRAPHITE2_SRC)/GlyphCache.cpp \
	$(GRAPHITE2_SRC)/GlyphFace.cpp \
	$(GRAPHITE2_SRC)/Justifier.cpp \
	$(GRAPHITE2_SRC)/NameTable.cpp \
	$(GRAPHITE2_SRC)/Pass.cpp \
	$(GRAPHITE2_SRC)/Rule.cpp \
	$(GRAPHITE2_SRC)/Segment.cpp \
	$(GRAPHITE2_SRC)/Silf.cpp \
	$(GRAPHITE2_SRC)/Slot.cpp \
	$(GRAPHITE2_SRC)/Sparse.cpp \
	$(GRAPHITE2_SRC)/TtfUtil.cpp \
	$(GRAPHITE2_SRC)/UtfCodec.cpp \
	$(GRAPHITE2_SRC)/gr_char_info.cpp \
	$(GRAPHITE2_SRC)/gr_face.cpp \
	$(GRAPHITE2_SRC)/gr_features.cpp \
	$(GRAPHITE2_SRC)/gr_font.cpp \
	$(GRAPHITE2_SRC)/gr_logging.cpp \
	$(GRAPHITE2_SRC)/gr_segment.cpp \
	$(GRAPHITE2_SRC)/gr_slot.cpp \
	$(GRAPHITE2_SRC)/inc/CachedFace.h \
	$(GRAPHITE2_SRC)/inc/CharInfo.h \
	$(GRAPHITE2_SRC)/inc/CmapCache.h \
	$(GRAPHITE2_SRC)/inc/Code.h \
	$(GRAPHITE2_SRC)/inc/Endian.h \
	$(GRAPHITE2_SRC)/inc/Face.h \
	$(GRAPHITE2_SRC)/inc/FeatureMap.h \
	$(GRAPHITE2_SRC)/inc/FeatureVal.h \
	$(GRAPHITE2_SRC)/inc/FileFace.h \
	$(GRAPHITE2_SRC)/inc/Font.h \
	$(GRAPHITE2_SRC)/inc/GlyphCache.h \
	$(GRAPHITE2_SRC)/inc/GlyphFace.h \
	$(GRAPHITE2_SRC)/inc/List.h \
	$(GRAPHITE2_SRC)/inc/Machine.h \
	$(GRAPHITE2_SRC)/inc/Main.h \
	$(GRAPHITE2_SRC)/inc/NameTable.h \
	$(GRAPHITE2_SRC)/inc/Pass.h \
	$(GRAPHITE2_SRC)/inc/Position.h \
	$(GRAPHITE2_SRC)/inc/Rule.h \
	$(GRAPHITE2_SRC)/inc/SegCache.h \
	$(GRAPHITE2_SRC)/inc/SegCacheEntry.h \
	$(GRAPHITE2_SRC)/inc/SegCacheStore.h \
	$(GRAPHITE2_SRC)/inc/Segment.h \
	$(GRAPHITE2_SRC)/inc/Silf.h \
	$(GRAPHITE2_SRC)/inc/Slot.h \
	$(GRAPHITE2_SRC)/inc/Sparse.h \
	$(GRAPHITE2_SRC)/inc/TtfTypes.h \
	$(GRAPHITE2_SRC)/inc/TtfUtil.h \
	$(GRAPHITE2_SRC)/inc/UtfCodec.h \
	$(GRAPHITE2_SRC)/inc/bits.h \
	$(GRAPHITE2_SRC)/inc/debug.h \
	$(GRAPHITE2_SRC)/inc/json.h \
	$(GRAPHITE2_SRC)/inc/locale2lcid.h \
	$(GRAPHITE2_SRC)/inc/opcode_table.h \
	$(GRAPHITE2_SRC)/inc/opcodes.h

if DIRECT_TYPE
libgraphite2_a_SOURCES += $(GRAPHITE2_SRC)/direct_machine.cpp
else !DIRECT_TYPE
libgraphite2_a_SOURCES += $(GRAPHITE2_SRC)/call_machine.cpp
endif !DIRECT_TYPE

if WITH_SEGCACHE
libgraphite2_a_SOURCES += \
	$(GRAPHITE2_SRC)/SegCache.cpp \
	$(GRAPHITE2_SRC)/SegCacheEntry.cpp \
	$(GRAPHITE2_SRC)/SegCacheStore.cpp
endif WITH_SEGCACHE

if WITH_FILEFACE
libgraphite2_a_SOURCES += $(GRAPHITE2_SRC)/FileFace.cpp 
endif WITH_FILEFACE

if WITH_TRACING
libgraphite2_a_SOURCES += $(GRAPHITE2_SRC)/json.cpp
endif WITH_TRACING

$(libgraphite2_a_OBJECTS): config.force

config.force:
	echo timestamp >config.force
	$(SHELL) ./config.status --recheck

DISTCLEANFILES = config.force

##if build
## check_PROGRAMS = 
## dist_check_SCRIPTS = graphite2.test
## TESTS = graphite2.test
## endif build

LDADD = libgraphite2.a

## Files generated by TESTS

