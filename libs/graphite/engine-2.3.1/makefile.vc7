
TARGET=graphite

CPP=cl.exe
CPPFLAGS=/nologo /W4 /GR /GX /I "./src/font" /I "./src/painter" /I "./src/segment" /I "./src/textsource" /I "./src/generic" /I "./include/graphite" /I "../wrappers/win32" /D "GR_NAMESPACE" /D "WIN32" /D "_WINDOWS" /D "_UNICODE" /D "UNICODE" /D "TRACING"  /Fp"$(INTDIR)\graphite.pch" /YX /Fd"$(INTDIR)\\" /FD /c
# /Wp62

LINK=link.exe
LINK_FLAGS=kernel32.lib user32.lib gdi32.lib winspool.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib /nologo /dll /pdb:"$(OUTDIR)\\graphite.pdb" /machine:I386 /out:"$(OUTDIR)\\$(TARGET).dll" /implib:"$(OUTDIR)\\$(TARGET).lib"

BSC32=bscmake.exe
BSC32_FLAGS=/nologo /o"$(OUTDIR)\\$(TARGET).bsc" 

AR=lib
AR_FLAGS=/OUT:$@

!IF "$(MLIB)" == "MD"
MLIB=MD
!ELSE
MLIB=MT
!ENDIF

OBJEXT = .obj
SBREXT = .sbr

!IF "$(CFG)" == "DEBUG"
CPP_DEBUG=/D "DEBUG" /Gm /GR /ZI /Od /GZ /FR"$(INTDIR)\\" /$(MLIB)d
# CPP_DEBUG=/D "DEBUG" /Gm /GR /ZI /Od /GZ /FR"$(INTDIR)\\" /MDd

OUTDIR=.\debug
INTDIR=.\debug_temp
LINK_DEBUG= MSVCRTD.lib /debug /incremental:yes #/pdbtype:sept

all : lib lib_dll bsc

!ELSE
CPP_DEBUG=/D "NDEBUG" /O2 /$(MLIB)
# CPP_DEBUG=/D "NDEBUG" /O2 /MD
OUTDIR=.\release
INTDIR=.\release_temp
LINK_DEBUG= MSVCRT.lib /incremental:no /NODEFAULTLIB:libc

all : lib lib_dll

!ENDIF

!IF "$(TRACING)" == "1"
CPP_DEBUG=/D "TRACING" $(CPP_DEBUG)
!ENDIF

!IF "$(OS)" == "Windows_NT"
NULL=
!ELSE 
NULL=nul
!ENDIF

clean :
    @- rd /s/q .\release_temp
    @- rd /s/q .\debug_temp
    
realclean : clean
    @- rd /s/q .\release
    @- rd /s/q .\debug

LINK_OBJS=\
#    "$(INTDIR)\BinTree_i$(OBJEXT)"\
#    "$(INTDIR)\HashMap_i$(OBJEXT)"\
    "$(INTDIR)\Debug$(OBJEXT)"\
    "$(INTDIR)\Util$(OBJEXT)"\
    "$(INTDIR)\Font$(OBJEXT)"\
    "$(INTDIR)\FileFont$(OBJEXT)"\
    "$(INTDIR)\FontCache$(OBJEXT)"\
    "$(INTDIR)\FontFace$(OBJEXT)"\
    "$(INTDIR)\FileInput$(OBJEXT)"\
    "$(INTDIR)\GrCharStream$(OBJEXT)"\
    "$(INTDIR)\GrClassTable$(OBJEXT)"\
    "$(INTDIR)\GrEngine$(OBJEXT)"\
    "$(INTDIR)\GrFeature$(OBJEXT)"\
    "$(INTDIR)\GrFSM$(OBJEXT)"\
    "$(INTDIR)\GrGlyphTable$(OBJEXT)"\
    "$(INTDIR)\GrPass$(OBJEXT)"\
    "$(INTDIR)\GrPassActionCode$(OBJEXT)"\
    "$(INTDIR)\GrSlotState$(OBJEXT)"\
    "$(INTDIR)\GrSlotStream$(OBJEXT)"\
    "$(INTDIR)\GrTableManager$(OBJEXT)"\
    "$(INTDIR)\MemoryUsage$(OBJEXT)"\
    "$(INTDIR)\Segment$(OBJEXT)"\
    "$(INTDIR)\SegmentAux$(OBJEXT)"\
    "$(INTDIR)\SegmentPainter$(OBJEXT)"\
#    "$(INTDIR)\TestFSM$(OBJEXT)"\
#    "$(INTDIR)\TestPasses$(OBJEXT)"\
    "$(INTDIR)\TransductionLog$(OBJEXT)"\
###    "$(INTDIR)\XmlTransductionLog$(OBJEXT)"\
    "$(INTDIR)\Platform$(OBJEXT)"\
    "$(INTDIR)\TtfUtil$(OBJEXT)"\
    "$(INTDIR)\WinFont$(OBJEXT)"\
    "$(INTDIR)\WinSegmentPainter$(OBJEXT)"

LINK_DLL_OBJS=\
#    "$(INTDIR)\BinTree_i_dll$(OBJEXT)"\
#    "$(INTDIR)\HashMap_i_dll$(OBJEXT)"\
    "$(INTDIR)\Debug_dll$(OBJEXT)"\
    "$(INTDIR)\Util_dll$(OBJEXT)"\
    "$(INTDIR)\Font_dll$(OBJEXT)"\
    "$(INTDIR)\WinFont_dll$(OBJEXT)"\
    "$(INTDIR)\FileFont_dll$(OBJEXT)"\
    "$(INTDIR)\FontCache_dll$(OBJEXT)"\
    "$(INTDIR)\FontFace_dll$(OBJEXT)"\
    "$(INTDIR)\FileInput_dll$(OBJEXT)"\
    "$(INTDIR)\GrCharStream_dll$(OBJEXT)"\
    "$(INTDIR)\GrClassTable_dll$(OBJEXT)"\
    "$(INTDIR)\GrEngine_dll$(OBJEXT)"\
    "$(INTDIR)\GrFeature_dll$(OBJEXT)"\
    "$(INTDIR)\GrFSM_dll$(OBJEXT)"\
    "$(INTDIR)\GrGlyphTable_dll$(OBJEXT)"\
    "$(INTDIR)\GrPass_dll$(OBJEXT)"\
    "$(INTDIR)\GrPassActionCode_dll$(OBJEXT)"\
    "$(INTDIR)\GrSlotState_dll$(OBJEXT)"\
    "$(INTDIR)\GrSlotStream_dll$(OBJEXT)"\
    "$(INTDIR)\GrTableManager_dll$(OBJEXT)"\
    "$(INTDIR)\MemoryUsage_dll$(OBJEXT)"\
    "$(INTDIR)\Segment_dll$(OBJEXT)"\
    "$(INTDIR)\SegmentAux_dll$(OBJEXT)"\
    "$(INTDIR)\SegmentPainter_dll$(OBJEXT)"\
#    "$(INTDIR)\TestFSM_dll$(OBJEXT)"\
#    "$(INTDIR)\TestPasses_dll$(OBJEXT)"\
    "$(INTDIR)\TransductionLog_dll$(OBJEXT)"\
###    "$(INTDIR)\XmlTransductionLog_dll$(OBJEXT)"\
    "$(INTDIR)\WinSegmentPainter_dll$(OBJEXT)"\
    "$(INTDIR)\Platform_dll$(OBJEXT)"\
    "$(INTDIR)\TtfUtil_dll$(OBJEXT)"

DLL_LINK_OBJS=\
    "$(INTDIR)\win32_dll_dll$(OBJEXT)"

BSC32_SBRS=\
#    "$(INTDIR)\BinTree_i$(SBREXT)"\
#    "$(INTDIR)\HashMap_i$(SBREXT)"\
    "$(INTDIR)\Debug$(SBREXT)"\
    "$(INTDIR)\Util$(SBREXT)"\
    "$(INTDIR)\Font$(SBREXT)"\
    "$(INTDIR)\WinFont$(SBREXT)"\
    "$(INTDIR)\FileFont$(SBREXT)"\
    "$(INTDIR)\FontCache$(SBREXT)"\
    "$(INTDIR)\FontFace$(SBREXT)"\
    "$(INTDIR)\FileInput$(SBREXT)"\
    "$(INTDIR)\GrCharStream$(SBREXT)"\
    "$(INTDIR)\GrClassTable$(SBREXT)"\
    "$(INTDIR)\GrEngine$(SBREXT)"\
    "$(INTDIR)\GrFeature$(SBREXT)"\
    "$(INTDIR)\GrFSM$(SBREXT)"\
    "$(INTDIR)\GrGlyphTable$(SBREXT)"\
    "$(INTDIR)\GrPass$(SBREXT)"\
    "$(INTDIR)\GrPassActionCode$(SBREXT)"\
    "$(INTDIR)\GrSlotState$(SBREXT)"\
    "$(INTDIR)\GrSlotStream$(SBREXT)"\
    "$(INTDIR)\GrTableManager$(SBREXT)"\
    "$(INTDIR)\MemoryUsage$(SBREXT)"\
    "$(INTDIR)\Segment$(SBREXT)"\
    "$(INTDIR)\SegmentAux$(SBREXT)"\
    "$(INTDIR)\SegmentPainter$(SBREXT)"\
#    "$(INTDIR)\TestFSM$(SBREXT)"\
#    "$(INTDIR)\TestPasses$(SBREXT)"\
    "$(INTDIR)\TransductionLog$(SBREXT)"\
###    "$(INTDIR)\XmlTransductionLog$(SBREXT)"\
    "$(INTDIR)\WinSegmentPainter$(SBREXT)"\
    "$(INTDIR)\Platform$(SBREXT)"\
    "$(INTDIR)\TtfUtil$(SBREXT)"\
    "$(INTDIR)\win32_dll$(SBREXT)"

$(OUTDIR) : 
	if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"

$(INTDIR) :
	if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
	
lib : "$(OUTDIR)/$(TARGET).lib"

lib_dll : "$(OUTDIR)/$(TARGET)_dll.lib"

"$(OUTDIR)/$(TARGET).lib" : "$(OUTDIR)" "$(INTDIR)" $(LINK_OBJS)
	$(AR) @<<
	$(AR_FLAGS) $(LINK_OBJS)
<<

"$(OUTDIR)/$(TARGET)_dll.lib" : "$(OUTDIR)" "$(INTDIR)" $(LINK_DLL_OBJS)
	$(AR) @<<
	$(AR_FLAGS) $(LINK_DLL_OBJS)
<<

!IF "$(CFG)" == "DEBUG"
"$(INTDIR)\BinTree_i$(OBJEXT)" "$(INTDIR)\BinTree_i$(SBREXT)" : "src/generic/BinTree_i.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\BinTree_i$(OBJEXT)" $?

"$(INTDIR)\BinTree_i_dll$(OBJEXT)" "$(INTDIR)\BinTree_i_dll$(SBREXT)" : "src/generic/BinTree_i.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" $(CPP_DEBUG) /Fo"$(INTDIR)\BinTree_i_dll$(OBJEXT)" $?
	
!ELSE
"$(INTDIR)\BinTree_i$(OBJEXT)" : "src/generic/BinTree_i.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\BinTree_i$(OBJEXT)" $?
	
"$(INTDIR)\BinTree_i_dll$(OBJEXT)" : "src/generic/BinTree_i.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /D "_DLL" /Fo"$(INTDIR)\BinTree_i_dll$(OBJEXT)" $?
	
!ENDIF


!IF "$(CFG)" == "DEBUG"
"$(INTDIR)\Debug$(OBJEXT)" "$(INTDIR)\Debug$(SBREXT)" : "src/generic/Debug.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\Debug$(OBJEXT)" $?

"$(INTDIR)\Debug_dll$(OBJEXT)" "$(INTDIR)\Debug_dll$(SBREXT)" : "src/generic/Debug.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" $(CPP_DEBUG) /Fo"$(INTDIR)\Debug_dll$(OBJEXT)" $?
	
!ELSE
"$(INTDIR)\Debug$(OBJEXT)" : "src/generic/Debug.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\Debug$(OBJEXT)" $?
	
"$(INTDIR)\Debug_dll$(OBJEXT)" : "src/generic/Debug.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" /Fo"$(INTDIR)\Debug_dll$(OBJEXT)" $?
	
!ENDIF

!IF "$(CFG)" == "DEBUG"
"$(INTDIR)\HashMap$(OBJEXT)" "$(INTDIR)\HashMap$(SBREXT)" : "src/generic/HashMap.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\HashMap$(OBJEXT)" $?

"$(INTDIR)\HashMap_dll$(OBJEXT)" "$(INTDIR)\HashMap_dll$(SBREXT)" : "src/generic/HashMap.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" $(CPP_DEBUG) /Fo"$(INTDIR)\HashMap_dll$(OBJEXT)" $?
	
!ELSE
"$(INTDIR)\HashMap$(OBJEXT)" : "src/generic/HashMap.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\HashMap$(OBJEXT)" $?
	
"$(INTDIR)\HashMap_dll$(OBJEXT)" : "src/generic/HashMap.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" /Fo"$(INTDIR)\HashMap_dll$(OBJEXT)" $?
	
!ENDIF

!IF "$(CFG)" == "DEBUG"
"$(INTDIR)\HashMap_i$(OBJEXT)" "$(INTDIR)\HashMap_i$(SBREXT)" : "src/generic/HashMap_i.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\HashMap_i$(OBJEXT)" $?

"$(INTDIR)\HashMap_i_dll$(OBJEXT)" "$(INTDIR)\HashMap_i_dll$(SBREXT)" : "src/generic/HashMap_i.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" $(CPP_DEBUG) /Fo"$(INTDIR)\HashMap_i_dll$(OBJEXT)" $?
	
!ELSE
"$(INTDIR)\HashMap_i$(OBJEXT)" : "src/generic/HashMap_i.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\HashMap_i$(OBJEXT)" $?
	
"$(INTDIR)\HashMap_i_dll$(OBJEXT)" : "src/generic/HashMap_i.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" /Fo"$(INTDIR)\HashMap_i_dll$(OBJEXT)" $?
	
!ENDIF

!IF "$(CFG)" == "DEBUG"
"$(INTDIR)\Set_i$(OBJEXT)" "$(INTDIR)\Set_i$(SBREXT)" : "src/generic/Set_i.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\Set_i$(OBJEXT)" $?

"$(INTDIR)\Set_i_dll$(OBJEXT)" "$(INTDIR)\Set_i_dll$(SBREXT)" : "src/generic/Set_i.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" $(CPP_DEBUG) /Fo"$(INTDIR)\Set_i_dll$(OBJEXT)" $?
	
!ELSE
"$(INTDIR)\Set_i$(OBJEXT)" : "src/generic/Set_i.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\Set_i$(OBJEXT)" $?
	
"$(INTDIR)\Set_i_dll$(OBJEXT)" : "src/generic/Set_i.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" /Fo"$(INTDIR)\Set_i_dll$(OBJEXT)" $?
	
!ENDIF

!IF "$(CFG)" == "DEBUG"
"$(INTDIR)\Util$(OBJEXT)" "$(INTDIR)\Util$(SBREXT)" : "src/generic/Util.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\Util$(OBJEXT)" $?

"$(INTDIR)\Util_dll$(OBJEXT)" "$(INTDIR)\Util_dll$(SBREXT)" : "src/generic/Util.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" $(CPP_DEBUG) /Fo"$(INTDIR)\Util_dll$(OBJEXT)" $?
	
!ELSE
"$(INTDIR)\Util$(OBJEXT)" : "src/generic/Util.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\Util$(OBJEXT)" $?
	
"$(INTDIR)\Util_dll$(OBJEXT)" : "src/generic/Util.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" /Fo"$(INTDIR)\Util_dll$(OBJEXT)" $?
	
!ENDIF

!IF "$(CFG)" == "DEBUG"
"$(INTDIR)\UtilString$(OBJEXT)" "$(INTDIR)\UtilString$(SBREXT)" : "src/generic/UtilString.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\UtilString$(OBJEXT)" $?

"$(INTDIR)\UtilString_dll$(OBJEXT)" "$(INTDIR)\UtilString_dll$(SBREXT)" : "src/generic/UtilString.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" $(CPP_DEBUG) /Fo"$(INTDIR)\UtilString_dll$(OBJEXT)" $?
	
!ELSE
"$(INTDIR)\UtilString$(OBJEXT)" : "src/generic/UtilString.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\UtilString$(OBJEXT)" $?
	
"$(INTDIR)\UtilString_dll$(OBJEXT)" : "src/generic/UtilString.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" /Fo"$(INTDIR)\UtilString_dll$(OBJEXT)" $?
	
!ENDIF

!IF "$(CFG)" == "DEBUG"
"$(INTDIR)\Vector_i$(OBJEXT)" "$(INTDIR)\Vector_i$(SBREXT)" : "src/generic/Vector_i.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\Vector_i$(OBJEXT)" $?

"$(INTDIR)\Vector_i_dll$(OBJEXT)" "$(INTDIR)\Vector_i_dll$(SBREXT)" : "src/generic/Vector_i.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" $(CPP_DEBUG) /Fo"$(INTDIR)\Vector_i_dll$(OBJEXT)" $?
	
!ELSE
"$(INTDIR)\Vector_i$(OBJEXT)" : "src/generic/Vector_i.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\Vector_i$(OBJEXT)" $?
	
"$(INTDIR)\Vector_i_dll$(OBJEXT)" : "src/generic/Vector_i.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" /Fo"$(INTDIR)\Vector_i_dll$(OBJEXT)" $?
	
!ENDIF

!IF "$(CFG)" == "DEBUG"
"$(INTDIR)\Font$(OBJEXT)" "$(INTDIR)\Font$(SBREXT)" : "src/font/Font.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\Font$(OBJEXT)" $?

"$(INTDIR)\Font_dll$(OBJEXT)" "$(INTDIR)\Font_dll$(SBREXT)" : "src/font/Font.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" $(CPP_DEBUG) /Fo"$(INTDIR)\Font_dll$(OBJEXT)" $?
	
!ELSE
"$(INTDIR)\Font$(OBJEXT)" : "src/font/Font.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\Font$(OBJEXT)" $?
	
"$(INTDIR)\Font_dll$(OBJEXT)" : "src/font/Font.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" /Fo"$(INTDIR)\Font_dll$(OBJEXT)" $?
	
!ENDIF

!IF "$(CFG)" == "DEBUG"
"$(INTDIR)\GrUtil$(OBJEXT)" "$(INTDIR)\GrUtil$(SBREXT)" : "src/font/GrUtil.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\GrUtil$(OBJEXT)" $?

"$(INTDIR)\GrUtil_dll$(OBJEXT)" "$(INTDIR)\GrUtil_dll$(SBREXT)" : "src/font/GrUtil.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" $(CPP_DEBUG) /Fo"$(INTDIR)\GrUtil_dll$(OBJEXT)" $?
	
!ELSE
"$(INTDIR)\GrUtil$(OBJEXT)" : "src/font/GrUtil.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\GrUtil$(OBJEXT)" $?
	
"$(INTDIR)\GrUtil_dll$(OBJEXT)" : "src/font/GrUtil.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" /Fo"$(INTDIR)\GrUtil_dll$(OBJEXT)" $?
	
!ENDIF

!IF "$(CFG)" == "DEBUG"
"$(INTDIR)\TtfUtil$(OBJEXT)" "$(INTDIR)\TtfUtil$(SBREXT)" : "src/font/TtfUtil.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\TtfUtil$(OBJEXT)" $?

"$(INTDIR)\TtfUtil_dll$(OBJEXT)" "$(INTDIR)\TtfUtil_dll$(SBREXT)" : "src/font/TtfUtil.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" $(CPP_DEBUG) /Fo"$(INTDIR)\TtfUtil_dll$(OBJEXT)" $?
	
!ELSE
"$(INTDIR)\TtfUtil$(OBJEXT)" : "src/font/TtfUtil.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\TtfUtil$(OBJEXT)" $?
	
"$(INTDIR)\TtfUtil_dll$(OBJEXT)" : "src/font/TtfUtil.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" /Fo"$(INTDIR)\TtfUtil_dll$(OBJEXT)" $?
	
!ENDIF

!IF "$(CFG)" == "DEBUG"
"$(INTDIR)\FontCache$(OBJEXT)" "$(INTDIR)\FontCache$(SBREXT)" : "src/segment/FontCache.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\FontCache$(OBJEXT)" $?

"$(INTDIR)\FontCache_dll$(OBJEXT)" "$(INTDIR)\FontCache_dll$(SBREXT)" : "src/segment/FontCache.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" $(CPP_DEBUG) /Fo"$(INTDIR)\FontCache_dll$(OBJEXT)" $?
	
!ELSE
"$(INTDIR)\FontCache$(OBJEXT)" : "src/segment/FontCache.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\FontCache$(OBJEXT)" $?
	
"$(INTDIR)\FontCache_dll$(OBJEXT)" : "src/segment/FontCache.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" /Fo"$(INTDIR)\FontCache_dll$(OBJEXT)" $?
	
!ENDIF

!IF "$(CFG)" == "DEBUG"
"$(INTDIR)\FontFace$(OBJEXT)" "$(INTDIR)\FontFace$(SBREXT)" : "src/segment/FontFace.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\FontFace$(OBJEXT)" $?

"$(INTDIR)\FontFace_dll$(OBJEXT)" "$(INTDIR)\FontFace_dll$(SBREXT)" : "src/segment/FontFace.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" $(CPP_DEBUG) /Fo"$(INTDIR)\FontFace_dll$(OBJEXT)" $?
	
!ELSE
"$(INTDIR)\FontFace$(OBJEXT)" : "src/segment/FontFace.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\FontFace$(OBJEXT)" $?
	
"$(INTDIR)\FontFace_dll$(OBJEXT)" : "src/segment/FontFace.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" /Fo"$(INTDIR)\FontFace_dll$(OBJEXT)" $?
	
!ENDIF

!IF "$(CFG)" == "DEBUG"
"$(INTDIR)\FileInput$(OBJEXT)" "$(INTDIR)\FileInput$(SBREXT)" : "src/segment/FileInput.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\FileInput$(OBJEXT)" $?

"$(INTDIR)\FileInput_dll$(OBJEXT)" "$(INTDIR)\FileInput_dll$(SBREXT)" : "src/segment/FileInput.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" $(CPP_DEBUG) /Fo"$(INTDIR)\FileInput_dll$(OBJEXT)" $?
	
!ELSE
"$(INTDIR)\FileInput$(OBJEXT)" : "src/segment/FileInput.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\FileInput$(OBJEXT)" $?
	
"$(INTDIR)\FileInput_dll$(OBJEXT)" : "src/segment/FileInput.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" /Fo"$(INTDIR)\FileInput_dll$(OBJEXT)" $?
	
!ENDIF

!IF "$(CFG)" == "DEBUG"
"$(INTDIR)\GrCharStream$(OBJEXT)" "$(INTDIR)\GrCharStream$(SBREXT)" : "src/segment/GrCharStream.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\GrCharStream$(OBJEXT)" $?

"$(INTDIR)\GrCharStream_dll$(OBJEXT)" "$(INTDIR)\GrCharStream_dll$(SBREXT)" : "src/segment/GrCharStream.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" $(CPP_DEBUG) /Fo"$(INTDIR)\GrCharStream_dll$(OBJEXT)" $?
	
!ELSE
"$(INTDIR)\GrCharStream$(OBJEXT)" : "src/segment/GrCharStream.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\GrCharStream$(OBJEXT)" $?
	
"$(INTDIR)\GrCharStream_dll$(OBJEXT)" : "src/segment/GrCharStream.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" /Fo"$(INTDIR)\GrCharStream_dll$(OBJEXT)" $?
	
!ENDIF

!IF "$(CFG)" == "DEBUG"
"$(INTDIR)\GrClassTable$(OBJEXT)" "$(INTDIR)\GrClassTable$(SBREXT)" : "src/segment/GrClassTable.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\GrClassTable$(OBJEXT)" $?

"$(INTDIR)\GrClassTable_dll$(OBJEXT)" "$(INTDIR)\GrClassTable_dll$(SBREXT)" : "src/segment/GrClassTable.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" $(CPP_DEBUG) /Fo"$(INTDIR)\GrClassTable_dll$(OBJEXT)" $?
	
!ELSE
"$(INTDIR)\GrClassTable$(OBJEXT)" : "src/segment/GrClassTable.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\GrClassTable$(OBJEXT)" $?
	
"$(INTDIR)\GrClassTable_dll$(OBJEXT)" : "src/segment/GrClassTable.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" /Fo"$(INTDIR)\GrClassTable_dll$(OBJEXT)" $?
	
!ENDIF

!IF "$(CFG)" == "DEBUG"
"$(INTDIR)\GrEngine$(OBJEXT)" "$(INTDIR)\GrEngine$(SBREXT)" : "src/segment/GrEngine.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\GrEngine$(OBJEXT)" $?

"$(INTDIR)\GrEngine_dll$(OBJEXT)" "$(INTDIR)\GrEngine_dll$(SBREXT)" : "src/segment/GrEngine.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" $(CPP_DEBUG) /Fo"$(INTDIR)\GrEngine_dll$(OBJEXT)" $?
	
!ELSE
"$(INTDIR)\GrEngine$(OBJEXT)" : "src/segment/GrEngine.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\GrEngine$(OBJEXT)" $?
	
"$(INTDIR)\GrEngine_dll$(OBJEXT)" : "src/segment/GrEngine.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" /Fo"$(INTDIR)\GrEngine_dll$(OBJEXT)" $?
	
!ENDIF

!IF "$(CFG)" == "DEBUG"
"$(INTDIR)\GrFeature$(OBJEXT)" "$(INTDIR)\GrFeature$(SBREXT)" : "src/segment/GrFeature.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\GrFeature$(OBJEXT)" $?

"$(INTDIR)\GrFeature_dll$(OBJEXT)" "$(INTDIR)\GrFeature_dll$(SBREXT)" : "src/segment/GrFeature.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" $(CPP_DEBUG) /Fo"$(INTDIR)\GrFeature_dll$(OBJEXT)" $?
	
!ELSE
"$(INTDIR)\GrFeature$(OBJEXT)" : "src/segment/GrFeature.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\GrFeature$(OBJEXT)" $?
	
"$(INTDIR)\GrFeature_dll$(OBJEXT)" : "src/segment/GrFeature.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" /Fo"$(INTDIR)\GrFeature_dll$(OBJEXT)" $?
	
!ENDIF

!IF "$(CFG)" == "DEBUG"
"$(INTDIR)\GrFSM$(OBJEXT)" "$(INTDIR)\GrFSM$(SBREXT)" : "src/segment/GrFSM.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\GrFSM$(OBJEXT)" $?

"$(INTDIR)\GrFSM_dll$(OBJEXT)" "$(INTDIR)\GrFSM_dll$(SBREXT)" : "src/segment/GrFSM.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" $(CPP_DEBUG) /Fo"$(INTDIR)\GrFSM_dll$(OBJEXT)" $?
	
!ELSE
"$(INTDIR)\GrFSM$(OBJEXT)" : "src/segment/GrFSM.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\GrFSM$(OBJEXT)" $?
	
"$(INTDIR)\GrFSM_dll$(OBJEXT)" : "src/segment/GrFSM.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" /Fo"$(INTDIR)\GrFSM_dll$(OBJEXT)" $?
	
!ENDIF

!IF "$(CFG)" == "DEBUG"
"$(INTDIR)\GrGlyphTable$(OBJEXT)" "$(INTDIR)\GrGlyphTable$(SBREXT)" : "src/segment/GrGlyphTable.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\GrGlyphTable$(OBJEXT)" $?

"$(INTDIR)\GrGlyphTable_dll$(OBJEXT)" "$(INTDIR)\GrGlyphTable_dll$(SBREXT)" : "src/segment/GrGlyphTable.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" $(CPP_DEBUG) /Fo"$(INTDIR)\GrGlyphTable_dll$(OBJEXT)" $?
	
!ELSE
"$(INTDIR)\GrGlyphTable$(OBJEXT)" : "src/segment/GrGlyphTable.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\GrGlyphTable$(OBJEXT)" $?
	
"$(INTDIR)\GrGlyphTable_dll$(OBJEXT)" : "src/segment/GrGlyphTable.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" /Fo"$(INTDIR)\GrGlyphTable_dll$(OBJEXT)" $?
	
!ENDIF

!IF "$(CFG)" == "DEBUG"
"$(INTDIR)\GrPass$(OBJEXT)" "$(INTDIR)\GrPass$(SBREXT)" : "src/segment/GrPass.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\GrPass$(OBJEXT)" $?

"$(INTDIR)\GrPass_dll$(OBJEXT)" "$(INTDIR)\GrPass_dll$(SBREXT)" : "src/segment/GrPass.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" $(CPP_DEBUG) /Fo"$(INTDIR)\GrPass_dll$(OBJEXT)" $?
	
!ELSE
"$(INTDIR)\GrPass$(OBJEXT)" : "src/segment/GrPass.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\GrPass$(OBJEXT)" $?
	
"$(INTDIR)\GrPass_dll$(OBJEXT)" : "src/segment/GrPass.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" /Fo"$(INTDIR)\GrPass_dll$(OBJEXT)" $?
	
!ENDIF

!IF "$(CFG)" == "DEBUG"
"$(INTDIR)\GrPassActionCode$(OBJEXT)" "$(INTDIR)\GrPassActionCode$(SBREXT)" : "src/segment/GrPassActionCode.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\GrPassActionCode$(OBJEXT)" $?

"$(INTDIR)\GrPassActionCode_dll$(OBJEXT)" "$(INTDIR)\GrPassActionCode_dll$(SBREXT)" : "src/segment/GrPassActionCode.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" $(CPP_DEBUG) /Fo"$(INTDIR)\GrPassActionCode_dll$(OBJEXT)" $?
	
!ELSE
"$(INTDIR)\GrPassActionCode$(OBJEXT)" : "src/segment/GrPassActionCode.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\GrPassActionCode$(OBJEXT)" $?
	
"$(INTDIR)\GrPassActionCode_dll$(OBJEXT)" : "src/segment/GrPassActionCode.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" /Fo"$(INTDIR)\GrPassActionCode_dll$(OBJEXT)" $?
	
!ENDIF

!IF "$(CFG)" == "DEBUG"
"$(INTDIR)\GrSlotState$(OBJEXT)" "$(INTDIR)\GrSlotState$(SBREXT)" : "src/segment/GrSlotState.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\GrSlotState$(OBJEXT)" $?

"$(INTDIR)\GrSlotState_dll$(OBJEXT)" "$(INTDIR)\GrSlotState_dll$(SBREXT)" : "src/segment/GrSlotState.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" $(CPP_DEBUG) /Fo"$(INTDIR)\GrSlotState_dll$(OBJEXT)" $?
	
!ELSE
"$(INTDIR)\GrSlotState$(OBJEXT)" : "src/segment/GrSlotState.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\GrSlotState$(OBJEXT)" $?
	
"$(INTDIR)\GrSlotState_dll$(OBJEXT)" : "src/segment/GrSlotState.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" /Fo"$(INTDIR)\GrSlotState_dll$(OBJEXT)" $?
	
!ENDIF

!IF "$(CFG)" == "DEBUG"
"$(INTDIR)\GrSlotStream$(OBJEXT)" "$(INTDIR)\GrSlotStream$(SBREXT)" : "src/segment/GrSlotStream.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\GrSlotStream$(OBJEXT)" $?

"$(INTDIR)\GrSlotStream_dll$(OBJEXT)" "$(INTDIR)\GrSlotStream_dll$(SBREXT)" : "src/segment/GrSlotStream.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" $(CPP_DEBUG) /Fo"$(INTDIR)\GrSlotStream_dll$(OBJEXT)" $?
	
!ELSE
"$(INTDIR)\GrSlotStream$(OBJEXT)" : "src/segment/GrSlotStream.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\GrSlotStream$(OBJEXT)" $?
	
"$(INTDIR)\GrSlotStream_dll$(OBJEXT)" : "src/segment/GrSlotStream.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" /Fo"$(INTDIR)\GrSlotStream_dll$(OBJEXT)" $?
	
!ENDIF

!IF "$(CFG)" == "DEBUG"
"$(INTDIR)\GrTableManager$(OBJEXT)" "$(INTDIR)\GrTableManager$(SBREXT)" : "src/segment/GrTableManager.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\GrTableManager$(OBJEXT)" $?

"$(INTDIR)\GrTableManager_dll$(OBJEXT)" "$(INTDIR)\GrTableManager_dll$(SBREXT)" : "src/segment/GrTableManager.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" $(CPP_DEBUG) /Fo"$(INTDIR)\GrTableManager_dll$(OBJEXT)" $?
	
!ELSE
"$(INTDIR)\GrTableManager$(OBJEXT)" : "src/segment/GrTableManager.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\GrTableManager$(OBJEXT)" $?
	
"$(INTDIR)\GrTableManager_dll$(OBJEXT)" : "src/segment/GrTableManager.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" /Fo"$(INTDIR)\GrTableManager_dll$(OBJEXT)" $?
	
!ENDIF

!IF "$(CFG)" == "DEBUG"
"$(INTDIR)\MemoryUsage$(OBJEXT)" "$(INTDIR)\MemoryUsage$(SBREXT)" : "src/segment/MemoryUsage.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\MemoryUsage$(OBJEXT)" $?

"$(INTDIR)\MemoryUsage_dll$(OBJEXT)" "$(INTDIR)\MemoryUsage_dll$(SBREXT)" : "src/segment/MemoryUsage.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" $(CPP_DEBUG) /Fo"$(INTDIR)\MemoryUsage_dll$(OBJEXT)" $?
	
!ELSE
"$(INTDIR)\MemoryUsage$(OBJEXT)" : "src/segment/MemoryUsage.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\MemoryUsage$(OBJEXT)" $?
	
"$(INTDIR)\MemoryUsage_dll$(OBJEXT)" : "src/segment/MemoryUsage.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" /Fo"$(INTDIR)\MemoryUsage_dll$(OBJEXT)" $?
	
!ENDIF

!IF "$(CFG)" == "DEBUG"
"$(INTDIR)\Segment$(OBJEXT)" "$(INTDIR)\Segment$(SBREXT)" : "src/segment/Segment.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\Segment$(OBJEXT)" $?

"$(INTDIR)\Segment_dll$(OBJEXT)" "$(INTDIR)\Segment_dll$(SBREXT)" : "src/segment/Segment.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" $(CPP_DEBUG) /Fo"$(INTDIR)\Segment_dll$(OBJEXT)" $?
	
!ELSE
"$(INTDIR)\Segment$(OBJEXT)" : "src/segment/Segment.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\Segment$(OBJEXT)" $?
	
"$(INTDIR)\Segment_dll$(OBJEXT)" : "src/segment/Segment.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" /Fo"$(INTDIR)\Segment_dll$(OBJEXT)" $?
	
!ENDIF

!IF "$(CFG)" == "DEBUG"
"$(INTDIR)\SegmentAux$(OBJEXT)" "$(INTDIR)\SegmentAux$(SBREXT)" : "src/segment/SegmentAux.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\SegmentAux$(OBJEXT)" $?

"$(INTDIR)\SegmentAux_dll$(OBJEXT)" "$(INTDIR)\SegmentAux_dll$(SBREXT)" : "src/segment/SegmentAux.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" $(CPP_DEBUG) /Fo"$(INTDIR)\SegmentAux_dll$(OBJEXT)" $?
	
!ELSE
"$(INTDIR)\SegmentAux$(OBJEXT)" : "src/segment/SegmentAux.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\SegmentAux$(OBJEXT)" $?
	
"$(INTDIR)\SegmentAux_dll$(OBJEXT)" : "src/segment/SegmentAux.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" /Fo"$(INTDIR)\SegmentAux_dll$(OBJEXT)" $?
	
!ENDIF

!IF "$(CFG)" == "DEBUG"
"$(INTDIR)\TestFSM$(OBJEXT)" "$(INTDIR)\TestFSM$(SBREXT)" : "src/segment/TestFSM.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\TestFSM$(OBJEXT)" $?

"$(INTDIR)\TestFSM_dll$(OBJEXT)" "$(INTDIR)\TestFSM_dll$(SBREXT)" : "src/segment/TestFSM.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" $(CPP_DEBUG) /Fo"$(INTDIR)\TestFSM_dll$(OBJEXT)" $?
	
!ELSE
"$(INTDIR)\TestFSM$(OBJEXT)" : "src/segment/TestFSM.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\TestFSM$(OBJEXT)" $?
	
"$(INTDIR)\TestFSM_dll$(OBJEXT)" : "src/segment/TestFSM.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" /Fo"$(INTDIR)\TestFSM_dll$(OBJEXT)" $?
	
!ENDIF

!IF "$(CFG)" == "DEBUG"
"$(INTDIR)\TestPasses$(OBJEXT)" "$(INTDIR)\TestPasses$(SBREXT)" : "src/segment/TestPasses.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\TestPasses$(OBJEXT)" $?

"$(INTDIR)\TestPasses_dll$(OBJEXT)" "$(INTDIR)\TestPasses_dll$(SBREXT)" : "src/segment/TestPasses.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" $(CPP_DEBUG) /Fo"$(INTDIR)\TestPasses_dll$(OBJEXT)" $?
	
!ELSE
"$(INTDIR)\TestPasses$(OBJEXT)" : "src/segment/TestPasses.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\TestPasses$(OBJEXT)" $?
	
"$(INTDIR)\TestPasses_dll$(OBJEXT)" : "src/segment/TestPasses.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" /Fo"$(INTDIR)\TestPasses_dll$(OBJEXT)" $?
	
!ENDIF

!IF "$(CFG)" == "DEBUG"
"$(INTDIR)\TransductionLog$(OBJEXT)" "$(INTDIR)\TransductionLog$(SBREXT)" : "src/segment/TransductionLog.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\TransductionLog$(OBJEXT)" $?

"$(INTDIR)\TransductionLog_dll$(OBJEXT)" "$(INTDIR)\TransductionLog_dll$(SBREXT)" : "src/segment/TransductionLog.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" $(CPP_DEBUG) /Fo"$(INTDIR)\TransductionLog_dll$(OBJEXT)" $?
	
!ELSE
"$(INTDIR)\TransductionLog$(OBJEXT)" : "src/segment/TransductionLog.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\TransductionLog$(OBJEXT)" $?
	
"$(INTDIR)\TransductionLog_dll$(OBJEXT)" : "src/segment/TransductionLog.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" /Fo"$(INTDIR)\TransductionLog_dll$(OBJEXT)" $?
	
!ENDIF

#!IF "$(CFG)" == "DEBUG"
#"$(INTDIR)\XmlTransductionLog$(OBJEXT)" "$(INTDIR)\XmlTransductionLog$(SBREXT)" : "src/segment/XmlTransductionLog.cpp"
#	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\XmlTransductionLog$(OBJEXT)" $?
#
#"$(INTDIR)\XmlTransductionLog_dll$(OBJEXT)" "$(INTDIR)\XmlTransductionLog_dll$(SBREXT)" : "src/segment/XmlTransductionLog.cpp"
#	@- $(CPP) $(CPPFLAGS) /D "_DLL" $(CPP_DEBUG) /Fo"$(INTDIR)\XmlTransductionLog_dll$(OBJEXT)" $?
#	
#!ELSE
#"$(INTDIR)\XmlTransductionLog$(OBJEXT)" : "src/segment/XmlTransductionLog.cpp"
#	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\XmlTransductionLog$(OBJEXT)" $?
#	
#"$(INTDIR)\XmlTransductionLog_dll$(OBJEXT)" : "src/segment/XmlTransductionLog.cpp"
#	@- $(CPP) $(CPPFLAGS) /D "_DLL" /Fo"$(INTDIR)\XmlTransductionLog_dll$(OBJEXT)" $?
#	
#!ENDIF

!IF "$(CFG)" == "DEBUG"
"$(INTDIR)\Platform$(OBJEXT)" "$(INTDIR)\Platform$(SBREXT)" : "src/segment/Platform.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\Platform$(OBJEXT)" $?

"$(INTDIR)\Platform_dll$(OBJEXT)" "$(INTDIR)\Platform_dll$(SBREXT)" : "src/segment/Platform.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" $(CPP_DEBUG) /Fo"$(INTDIR)\Platform_dll$(OBJEXT)" $?
	
!ELSE
"$(INTDIR)\Platform$(OBJEXT)" : "src/segment/Platform.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\Platform$(OBJEXT)" $?
	
"$(INTDIR)\Platform_dll$(OBJEXT)" : "src/segment/Platform.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" /Fo"$(INTDIR)\Platform_dll$(OBJEXT)" $?
	
!ENDIF

!IF "$(CFG)" == "DEBUG"
"$(INTDIR)\SegmentPainter$(OBJEXT)" "$(INTDIR)\SegmentPainter$(SBREXT)" : "src/painter/SegmentPainter.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\SegmentPainter$(OBJEXT)" $?

"$(INTDIR)\SegmentPainter_dll$(OBJEXT)" "$(INTDIR)\SegmentPainter_dll$(SBREXT)" : "src/painter/SegmentPainter.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" $(CPP_DEBUG) /Fo"$(INTDIR)\SegmentPainter_dll$(OBJEXT)" $?
	
!ELSE
"$(INTDIR)\SegmentPainter$(OBJEXT)" : "src/painter/SegmentPainter.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\SegmentPainter$(OBJEXT)" $?
	
"$(INTDIR)\SegmentPainter_dll$(OBJEXT)" : "src/painter/SegmentPainter.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" /Fo"$(INTDIR)\SegmentPainter_dll$(OBJEXT)" $?
	
!ENDIF

!IF "$(CFG)" == "DEBUG"
"$(INTDIR)\WinSegmentPainter$(OBJEXT)" "$(INTDIR)\WinSegmentPainter$(SBREXT)" : "..\wrappers\win32\WinSegmentPainter.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\WinSegmentPainter$(OBJEXT)" $?

"$(INTDIR)\WinSegmentPainter_dll$(OBJEXT)" "$(INTDIR)\WinSegmentPainter_dll$(SBREXT)" : "..\wrappers\win32\WinSegmentPainter.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" $(CPP_DEBUG) /Fo"$(INTDIR)\WinSegmentPainter_dll$(OBJEXT)" $?
	
!ELSE
"$(INTDIR)\WinSegmentPainter$(OBJEXT)" : "..\wrappers\win32\WinSegmentPainter.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\WinSegmentPainter$(OBJEXT)" $?
	
"$(INTDIR)\WinSegmentPainter_dll$(OBJEXT)" : "..\wrappers\win32\WinSegmentPainter.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" /Fo"$(INTDIR)\WinSegmentPainter_dll$(OBJEXT)" $?
	
!ENDIF


!IF "$(CFG)" == "DEBUG"
"$(INTDIR)\WinFont$(OBJEXT)" "$(INTDIR)\WinFont$(SBREXT)" : "../wrappers/win32/WinFont.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\WinFont$(OBJEXT)" $?

"$(INTDIR)\WinFont_dll$(OBJEXT)" "$(INTDIR)\WinFont_dll$(SBREXT)" : "../wrappers/win32/WinFont.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" $(CPP_DEBUG) /Fo"$(INTDIR)\WinFont_dll$(OBJEXT)" $?
	
!ELSE
"$(INTDIR)\WinFont$(OBJEXT)" : "../wrappers/win32/WinFont.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\WinFont$(OBJEXT)" $?
	
"$(INTDIR)\WinFont_dll$(OBJEXT)" : "../wrappers/win32/WinFont.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" /Fo"$(INTDIR)\WinFont_dll$(OBJEXT)" $?
	
!ENDIF


!IF "$(CFG)" == "DEBUG"
"$(INTDIR)\FileFont$(OBJEXT)" "$(INTDIR)\FileFont$(SBREXT)" : "src/font/FileFont.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\FileFont$(OBJEXT)" $?

"$(INTDIR)\FileFont_dll$(OBJEXT)" "$(INTDIR)\FileFont_dll$(SBREXT)" : "src/font/FileFont.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" $(CPP_DEBUG) /Fo"$(INTDIR)\FileFont_dll$(OBJEXT)" $?
	
!ELSE
"$(INTDIR)\FileFont$(OBJEXT)" : "src/font/FileFont.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\FileFont$(OBJEXT)" $?
	
"$(INTDIR)\FileFont_dll$(OBJEXT)" : "src/font/FileFont.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" /Fo"$(INTDIR)\FileFont_dll$(OBJEXT)" $?
	
!ENDIF


!IF "$(CFG)" == "DEBUG"
"$(INTDIR)\..\wrappers\win32\win32_dll$(OBJEXT)" "$(INTDIR)\win32_dll$(SBREXT)" : "..\wrappers\win32\win32_dll.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\win32_dll$(OBJEXT)" $?

"$(INTDIR)\win32_dll_dll$(OBJEXT)" "$(INTDIR)\win32_dll_dll$(SBREXT)" : "..\wrappers\win32\win32_dll.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" $(CPP_DEBUG) /Fo"$(INTDIR)\win32_dll_dll$(OBJEXT)" $?
	
!ELSE
"$(INTDIR)\win32_dll$(OBJEXT)" : "..\wrappers\win32\win32_dll.cpp"
	@- $(CPP) $(CPPFLAGS) $(CPP_DEBUG) /Fo"$(INTDIR)\win32_dll$(OBJEXT)" $?
	
"$(INTDIR)\win32_dll_dll$(OBJEXT)" : "..\wrappers\win32\win32_dll.cpp"
	@- $(CPP) $(CPPFLAGS) /D "_DLL" /Fo"$(INTDIR)\win32_dll_dll$(OBJEXT)" $?
	
!ENDIF

bsc : "$(OUTDIR)/$(TARGET).bsc"

"$(OUTDIR)/$(TARGET).bsc" : "$(OUTDIR)" $(BSC32_SBRS)
	$(BSC32) @<<
  $(BSC32_FLAGS) $(BSC32_SBRS)
<<

dll : $(OUTDIR)/$(TARGET).dll

"$(OUTDIR)/$(TARGET).dll" : "$(OUTDIR)" $(DEF_FILE) lib_dll $(DLL_LINK_OBJS)
	$(LINK) $(LINK_FLAGS) $(LINK_DEBUG) $(OUTDIR)/$(TARGET)_dll.lib $(DLL_LINK_OBJS)

