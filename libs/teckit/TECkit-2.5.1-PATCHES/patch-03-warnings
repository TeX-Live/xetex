	Avoid more compiler warnings.

diff -ur TECkit-2.5.1.orig/source/Compiler.cpp TECkit-2.5.1/source/Compiler.cpp
--- TECkit-2.5.1.orig/source/Compiler.cpp	2008-11-17 21:06:09.000000000 +0100
+++ TECkit-2.5.1/source/Compiler.cpp	2009-10-01 22:06:09.000000000 +0200
@@ -191,14 +191,14 @@
 		free(table);
 }
 
-char*
+const char*
 WINAPI
 TECkit_GetUnicodeName(UInt32 usv)
 {
 	const CharName	*c = &gUnicodeNames[0];
 	while (c->name != 0)
 		if (c->usv == usv)
-			return (char*)c->name;
+			return c->name;
 		else
 			++c;
 	return NULL;
@@ -263,13 +263,13 @@
 	return -1;
 }
 
-static inline UInt8
+inline UInt8
 READ(const UInt8 p)
 {
 	return p;
 }
 
-static inline UInt16
+inline UInt16
 READ(const UInt16 p)
 {
 #ifdef WORDS_BIGENDIAN
@@ -279,7 +279,7 @@
 #endif
 }
 
-static inline UInt32
+inline UInt32
 READ(const UInt32 p)
 {
 #ifdef WORDS_BIGENDIAN
@@ -290,7 +290,7 @@
 }
 
 template<class T>
-inline static void
+inline void
 WRITE(T& t, UInt32 v)
 {
 	t = READ(T(v));
@@ -2133,7 +2133,7 @@
 		cout << " at line " << line << endl;
 	}
 	else
-		(*errorFunction)(errFuncUserData, (char*)msg, (char*)s, line);
+		(*errorFunction)(errFuncUserData, msg, s, line);
 	errorState = true;
 	++errorCount;
 }
diff -ur TECkit-2.5.1.orig/source/Engine.cpp TECkit-2.5.1/source/Engine.cpp
--- TECkit-2.5.1.orig/source/Engine.cpp	2008-04-07 16:21:12.000000000 +0200
+++ TECkit-2.5.1/source/Engine.cpp	2009-10-01 22:17:12.000000000 +0200
@@ -76,13 +76,13 @@
 using namespace std;
 
 /* we apply READ to values read from the compiled table, to provide byte-swapping where needed */
-static inline UInt8
+inline UInt8
 READ(const UInt8 p)
 {
 	return p;
 }
 
-static inline UInt16
+inline UInt16
 READ(const UInt16 p)
 {
 #ifdef WORDS_BIGENDIAN
@@ -92,7 +92,7 @@
 #endif
 }
 
-static inline UInt32
+inline UInt32
 READ(const UInt32 p)
 {
 #ifdef WORDS_BIGENDIAN
@@ -1087,7 +1087,7 @@
 			if (matchElems == 0 && allowInsertion == false)
 				continue;
 			patternLength = matchElems + READ(rule->postLength);
-			pattern = (MatchElem*)(rule + 1);	// point past the defined struct for the rule header
+			pattern = (const MatchElem*)(rule + 1);	// point past the defined struct for the rule header
 			direction = 1;
 			infoLimit = matchElems;
 
@@ -2185,7 +2185,7 @@
 				status = kStatus_BadMappingVersion;
 			else {
 				const Byte*	namePtr;
-				if (getNamePtrFromTable((Byte*)fh, nameID, namePtr, *nameLength)) {
+				if (getNamePtrFromTable((const Byte*)fh, nameID, namePtr, *nameLength)) {
 					UInt16	copyBytes = *nameLength < bufferSize ? *nameLength : bufferSize;
 					if (copyBytes > 0)
 						memcpy(nameBuffer, namePtr, copyBytes);
diff -ur TECkit-2.5.1.orig/source/Engine.h TECkit-2.5.1/source/Engine.h
--- TECkit-2.5.1.orig/source/Engine.h	2008-04-07 16:21:12.000000000 +0200
+++ TECkit-2.5.1/source/Engine.h	2009-10-01 22:16:40.000000000 +0200
@@ -117,7 +117,7 @@
 
 	UInt32				match(int index, int repeats, int textLoc);
 								// returns 0 for no match, 1 for match, or kNeedMoreInput/kInvalidChar
-	MatchElem*			pattern;
+	const MatchElem*			pattern;
 	int					patternLength;
 	int					direction;
 	MatchInfo			info[256];
diff -ur TECkit-2.5.1.orig/source/Public-headers/TECkit_Compiler.h TECkit-2.5.1/source/Public-headers/TECkit_Compiler.h
--- TECkit-2.5.1.orig/source/Public-headers/TECkit_Compiler.h	2008-04-07 16:21:12.000000000 +0200
+++ TECkit-2.5.1/source/Public-headers/TECkit_Compiler.h	2009-10-01 22:03:59.000000000 +0200
@@ -56,7 +56,7 @@
 #define kCompilerOpts_Compress	0x00000010	/* generate compressed mapping table */
 #define kCompilerOpts_XML		0x00000020	/* instead of a compiled binary table, generate an XML representation of the mapping */
 
-typedef void (CALLBACK *TECkit_ErrorFn)(void* userData, char* msg, char* param, UInt32 line);
+typedef void (CALLBACK *TECkit_ErrorFn)(void* userData, const char* msg, const char* param, UInt32 line);
 
 TECkit_Status
 WINAPI EXPORTED
@@ -75,7 +75,7 @@
 TECkit_GetCompilerVersion();
 
 /* new APIs for looking up Unicode names (as NUL-terminated C strings) */
-char*
+const char*
 WINAPI EXPORTED
 TECkit_GetUnicodeName(UInt32 usv);
 	/* returns the Unicode name of usv, if available, else NULL */
diff -ur TECkit-2.5.1.orig/source/Sample-tools/TECkit_Compile.cpp TECkit-2.5.1/source/Sample-tools/TECkit_Compile.cpp
--- TECkit-2.5.1.orig/source/Sample-tools/TECkit_Compile.cpp	2008-04-07 16:21:12.000000000 +0200
+++ TECkit-2.5.1/source/Sample-tools/TECkit_Compile.cpp	2009-10-01 22:00:14.000000000 +0200
@@ -24,13 +24,13 @@
 #endif
 
 extern "C" {
-	static void CALLBACK errFunc(void* userData, char* msg, char* param, UInt32 line);
+	static void CALLBACK errFunc(void* userData, const char* msg, const char* param, UInt32 line);
 };
 
 static
 void
 CALLBACK
-errFunc(void* userData, char* msg, char* param, UInt32 line)
+errFunc(void* userData, const char* msg, const char* param, UInt32 line)
 {
 #pragma unused(userData)
 
