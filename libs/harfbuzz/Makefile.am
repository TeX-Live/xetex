## Proxy Makefile.am to build harfbuzz for TeX Live.
##
##   Copyright (C) 2012 Peter Breitenlohner <tex-live@tug.org>
##
##   This file is free software; the copyright holder
##   gives unlimited permission to copy and/or distribute it,
##   with or without modifications, as long as this notice is preserved.
##
ACLOCAL_AMFLAGS = -I ../../m4

# Rebuild
.PHONY: rebuild
rebuild: all

## We want to re-distribute the whole original harfbuzz source tree.
##
EXTRA_DIST = $(HARFBUZZ_TREE)

## Changes applied to the original source tree
##
EXTRA_DIST += $(HARFBUZZ_TREE)-PATCHES

HARFBUZZ_SRC = $(HARFBUZZ_TREE)/src

# in case of an SVN repository
dist-hook:
	rm -rf `find $(distdir) -name .svn`
	rm -f $(distdir)/$(HARFBUZZ_SRC)/harfbuzz-version.h

SUBDIRS = . include

noinst_LIBRARIES = libharfbuzz.a

## common
AM_CPPFLAGS = -DHB_NO_MT -I$(top_srcdir)/$(HARFBUZZ_SRC)
libharfbuzz_dependencies =
libharfbuzz_a_SOURCES =  \
	$(HARFBUZZ_SRC)/hb-atomic-private.hh \
	$(HARFBUZZ_SRC)/hb-blob.cc \
	$(HARFBUZZ_SRC)/hb-buffer-private.hh \
	$(HARFBUZZ_SRC)/hb-buffer.cc \
	$(HARFBUZZ_SRC)/hb-cache-private.hh \
	$(HARFBUZZ_SRC)/hb-common.cc \
	$(HARFBUZZ_SRC)/hb-fallback-shape.cc \
	$(HARFBUZZ_SRC)/hb-font-private.hh \
	$(HARFBUZZ_SRC)/hb-font.cc \
	$(HARFBUZZ_SRC)/hb-mutex-private.hh \
	$(HARFBUZZ_SRC)/hb-object-private.hh \
	$(HARFBUZZ_SRC)/hb-open-file-private.hh \
	$(HARFBUZZ_SRC)/hb-open-type-private.hh \
	$(HARFBUZZ_SRC)/hb-ot-head-table.hh \
	$(HARFBUZZ_SRC)/hb-ot-hhea-table.hh \
	$(HARFBUZZ_SRC)/hb-ot-hmtx-table.hh \
	$(HARFBUZZ_SRC)/hb-ot-maxp-table.hh \
	$(HARFBUZZ_SRC)/hb-ot-name-table.hh \
	$(HARFBUZZ_SRC)/hb-ot-tag.cc \
	$(HARFBUZZ_SRC)/hb-private.hh \
	$(HARFBUZZ_SRC)/hb-set-private.hh \
	$(HARFBUZZ_SRC)/hb-set.cc \
	$(HARFBUZZ_SRC)/hb-shape.cc \
	$(HARFBUZZ_SRC)/hb-shape-plan-private.hh \
	$(HARFBUZZ_SRC)/hb-shape-plan.cc \
	$(HARFBUZZ_SRC)/hb-shaper-list.hh \
	$(HARFBUZZ_SRC)/hb-shaper-impl-private.hh \
	$(HARFBUZZ_SRC)/hb-shaper-private.hh \
	$(HARFBUZZ_SRC)/hb-shaper.cc \
	$(HARFBUZZ_SRC)/hb-tt-font.cc \
	$(HARFBUZZ_SRC)/hb-unicode-private.hh \
	$(HARFBUZZ_SRC)/hb-unicode.cc \
	$(HARFBUZZ_SRC)/hb-utf-private.hh \
	$(HARFBUZZ_SRC)/hb-warning.cc

## native OpenType Layout backend
libharfbuzz_a_SOURCES += \
	$(HARFBUZZ_SRC)/hb-ot-layout.cc \
	$(HARFBUZZ_SRC)/hb-ot-layout-common-private.hh \
	$(HARFBUZZ_SRC)/hb-ot-layout-gdef-table.hh \
	$(HARFBUZZ_SRC)/hb-ot-layout-gpos-table.hh \
	$(HARFBUZZ_SRC)/hb-ot-layout-gsubgpos-private.hh \
	$(HARFBUZZ_SRC)/hb-ot-layout-gsub-table.hh \
	$(HARFBUZZ_SRC)/hb-ot-layout-private.hh \
	$(HARFBUZZ_SRC)/hb-ot-map.cc \
	$(HARFBUZZ_SRC)/hb-ot-map-private.hh \
	$(HARFBUZZ_SRC)/hb-ot-shape.cc \
	$(HARFBUZZ_SRC)/hb-ot-shape-complex-arabic.cc \
	$(HARFBUZZ_SRC)/hb-ot-shape-complex-arabic-fallback.hh \
	$(HARFBUZZ_SRC)/hb-ot-shape-complex-arabic-table.hh \
	$(HARFBUZZ_SRC)/hb-ot-shape-complex-default.cc \
	$(HARFBUZZ_SRC)/hb-ot-shape-complex-indic.cc \
	$(HARFBUZZ_SRC)/hb-ot-shape-complex-indic-machine.hh \
	$(HARFBUZZ_SRC)/hb-ot-shape-complex-indic-private.hh \
	$(HARFBUZZ_SRC)/hb-ot-shape-complex-indic-table.hh \
	$(HARFBUZZ_SRC)/hb-ot-shape-complex-thai.cc \
	$(HARFBUZZ_SRC)/hb-ot-shape-complex-private.hh \
	$(HARFBUZZ_SRC)/hb-ot-shape-normalize-private.hh \
	$(HARFBUZZ_SRC)/hb-ot-shape-normalize.cc \
	$(HARFBUZZ_SRC)/hb-ot-shape-fallback-private.hh \
	$(HARFBUZZ_SRC)/hb-ot-shape-fallback.cc \
	$(HARFBUZZ_SRC)/hb-ot-shape-private.hh

## ICU library
AM_CPPFLAGS += $(ICU_INCLUDES)
libharfbuzz_dependencies += $(ICU_DEPEND)
libharfbuzz_a_SOURCES += $(HARFBUZZ_SRC)/hb-icu.cc

## Graphite library
## not yet AM_CPPFLAGS += $(GRAPHITE2_INCLUDES)
## not yet libharfbuzz_dependencies += $(GRAPHITE2_DEPEND)
## not yet libharfbuzz_a_SOURCES += $(HARFBUZZ_SRC)/hb-graphite2.cc

## FreeType 2 library
AM_CPPFLAGS += $(FREETYPE2_INCLUDES)
libharfbuzz_dependencies += $(FREETYPE2_DEPEND)
libharfbuzz_a_SOURCES += $(HARFBUZZ_SRC)/hb-ft.cc

$(libharfbuzz_a_OBJECTS): config.force

config.force: $(libharfbuzz_dependencies)
	echo timestamp >config.force
	$(SHELL) ./config.status --recheck

DISTCLEANFILES = config.force

## Rebuild libsicuxxx
@ICU_RULE@
## Rebuild libgraphite2
## not yet @GRAPHITE2_RULE@
## Rebuild libfreetype
@FREETYPE2_RULE@

##if build
## check_PROGRAMS = 
## dist_check_SCRIPTS = harfbuzz.test
## TESTS = harfbuzz.test
## endif build

LDADD = libharfbuzz.a

## Files generated by TESTS

