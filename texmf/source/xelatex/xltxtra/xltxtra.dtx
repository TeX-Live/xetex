% \iffalse
%<*internal>
\iffalse
%</internal>
%<*readme>
------------------------
THE XLTXTRA PACKAGE v0.3

This package provides a few small features that 
are useful for XeLaTeX.

It loads the fixltx2e and etex packages and
patches a couple of other LaTeX commands: 
 \-: for discretionary hyphenation with variable
     hyphenation characters, and 
 \textsuperscript & \textsubscript:
     now use fontspec to access
     real superior/inferior characters,
 \emph: uses NFSS information to determine
     when to enter \eminnershape,
 \showhyphens: now works.

Defines logos \XeTeX and \XeLaTeX.

Defines the dubiously useful commands
 \vfrac - for vulgar fractions with fontspec
 \namedglyph - to access font glyphs by name
 
For more info see the documentation xltxtra.pdf.

--------------
Will Robertson
2006/2007
Distributed under the LaTeX Project Public License
%</readme>
%<*internal>
\fi
%</internal>
%
%<*internal>
\begingroup
%</internal>
%<*batchfile>
\input docstrip.tex
\keepsilent
\preamble

  ____________________________
  The xltxtra package         
  (C) 2006/2007  Will Robertson    
  License information appended


\endpreamble
\postamble

Copyright (C) 2006/2007 by Will Robertson <wspr81@gmail.com>

Distributable under the LaTeX Project Public License,
version 1.3c or higher (your choice). The latest version of
this license is at: http://www.latex-project.org/lppl.txt

This work is "maintained" (as per LPPL maintenance status) 
by Will Robertson.

This work consists of the file  \jobname.dtx
          and the derived files \jobname.sty and \jobname.pdf.

\endpostamble
\askforoverwritefalse
\generate{\file{\jobname.sty}{\from{\jobname.dtx}{package}}}
%</batchfile>
%<batchfile>\endbatchfile
%<*internal>
\generate{\file{\jobname.ins}{\from{\jobname.dtx}{batchfile}}}
\nopreamble\nopostamble
\generate{\file{README.txt}{\from{\jobname.dtx}{readme}}}
\generate{\file{dtx-style.sty}{\from{\jobname.dtx}{dtx-style}}}
\endgroup
\immediate\write18{makeindex -s gind.ist -o \jobname.ind  \jobname.idx}
\immediate\write18{makeindex -s gglo.ist -o \jobname.gls  \jobname.glo}
%</internal>
%
%<*driver>
\documentclass[12pt]{ltxdoc}
\EnableCrossrefs
\CodelineIndex
\RecordChanges
%\OnlyDescription
\usepackage{dtx-style}
\begin{document}
  \DocInput{\jobname.dtx}
\end{document}
%</driver>
%
% \fi
%
% \errorcontextlines=999
% \makeatletter
%
% \GetFileInfo{\jobname.sty}
%
% \title{The \pkg{\jobname} package}
% \author{Will Robertson}
% \date{\filedate \qquad \fileversion}
%
% \maketitle
%
% \section{Introduction}
%
% This document describes the \pkg{xltxtra} package. 
% It implements some odds-and-ends features and
% improved functionality for broken or sub-standard \LaTeX\ methods when using the
% \XeTeX\ format.
%
% \subsection{Usage}
% Easy: |\usepackage{xltxtra}|. This package automatically loads the following packages: \pkg{fixltx2e}, \pkg{etex}, \pkg{xunicode}, \pkg{fontspec}.
%
% There are some package options to disable various functionality that could clash with other things:
% \begin{description}[font=\ttfamily]
% \item[no-sscript] Swaps the definitions of \cmd\textsubscript\ and \cmd\textsuperscript\ with their respective starred versions, as described in \secref{sscript}.
% \item[no-emph] Disables the redefinition of \cmd\emph\ and \cmd\em\ described in \secref{emph}.
% \item[no-logos] Disables the redefinition of \cmd\TeX, etc. described in \secref{logos}, but \emph{does} still define the \cmd\XeTeX\ and \cmd\XeLaTeX\ logo commands.
% \item[no-hyphen] Disables the redefinition of \cmd\-\ (probably harmless anyway) described in \secref{hyphen}.
% \end{description}
%
% \section{Features}
%
% \subsection{\cmd\textsuperscript\ and \cmd\textsubscript}
% \seclabel{sscript}
%
% These two macros have been redefined to take advantage, if possible, of actual superior or inferior glyphs in the main document font. This is very important for high-quality typesetting — compare this first example to the third; yes, they are the same font.
% \begin{quotation}\color{niceblue}
%	\fontspec{Hoefler Text}
%	  |\textsuperscript     | \textsuperscript{abcdefghijklmnopqrstuvwxyz1234567890}\par
%	  |\textsubscript       | \textsubscript{abcdefghijklmnopqrstuvwxyz1234567890}
% \end{quotation}
% But will fall back on `faked' ones if they don't exist: 
% (this is {\fontspec{Didot} Didot})
% \begin{quotation}\color{niceblue}
%	\fontspec{Didot}
%	  |\textsuperscript     | \textsuperscript{abcdefghijklmnopqrstuvwxyz1234567890}\par
%	  |\textsubscript       | \textsubscript{abcdefghijklmnopqrstuvwxyz1234567890}
% \end{quotation}
% The original definitions are available in starred verions of the commands:
% \begin{quotation}\color{niceblue}
%	\fontspec{Hoefler Text}
%	  |\textsuperscript*    | \textsuperscript*{abcdefghijklmnopqrstuvwxyz1234567890}\par
%	  |\textsubscript*      | \textsubscript*{abcdefghijklmnopqrstuvwxyz1234567890}
% \end{quotation}
% But beware fonts lacking the full repertoire: (this is Adobe Jenson Pro)
% \begin{quotation}\color{niceblue}
%	\fontspec{Adobe Jenson Pro}
%	  |\textsuperscript     | \makebox[0pt][l]{\textsuperscript{abcdefghijklmnopqrstuvwxyz1234567890}}\par
%	  |\textsubscript       | \makebox[0pt][l]{\textsubscript{abcdefghijklmnopqrstuvwxyz1234567890}}
% \end{quotation}
%
% The \pkgopt{no-sscript} will swap the definitions of the starred and non-starred versions of the commands described above if the new definitions are undesirable.
%
% The macros
% \cmd\realsubscript, 
% \cmd\realsuperscript, 
% \cmd\fakesubscript, and 
% \cmd\fakesuperscript\
% may be used to access the `new' and `old' functionalities regardless of the \pkgopt{no-sscript}.
%
% \subsection{Inner emphasis}
% \seclabel{emph}
%
% \pkg{fixltx2e}'s method for checking for ``inner'' emphasis is a little fragile in \XeTeX, because
% font slant information might be missing from the font. Therefore, we use \LaTeX's \acro{NFSS}
% information, which is more likely to be correct.
%
% \begin{example}
%   \renewcommand\eminnershape{\scshape}
%   \fontspec{Didot}
%   Nested {\em emphasis is 
%               \emph{now} fixed.}
% \end{example}
%
% The \pkgopt{no-emph} will disable this redefinition.
%
% \subsection{Unicode footnote symbols}
% By default \LaTeX\ defines symbolic footnote characters in terms of commands 
% that don't resolve well; better results can be achieved by using specific unicode characters or proper LICRs with the \pkg{xunicode} package.
%
% This problem has been solved by loading the 
% \pkg{fixltx2e} and \pkg{xunicode} packages in \pkg{xltxtra}.
%
% \subsection{Logos}
% \seclabel{logos}
%
% This part of the package essentially exists to define the \cmd\XeTeX\ and \cmd\XeLaTeX\ logos. Here're some examples. The default:
% \begin{example}
%   \TeX\ \XeTeX\ \LaTeX\ \XeLaTeX
% \end{example}
% \noindent Notice it's a bit tight compared to not using Computer Modern, for which the logos were designed:
% \begin{example}
%   \usefont{OT1}{cmr}{m}{n}
%   \TeX\ \XeTeX\ \LaTeX\ \XeLaTeX
% \end{example}
%
% Look in the implementation corresponding to this section to see how to customise the spacings in these logos, but be warned it's fairly crude and may change in the future.
%
% The \pkgopt{no-logos} will not redefine \cmd\TeX\ or \cmd\LaTeX\ but will still define \cmd\XeTeX\ and \cmd\XeLaTeX. (The only advantage for not doing this is more consistency when customising the spacing, which isn't really recommended anyway\dots)
% 
% \subsection{Discrectionary hyphenation: \cmd\-}
% \seclabel{hyphen}
%
% \LaTeX\ defines the macro \cmd\-\ to insert discretionary hyphenation points.
% However, it is hard-coded in \LaTeX\ to use the hyphen |-| character. Since \pkg{fontspec}
% makes it easy to change the hyphenation character on a per font basis, it would
% be nice if \cmd\-\ adjusted automatically — and now it does.
%
% \subsection{Vulgar fractions}
% The \cmd\vfrac\ command for setting `vulgar' fractions based on AAT or OpenType font features. Not really recommended for many purposes, depending on your text, but it's a good example of how to program such things using \pkg{fontspec}.
% \begin{example}
%   \fontspec{Hoefler Text}
%   AAT: \vfrac{123}{456}\par
%   \fontspec{Warnock Pro}
%   ICU: \vfrac{123}{456}
% \end{example}
% \noindent (This can be achieved in regular \LaTeX\ with the \pkg{nicefrac} package, but don't believe its name: these fractions aren't nice!)
%
% Only use it when you know it will work; no warnings are given if the font doesn't support it.
%
% \subsection{Named glyphs}
% Along the way somewhere, \XeTeX\ added support for selecting glyphs from a TrueType-based OpenType font based on their internal glyph name. Jonathan Kew posted the following definition as a nice interface to it.
% \begin{example}
%   \fontspec{Charis SIL}
%   \namedglyph{yen}
%   \namedglyph{smile}
% \end{example}
%
% \subsection{The \cmd\showhyphens\ command}
% The default definition doesn't work in \XeTeX. 
% A new version, written by Jonathan Kew, is included in the package that \emph{does} work. Minor differences with the original: the showing of hyphens in the console output will be marked with explanatory text. Also, multiple words, separated by commas, will end up in separate instances of `showing hyphens'.
% \showhyphens{discomedusoid, discommodiousness}
%
% \part{The \textsf{xltxtra} package}
%\iffalse
%<*package>
%\fi
% This is the package implementation.
%
%    \begin{macrocode}
\ProvidesPackage{xltxtra}
  [2007/05/30 v0.3 Improvements for the "XeLaTeX" format]  
%    \end{macrocode}
%
% \changes{v0.3}{2007/05/29}{Added proper documentation.}
% \changes{v0.3}{2007/05/29}{Added \texttt{no-} package options to restrict functionality.}
% \PrintChanges
%
% \paragraph{Option processing}
%    \begin{macrocode}
\newif\if@xxt@nosscript@
\newif\if@xxt@nologos@
\newif\if@xxt@nohyphen@
\newif\if@xxt@noemph@
\DeclareOption{no-sscript}{\@xxt@nosscript@true}
\DeclareOption{no-logos}{\@xxt@nologos@true}
\DeclareOption{no-hyphen}{\@xxt@nohyphen@true}
\DeclareOption{no-emph}{\@xxt@noemph@true}
\ProcessOptions*
%    \end{macrocode}
%
% \paragraph{Required packages}
%    \begin{macrocode}
\RequirePackage{ifxetex}
\RequireXeTeX
\RequirePackage{graphicx}
\RequirePackage{fontspec}
\RequirePackage{xunicode}
%    \end{macrocode}
%
% \section{Programmming bits and pieces}
%
% \section{Logos}
% \DescribeMacro{\XeTeX}
% \DescribeMacro{\XeLaTeX}
% The \TeX-related logos people insist upon using need to be tuned
% on a per-font  basis. This package will (might!) eventually allow this,
% but for now, it's baby steps. The \XeTeX\ and \XeLaTeX\ logos
% are provided.
%
% The various \TeX-like logos that extend outside the regular
% vertical alphabetic bounds of running text have the unfortunate
% side-effects in \XeTeX\ of often overrunning the \cmd\baselineskip.
% Putting the logos in zero-height boxes prevents this problem.
% Actually, this problem doesn't happen anymore.
%
% \noindent To do:
% \begin{itemize}[noitemsep]
% \item adapt \cmd\LaTeX\ to use small caps if available\dots
% \item \dots otherwise, need a scaling factor, and maybe a vertical nudge factor
% \item add other logos
% \item per-font parameters, with some defaults for common fonts
% \item add `low contrast' small caps versions, et al.
% \item probably break out the whole thing into its own package, if it works
% \end{itemize}
%
% \begin{macro}{\TeX@logo@spacing}
% \darg{Kern between T \& eX}
% \darg{Kern between Te \& X}
% \darg{Lowering amount for E in TeX}
% \darg{Kerning between L \& aTeX}
% \darg{Kerning between La \& TeX}
% \darg{Kerning between Xe \& LaTeX}
% This macro defines new \cmd\TeX\ and \cmd\XeTeX\ logos.
% Parameters must be tuned on a per-font basis:
% \begin{example}
%   \TeX@logo@spacing{-0.12em}{-0.12em}%
%     {0.5ex}{-0.3em}{-0.12em}{-0.1em}
%   \TeX\ \XeTeX\ \LaTeX\ \XeLaTeX
% \end{example}
%
% \emph{Warning!} This macro will  {\fontspec{Hoefler Text Black} definitely} change in the future.
% If you care abouts backwards compatibility in your documents, copy+paste
% the definitions below rather than using \cmd\TeX@logo@spacing.
%
%    \begin{macrocode}
\newlength\xxt@kern@Te
\newlength\xxt@kern@eX
\newlength\xxt@lower@e
\newlength\xxt@kern@La
\newlength\xxt@kern@aT
\newlength\xxt@kern@eL
\newcommand*\TeX@logo@spacing[6]{%
  \setlength\xxt@kern@Te{#1}%
  \setlength\xxt@kern@eX{#2}%
  \setlength\xxt@lower@e{#3}%
  \setlength\xxt@kern@La{#4}%
  \setlength\xxt@kern@aT{#5}%  
  \setlength\xxt@kern@eL{#6}%  
}
\unless\if@xxt@nologos@
\DeclareRobustCommand\TeX{%
  \leavevmode
  \smash{%
    T\kern\xxt@kern@Te
    \lower\xxt@lower@e\hbox{E}\kern\xxt@kern@eX X}%
  \spacefactor1000\relax}
\DeclareRobustCommand{\LaTeX}{%
  \leavevmode
  \smash{%
  L\kern\xxt@kern@La 
  {\sbox\z@ T% 
    \vbox to\ht\z@{\hbox{\check@mathfonts 
      \fontsize\sf@size\z@ 
      \math@fontsfalse\selectfont 
      A}% 
    \vss}% 
  }% 
  \kern\xxt@kern@aT
  \TeX}}  
\fi
\DeclareRobustCommand\XeTeX{%
  \leavevmode
  \smash{%
   X\lower\xxt@lower@e
   \hbox{\kern\xxt@kern@eX
     \ifnum\XeTeXfonttype\font>0
       \ifnum\XeTeXcharglyph"018E>0
         \char"018E\relax
       \else
         \ifdim\fontdimen1\font=0pt
           \reflectbox{E}%
         \else
           \XeTeXuseglyphmetrics=1%
           \setbox0=\hbox{E}\dimen0=\ht0\advance\dimen0by\dp0%
           \raise\dimen0\hbox{\rotatebox{180}{\box0}}%
         \fi
       \fi
     \else
       \setbox0=\hbox{E}\dimen0=\ht0\advance\dimen0by\dp0%
       \raise\dimen0\hbox{\rotatebox{180}{\box0}}%
     \fi
   }\kern\xxt@kern@Te\TeX}}%
\DeclareRobustCommand\XeLaTeX{%
   \leavevmode
   \smash{%
    X\lower\xxt@lower@e
    \hbox{\kern\xxt@kern@eX
      \ifnum\XeTeXfonttype\font>0\relax
        \ifnum\XeTeXcharglyph"018E>0\relax
          \char"018E\relax
        \else
          \ifdim\fontdimen1\font=0pt\relax
            \reflectbox{E}%
          \else
            \XeTeXuseglyphmetrics=1\relax
            \setbox0=\hbox{E}\dimen0=\ht0\advance\dimen0by\dp0\relax
            \raise\dimen0\hbox{\rotatebox{180}{\box0}}%
          \fi
        \fi
      \else
        \setbox0=\hbox{E}\dimen0=\ht0\advance\dimen0by\dp0\relax
        \raise\dimen0\hbox{\rotatebox{180}{\box0}}%        
      \fi}\kern\xxt@kern@eL\LaTeX}}
\TeX@logo@spacing{-0.15em}{-0.15em}{0.5ex}{-0.36em}{-0.15em}{-0.1em}
%    \end{macrocode}
% \changes{v0.1}{2006/05/03}{Implemented.}
% \changes{v0.2}{2006/06/11}{Added \cmd\XeLaTeX\ logo. Thanks Herb!}
% \changes{v0.2}{2006/06/11}{Added TFM font check.}
% \changes{v0.2}{2006/08/12}{\cmd\TeX@logo@spacing made ``private'' and added an arg for \cmd\XeLaTeX.}
% \end{macro}
%
% \section{\eTeX\ functionality}
% Because it's just sensible, we load the package that actually
% allows \LaTeX\ to access the extra registers, etc., provided
% by \eTeX.
%    \begin{macrocode}
\RequirePackage{etex}
%    \end{macrocode}
%
% \subsection{Unicode footnote symbols}
%    \begin{macrocode}
\RequirePackage{fixltx2e}[2006/03/24]
%    \end{macrocode}
%
% \subsection{Emph}
%    \begin{macrocode}
\unless\if@xxt@noemph@
%    \end{macrocode}
% \begin{macro}{\em}
% \begin{macro}{\emph}
% Redefinition of |{\em ...}| and |\emph{...}| to use \textsc{nfss} info to detect when the inner shape should be used.
%    \begin{macrocode}
\DeclareRobustCommand\em 
  {\@nomath\em 
   \edef\@tempa{\f@shape}%
   \edef\@tempb{\itdefault}%
   \ifx\@tempa\@tempb 
     \eminnershape 
   \else 
     \emshape 
   \fi}
\DeclareTextFontCommand{\emph}{\em}
\let\emshape\itshape
\let\eminnershape\upshape
%    \end{macrocode}
% \changes{v0.2}{2006/08/12}{Migrated from \textsf{fontspec}.}
% \end{macro} \end{macro}
%    \begin{macrocode}
\fi
%    \end{macrocode}
%
%
%
% \subsection{\cmd\-}
%    \begin{macrocode}
\unless\if@xxt@nohyphen@
%    \end{macrocode}
%
% \begin{macro}{\-}
% This macro is courtesy of Frank Mittelbach and the \LaTeXe\ source code.
%    \begin{macrocode}
\DeclareRobustCommand{\-}{%
  \discretionary{%
    \char\ifnum\hyphenchar\font<\z@
           \xlx@defaulthyphenchar
         \else
           \hyphenchar\font
         \fi}{}{}}
\def\xlx@defaulthyphenchar{`\-}
%    \end{macrocode}
% \changes{v0.1}{2006/05/03}{Implemented; from the \LaTeXe\ sources.}
% \end{macro}
%    \begin{macrocode}
\fi
%    \end{macrocode}
%
% \subsection{Subscript and superscript}
%
% For OpenType fonts, the subscript feature (|subs|) is used, but if that doesn't
% exist then the scientific inferior feature (|sinf|) is used on the assumption
% that something's better than nothing. This matches current trends in OpenType font design.
%
% Footnotes are patched to use this better \cmd\textsuperscript.
%
% \begin{macro}{\fakesubscript}
% \begin{macro}{\fakesuperscript}
% The old (`fake') methods:
%    \begin{macrocode}
\DeclareRobustCommand*\fakesubscript[1]{%
  \@textsubscript{\selectfont#1}}
\DeclareRobustCommand*\fakesuperscript[1]{% 
  \@textsuperscript{\selectfont#1}}
%    \end{macrocode}
% \changes{v0.1}{2006/05/03}{Implemented.}
% \changes{v0.3}{2007/05/29}{Name change from \cmd\fakesubscript. Made robust.}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\textsubscript}
% \begin{macro}{\textsubscript*}
% \begin{macro}{\textsuperscript}
% \begin{macro}{\textsuperscript*}
% These commands are either defined to create fake or real sub-/super-scripts if they are starred or not, respectively. This swaps if the \pkgopt{no-sscript} is in effect.
% Text subscripts:
%    \begin{macrocode}
\if@xxt@nosscript@
  \DeclareRobustCommand*\textsubscript{%
    \@ifstar{\realsubscript}{\fakesubscript}}
  \DeclareRobustCommand*\textsuperscript{%
    \@ifstar{\realsuperscript}{\fakesuperscript}}
\else
  \DeclareRobustCommand*\textsubscript{%
    \@ifstar{\fakesubscript}{\realsubscript}}
  \DeclareRobustCommand*\textsuperscript{%
    \@ifstar{\fakesuperscript}{\realsuperscript}}
\fi
%    \end{macrocode}
% \changes{v0.1}{2006/05/03}{Implemented.}
% \end{macro}\end{macro}\end{macro}
% \changes{v0.3}{2007/05/29}{Adjusted, made robust (with friends `super' and starred).}
% \end{macro}
%
% \begin{macro}{\realsubscript}
%    \begin{macrocode}
\DeclareRobustCommand*\realsubscript[1]{%
  \begingroup
    \c@zf@script 1818326126\relax
    \font\zf@basefont="\csname zf@family@fontdef\f@family\endcsname" at \f@size pt
    \zf@set@font@type
    \ifzf@atsui
      \zf@make@aat@feature@string{10}{2}%
      \unless\ifx\@tempa\@empty
        {\addfontfeature{VerticalPosition=Inferior}#1}%
      \else
        \fakesubscript{#1}%
      \fi
    \fi
    \ifzf@icu
      \zf@check@ot@feat{+subs}%
      \if@tempswa
        {\addfontfeature{VerticalPosition=Inferior}#1}%
      \else
        \zf@check@ot@feat{+sinf}%
        \if@tempswa
          {\addfontfeature{VerticalPosition=ScientificInferior}#1}%
        \else
          \fakesubscript{#1}%
        \fi
      \fi
    \fi
  \endgroup}
%    \end{macrocode}
% \changes{v0.1}{2006/05/03}{Implemented.}
% \changes{v0.3}{2007/05/29}{Fixes to catch up with fontspec. Name change.}
% \end{macro}
%
% \begin{macro}{\realsuperscript}
% Text superscripts:
%    \begin{macrocode}
\DeclareRobustCommand*\realsuperscript[1]{%
  \begingroup
    \c@zf@script 1818326126\relax
    \font\zf@basefont="\csname zf@family@fontdef\f@family\endcsname" at \f@size pt
    \zf@set@font@type
    \ifzf@atsui
      \zf@make@aat@feature@string{10}{1}%
      \unless\ifx\@tempa\@empty
        {\addfontfeature{VerticalPosition=Superior}#1}%
      \else
        \fakesuperscript{#1}%
      \fi
    \fi
    \ifzf@icu
      \zf@check@ot@feat{+sups}%
      \if@tempswa
        {\addfontfeature{VerticalPosition=Superior}#1}%
      \else
        \fakesuperscript{#1}%
      \fi
    \fi
  \endgroup}
%    \end{macrocode}
% \changes{v0.1}{2006/05/03}{Implemented.}
% \changes{v0.3}{2007/05/29}{Fixes to catch up with fontspec. Name change.}
% \end{macro}
%
% Patching footnotes:
% \begin{macro}{\@makefnmark}
%    \begin{macrocode}
\def\@makefnmark{\mbox{\normalfont\textsuperscript{\@thefnmark}}}
%    \end{macrocode}
% \changes{v0.2}{2007/02/04}{Footnotes patched to use new \cmd\textsuperscript.}
% \changes{v0.3}{2007/05/29}{Footnote symbol put in an mbox.}
% \end{macro}
%
% \begin{macro}{\vfrac}
% \darg{Numerator}
% \darg{Denominator}
% No error checking is done to ensure that the font actually has the neceessary features.
% Requires the \pkg{xunicode} package for \cmd\textfractionsolidus.
%    \begin{macrocode}
\newcommand*\vfrac[2]{%
  \begingroup
    \c@zf@script 1818326126\relax
    \font\zf@basefont="\csname zf@family@fontdef\f@family\endcsname" at \f@size pt
    \zf@set@font@type
    \ifzf@atsui
      {\addfontfeature{VerticalPosition=Superior}#1}%
       \textfractionsolidus
      {\addfontfeature{VerticalPosition=Inferior}#2}%
    \fi
    \ifzf@icu
      {\addfontfeature{VerticalPosition=Numerator}#1}%
       \textfractionsolidus
      {\addfontfeature{VerticalPosition=Denominator}#2}%      
    \fi
  \endgroup}
%    \end{macrocode}
% \changes{v0.1}{2006/05/03}{Implemented.}
% \end{macro}
%
% \begin{macro}{\namedglyph}
% \darg{Name of the font glyph to be typeset}
%    \begin{macrocode}
\newcommand\namedglyph[1]{%
  \@tempcnta=\XeTeXglyphindex "#1"\relax
  \ifnum\@tempcnta>0 
    \XeTeXglyph\@tempcnta 
  \else 
    \xxt@namedglyph@fallback{#1}%
  \fi}
%    \end{macrocode}
% \changes{v0.2}{2006/08/12}{Implemented.}
% \end{macro}
% \begin{macro}{\xxt@namedglyph@fallback}
% Redefine this macro to change how glyph names that aren't found get typeset.
%    \begin{macrocode}
\newcommand\xxt@namedglyph@fallback[1]{[#1]}
%    \end{macrocode}
% \changes{v0.2}{2006/08/12}{Implemented.}
% \end{macro}
%
%
% \begin{macro}{\showhyphens}
% This macro is entirely due to Jonathan Kew. 
% I wish I knew how to write these sorts of things.
%    \begin{macrocode}
\newbox\xxt@tempbox
\def\showhyphens#1{%
  \typeout{^^J*********************** 
           \string\showhyphens: 
           ***********************}%
  \@for\@ii:=#1\do{\xxt@showhyphens{\@ii}}%
  \typeout{^^J***********************%
           ***************%
           ***********************^^J}}
\def\xxt@showhyphens#1{%
   \setbox\@tempboxa=\vbox{%
     \hsize1sp \hbadness10000 \hfuzz\maxdimen
     \everypar={} \leftskip\z@ \rightskip\leftskip 
     \pretolerance\m@ne \noindent \hskip\z@ #1\par
     \global\setbox\xxt@tempbox=\hbox{}\xxt@sh@cat}%
   \setbox\@tempboxa=\hbox to \maxdimen{\unhbox\xxt@tempbox}}
\def\xxt@sh@cat{\unskip\unpenalty
   \setbox\@tempboxa=\lastbox 
   \unless\ifvoid\@tempboxa 
     \global\setbox\xxt@tempbox=\hbox{%
       \unhbox\@tempboxa
       \unskip\unskip
       \unhbox\xxt@tempbox}%
     \expandafter\xxt@sh@cat
   \fi}
%    \end{macrocode}
% \changes{v0.3}{2007/05/30}{Implemented.}
% \end{macro}
%
%\iffalse
%</package>
%\fi
%
% \clearpage
% \PrintIndex
%
% \Finale
%
%\iffalse
%<*dtx-style>
%    \begin{macrocode}
\ProvidesPackage{dtx-style}

\def\@dotsep{1000}
\setcounter{tocdepth}{2}

\setcounter{IndexColumns}{2}
\renewenvironment{theglossary}
  {\small\list{}{}
     \item\relax
     \glossary@prologue\GlossaryParms 
     \let\item\@idxitem \ignorespaces 
     \def\pfill{\hspace*{\fill}}}
  {\endlist}

\usepackage{array,booktabs,calc,color,enumitem,fancyvrb,graphicx,ifthen,longtable,refstyle,varioref}
\usepackage{fontspec,xunicode,xltxtra}
\setromanfont[Mapping=tex-text, BoldFont=Hoefler Text,
  ItalicFeatures={Contextuals={NoWordFinal,NoLineFinal}}]{Hoefler Text}
\setsansfont[Scale=MatchLowercase,Mapping=tex-text,BoldFont=Gill Sans]{Gill Sans}
\setmonofont[Scale=MatchLowercase]{Monaco}

\linespread{1.05}      % A bit more space between lines
\frenchspacing         % Remove ugly extra space after punctuation
  
\definecolor{niceblue}{rgb}{0.2,0.4,0.6}
\def\theCodelineNo{\textcolor{niceblue}{\sffamily\tiny\arabic{CodelineNo}}}

\newenvironment{example}
  {\VerbatimEnvironment
   \begin{trivlist}\item[]
   \begin{minipage}{\linewidth}
   \par\noindent\hrulefill\par
   \begin{VerbatimOut}[gobble=4]{\examplefilename}}
  {\end{VerbatimOut}\relax
   \begingroup
     \color{niceblue}
     \typesetexample
   \endgroup\par\noindent\hrulefill\par
   \end{minipage}\end{trivlist}}

\let\examplesize\normalsize
\let\auxwidth\relax

\newlength\examplewidth\newlength\verbatimwidth
\newlength\exoutdent   \newlength\exverbgap
\setlength\exverbgap{0em}
\setlength\exoutdent{-0\textwidth}
\newsavebox\verbatimbox
\edef\examplefilename{\jobname.example}

\newcommand\typesetexample{\relax
   \begin{lrbox}{\verbatimbox}\relax
     \BVerbatimInput[fontsize=\small]{\examplefilename}\relax
   \end{lrbox}
   \begin{list}{}{\setlength\itemindent{0pt}
                  \setlength\leftmargin\exoutdent
                  \setlength\rightmargin{0pt}}\item
   \ifx\auxwidth\relax
     \setlength\verbatimwidth{\wd\verbatimbox}\relax
   \else
     \setlength\verbatimwidth{\auxwidth}\relax
   \fi
   \begin{minipage}[c]{\textwidth-\exoutdent-\verbatimwidth-\exverbgap}
     \catcode`\%=14\centering\examplesize\input\examplefilename\relax
   \end{minipage}\hfill
   \begin{minipage}[c]{\verbatimwidth}
     \usebox\verbatimbox
   \end{minipage}
   \end{list}
   \global\let\examplesize\normalsize}

\newcommand*\setexsize[1]{\let\examplesize#1}
\newcommand*\setverbwidth[1]{\def\auxwidth{#1}}

\newcommand*\name[1]{{#1}}
\newcommand*\pkg[1]{\texttt{#1}}
\newcommand*\pkgopt[1]{\texttt{[#1]} package option}

\newcommand*\acro[1]{\textsc{\MakeLowercase{#1}}}

\newcommand*\note[1]{\unskip\footnote{#1}}

\let\latin\textit
\def\eg{\latin{e.g.}}
\def\Eg{\latin{E.g.}}
\def\ie{\latin{i.e.}}
\def\etc{\@ifnextchar.{\latin{etc}}{\latin{etc.}\@}}

\def\OMEGA{Ω}

\newcounter{argument}
\g@addto@macro\endmacro{\setcounter{argument}{0}}
\newcommand*\darg[1]{%
  \stepcounter{argument}%
  \noindent{\ttfamily\#\theargument}:~#1\par\nobreak}
\newcommand*\doarg[1]{%
  \stepcounter{argument}%
  \noindent{\ttfamily\makebox[0pt][r]{[}\#\theargument]}:~#1\par\nobreak}
%    \end{macrocode}
%</dtx-style>
%\fi
%
% \typeout{*************************************************************}
% \typeout{*}
% \typeout{* To finish the installation you have to move the following}
% \typeout{* file into a directory searched by XeTeX:}
% \typeout{*}
% \typeout{* \space\space\space xltxtra.sty}
% \typeout{*}
% \typeout{*************************************************************}
%
\endinput
 