#!/bin/sh

# script to create initial xetex and xelatex formats, after installation

# set -o xtrace

# ensure our entries are present in fmtutil.cnf
fmtutil_cnf=`kpsewhich --format="web2c files" fmtutil.cnf`
if [ ! "`grep xetex ${fmtutil_cnf}`" ]; then
	cat >> ${fmtutil_cnf} <<-__EOT__;

	# XeTeX formats
	xetex	xetex	-	-etex xetex.ini
	xelatex	xetex	language.dat	-etex xelatex.ini
	
	__EOT__
fi

# find the existing tex binary, possibly following a symlink
texbin=`which tex`
if [ -L ${texbin} ]; then
	texbin=`readlink ${texbin}`
fi
texbindir=`dirname ${texbin}`

# ensure ${texbindir} is in the PATH so that fmtutil can find new xetex
# (normal usage may rely on a symlink, which doesn't yet exist)
PATH=${texbindir}:$PATH

# patch fmtutil from teTeX 2.x so it doesn't confuse xetex with an etex engine
# (discarding any error message in case we have teTeX 3 or an already-patched teTeX 2)
patch -N -r /tmp/fmtutilpatch.rej -p0 `which fmtutil` < fmtutil.tetex-2.patch >/dev/null 2>&1

# use system-wide setup if available
# This can't run with BSD sh; I hope that the following
# is what was intended:
# fmtutil=`type -p fmtutil-sys` || fmtutil=`type -p fmtutil`
fmtutil=`which fmtutil-sys`
if [ ! -e "${fmtutil}" ]; then
	fmtutil=`which fmtutil`
	if [ ! -e "${fmtutil}" ]; then
		echo "### Can't find fmtutil! Giving up... check your TeX installation."
		exit 1
	fi
	echo "### Can't find system-wide fmtutil; using ${fmtutil}"
else
	echo "### Using system-wide fmtutil: ${fmtutil}"
fi

formats="xetex xelatex"
for f in ${formats}; do
# enable our entries if necessary (in case of pre-existing disabled ones)
	echo "### Running ${fmtutil} for format ${f}"
	${fmtutil} --enablefmt ${f}
	${fmtutil} --byfmt ${f}
done

# create symlinks for the newly-built formats
echo "### Creating symlinks for the newly-built formats"
texlinks --silent
