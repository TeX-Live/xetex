%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: wtest.dvi
%%Pages: 14
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: XYDASH10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -D 720 wtest -o
%DVIPSParameters: dpi=720, compressed
%DVIPSSource:  TeX output 1999.07.12:2314
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Version 97 patch 3, 98/06/01
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
% DG/SR modification end
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
% def
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
pop pop } def
% DG/SR modification end
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks 97 - Version 97, 93/05/07.
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    (P) 0 get /BoldPentagon put
  /Metrics 13 dict def
  Metrics begin
    /Bullet 1000 def
    /Circle 1000 def
    /BoldCircle 1000 def
    /SolidTriangle 1344 def
    /Triangle 1344 def
    /BoldTriangle 1344 def
    /SolidSquare 886 def
    /Square 886 def
    /BoldSquare 886 def
    /SolidPentagon 1093.2 def
    /Pentagon 1093.2 def
    /BoldPentagon 1093.2 def
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle { -550 -550 550 550 } def
    /BoldCircle /Circle load def
    /Bullet /Circle load def
    /Triangle { -571.5 -330 571.5 660 } def
    /BoldTriangle /Triangle load def
    /SolidTriangle /Triangle load def
    /Square { -450 -450 450 450 } def
    /BoldSquare /Square load def
    /SolidSquare /Square load def
    /Pentagon { -546.6 -465 546.6 574.7 } def
    /BoldPentagon /Pentagon load def
    /SolidPentagon /Pentagon load def
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath { 0 0 500 0 360 arc closepath } def
    /Bullet { 500 500 Adjust CirclePath fill } def
    /Circle { 500 500 Adjust CirclePath .9 .9 scale CirclePath eofill } def
    /BoldCircle { 500 500 Adjust CirclePath .8 .8 scale CirclePath eofill } def
    /BoldCircle { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath {
      0  660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath
    } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath {
      -450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
      closepath
    } def
    /SolidSquare { SquarePath fill } def
    /Square { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon { PentagonPath .78 .78 scale PentagonPath eofill } def
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
% END pst-dots.pro

%%EndProcSet
%%BeginProcSet: pst-node.pro
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pspicture.ps
%!
%% 
%% This is file `pspicture.ps', generated 
%% on <1995/6/4> with the docstrip utility (2.2i).
%% 
%% The original source files were:
%% 
%% pspicture.doc  (with options: `ps')
%% 
%% Do not distribute the stripped version of this file. 
%% The checksum in the header refers to the documented version. 
%% 
%%% ====================================================================
%%%  @LaTeX-style-file{
%%%     author          = "David Carlisle",
%%%     version         = "2.01",
%%%     date            = "16 June 1992",
%%%     time            = "18:30:53 BST",
%%%     filename        = "pspicture.sty",
%%%     address         = "Computer Science Department
%%%                        Manchester University
%%%                        Oxford Road
%%%                        Manchester
%%%                        England
%%%                        M13 9PL",
%%%     telephone       = "+44 61 275 6139",
%%%     FAX             = "+44 61 275 6236",
%%%     checksum        = "56975 755 2882 22245",
%%%     email           = "carlisle@cs.man.ac.uk (Internet)",
%%%     codetable       = "ISO/ASCII",
%%%     keywords        = "LaTeX, pictures, PostScript",
%%%     supported       = "yes",
%%%     docstring       = "
%%%
%%%     pspicture.sty
%%%
%%%     A LaTeX style option that reimplements most of the picture
%%%     environment commands to use PostScript \special's, rather than
%%%     the line and circle fonts. This allows lines to have arbitrary
%%%     slope and thickness, and circles to be any size.
%%%
%%%     The checksum field above was produced by
%%%     Robert Solovay's checksum utility.",
%%%  }
%%% ====================================================================



/!BP{
  72 72.27 div dup scale
  }def
/!A{
  newpath
  0 0 moveto
  dup neg dup .4 mul rlineto
  .8 mul 0 exch  rlineto
  closepath
  fill
  } def
/!V{
  !BP
  /!X exch def
  /!y exch def
  /!x exch def
  newpath
  0 0 moveto
  !x 0 eq {0  !y 0 lt {!X neg}{!X} ifelse}
         {!x 0 lt {!X neg}{!X}ifelse  !X !y mul !x abs div} ifelse
  lineto
  setlinewidth % @wholewidth
  currentpoint
  stroke
  translate
  !y !x atan
  rotate
  !A % @arrowlength
  }def
/!L{
  !BP
  /!X exch def
  /!y exch def
  /!x exch def
  newpath
  0 0 moveto
  !x 0 eq {0  !y 0 lt {!X neg}{!X} ifelse}
         {!x 0 lt {!X neg}{!X}ifelse  !X !y mul !x abs div} ifelse
  lineto
  setlinewidth % @wholewidth
  stroke
  }def
/!C{
  !BP
  0 0 3 2 roll
  2 div 0 360 arc
  setlinewidth % @wholewidth
  stroke
  }def
/!D{
  !BP
  0 0 3 2 roll
  2 div 0 360 arc fill
  }def
/!O{
  !BP
  /!y exch 2 div def
  /!x exch 2 div def
  /!r exch !x !y
    2 copy gt {exch} if pop
    2 copy gt {exch} if pop
      def
  setlinewidth % @wholewidth
  1 eq
  {newpath
   !x neg 0 moveto
   !x neg !y 0 !y !r arcto 4 {pop} repeat
   0 !y lineto
   stroke}if
  1 eq
  {newpath
   !x  0 moveto
   !x  !y 0 !y !r arcto 4 {pop} repeat
   0 !y lineto
   stroke}if
  1 eq
  {newpath
   !x neg 0 moveto
   !x neg !y neg 0 !y neg  !r arcto 4 {pop} repeat
   0 !y neg lineto
   stroke}if
  1 eq
  {newpath
   !x  0 moveto
   !x  !y neg 0 !y neg !r arcto 4 {pop} repeat
   0 !y neg lineto
   stroke}if
  }def
/!V2{
  !BP
  2 copy exch
  atan
  /a exch def
  2 copy
  newpath
  0 0 moveto
  lineto          % <x*unitlength> <y*unitlength>
  3 2 roll
  setlinewidth % @wholewidth
  stroke
  translate       % <x*unitlength> <y*unitlength>
  a rotate
  !A % @arrowlength
  }def
/!L2{
  !BP
  newpath
  0 0 moveto
  lineto          % <x*unitlength> <y*unitlength>
  setlinewidth % @wholewidth
  stroke
  }def
/!C2{
  !BP
  /!s exch def
  /!y exch def
  /!x exch def
  newpath
  0 0 moveto
  0 0
  !x 2 div !y 10 div !s mul add
  !y 2 div  !x 10 div  !s mul sub
  !x !y
  curveto
  setlinewidth % @wholewidth
  stroke
  }def
%% End of pspicture.ps 

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: XYDASH10
%!PS-AdobeFont-1.1: XYDASH10 001.104
%%CreationDate: 1997 Jul 20 21:19:18
%%RevisionDate: 1997 Aug 28 05:34:12
%%RevisionDate: 1997 Sep 18 10:23:31
%
% XYDASH10: line segments for Xy-pic at 10 point
%
% Original Metafont design  Copyright (C) 1991-1997 Kristoffer H. Rose.
% PostScript adaptation     Copyright (C) 1994-1997 Ross Moore.
% Hinting and ATM compatibility  Copyright (C) 1997 Y&Y, Inc.
%
% This file is part of the Xy-pic macro package.
% Xy-pic Copyright (c) 1991-1997  Kristoffer H. Rose  <krisrose@brics.dk>
%
% The Xy-pic macro package is free software; you can redistribute it 
% and/or modify it under the terms of the GNU General Public License 
% as published by the Free Software Foundation; either version 2  
% of the License, or (at your option) any later version.
%
% The Xy-pic macro package is distributed in the hope that it will 
% be useful, but WITHOUT ANY WARRANTY; without even the implied 
% warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
% See the GNU General Public License for more details.
%
% You should have received a copy of the GNU General Public License 
% along with this macro package; if not, write to the 
% Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

11 dict begin
/FontInfo 9 dict dup begin
/version (001.104) readonly def
/Notice (Copyright (C) 1996, 1997 Ross Moore and Y&Y, Inc.) readonly def
/FullName (XYDASH10) readonly def
/FamilyName (XYDASH) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -300 def
/UnderlineThickness 150 def
end readonly def
/FontName /XYDASH10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /d0 put
dup 15 /d15 put
dup 26 /d26 put
dup 30 /d30 put
dup 32 /d32 put
dup 42 /d42 put
dup 43 /d43 put
dup 48 /d48 put
dup 56 /d56 put
dup 72 /d72 put
dup 77 /d77 put
dup 81 /d81 put
dup 86 /d86 put
dup 89 /d89 put
dup 92 /d92 put
dup 101 /d101 put
dup 105 /d105 put
dup 109 /d109 put
dup 113 /d113 put
dup 121 /d121 put
readonly def
/FontBBox{-40 -520 503 520}readonly def
/UniqueXX 5092844 def
currentdict end
currentfile eexec
80347982ab3942d930e069a70d0d48311d743b8793c40476b99911a1be6c93ca
a7ffc9533764a6a2a3ebcf0bebc6668e399d80ad8b0e5e21d556d8fa71b95a1e
01e6689c74f977a4bbec6795aec114d8507f237839f414ee4fbf8162c865260f
923a63721852c7bff69703f7e0ab99c3b85e83c62c13ea99442890e370376cce
7133ce8f3de2f4c1dc78fb55dff4eb737c195d266281adef5d56fbbc3b785b1b
59d6efeab3b93e713f4b9105cf1594c83472177c0f2b04c840760c92c094a0b9
2a720e4c7b03708d225531ac69324547d65009965f1c52d2be3112c67b6002b1
3d5f2c82505b7f0136cc926ff2bda0b53691b13e816817e913048ad033e0ff31
9d18776c4be80936c7449f316ff7f9026e5eeb9984867fc558bb18773e9a5390
d4490fb8e63a0ce175f52732043cba9d379d01ef25fc4be056d3206186b53195
63ee3d03fa580efa0ad7d3162f77878d348a841432fabedfebc8559530f6cbc1
59df0a77aacfa9f0974542a736680e064ac101c646442b0ca133c4701c206de9
6b70d341f9558a800520c2d32be3628b6df05a19538ec2596d2334f05d54e742
a1a18ebbc12f04c45b899f667d9e6f3a4eaa1854562506d0da4057c4bbfbbacc
c1c208cc47b76226ef6d4d3da7d976b7a21a2cc7aa7cf0602fbd2a46022f7894
c0667e19a31cc10ca33811f882ca5cc140bd49eb62545ffe3f418e8cb9b223e3
b2630b486a3b948c74751c414e84334424a1eee8f20b1bd4eab9a0e0545c9bf2
f8cda548feb88b89e369f29f5318ee43b25672b275b05016b635dc656bca5b14
a28e91c516e3f5e99609f5a37a696fbb39379b8374a044e2fe6d4a193d5360d4
31229d74455ff8645ba7462da11460be68629c6a2b1b4b4f409c806cdaec4d3f
941ec5e5a1a6aaaf2c72de027d73b6d446b29f4a0504dfa9e100f273e0b8f54f
707a5a7e1e5f5f3734783960d641ff957f220cdff18bb2d536a406abc54e557f
a1e9728df44ca1a17c233e052e050fcd4d771fc5fa346a74e295d908bc3dc99e
e64a8d0b7ffcb84a8f8b6a51786f24df6085cf2da56608e86c6b39df0d4c5866
6e4d7b60c5a6407b44d34dd7fd9af114afb31ab028bf8ed6a07dd09037f7cadd
339529e55526c4c196e9b0e7e268c935e83623c087c153d434bad3da2f2fd426
7b33be987281555c23d0ca447a33897d82c9d3066e05afe9795ae24c40ce2379
e14c079904d44bd1be50c040f453fabe66904b4964f61f2e43ff667defd4f8b7
f061816ff08930a5a3c0b747ee1d18a97a19f090abd89e02eb3eb7f467716ea7
8e5624873968610e0530390fab9d8814485699c5e2376e6aacd1fe4051998061
047595230979f92343954c7ff9a1e662d43dd5a8659c425551a84307694b294a
91445d8aea7d71b12128bd82df1a9f2fd744714f683b5a7645a380852b76581a
e77886595e5f855cdb19218e9c5095a10e71acd8cea17f77afccede36945edc3
f996b1dc1e7657cee3aa47ea01b9ae44f252d506ff7ba9651b987ada4f110b0b
00fc13e6e945efd844bb53836b22db686a5df40ef8b8f15cbed7b50c8ad90024
a2d613c1d0308e4e103af318de0118d8583eed130c09a42cb1939bc951496aa4
a164da9d791c2e99d4c6166c0b43fcf9018d756c7cfff5373d6d4b3f977757df
2f0c2f87cb8fb4b3fb8d2d446b1b4ca1a8acd35239427aa560f94aaf1354f2ed
9019cf6fcf1bc927476e7a8d42f52cef3d20c72dcdd7bdb6e8e3ad703cfb6516
14fb4fdc152ac444c7efe600af70b126b818c9decb4ca1bdd9e8f111f6b0b0ea
7cd103ce2386462ad22e091dbe02f910afd288b46d9924258822b94701ff6135
471358c85e6a908272fefa50ec89aa6c541e7d20dcbc33a723de8572ca0b6ad0
5b095540af1096005df363c57bde09b8987df56f1007a4731c7729f35603120c
3a6303f80f9d43990b95dff374f10ee0aad0f3289eff0e7b2a1ca1cb0c07db21
cba34e75abc11cd3bf9aac08657250c0fd176e20b0008717d0fa819cc2924531
0e5b005050a3e3fbad5239a785a68483ec7f3e7104c962603112f8cf7590972c
a03032d53fe0ed16c345c30695b3a3da35e3f1171cea0faf4ef2311f25c57a5a
78d48a8d6242821f288eb618106b5beed3887831a98871239d46123cd5598cb2
ef56346657202c6d44d9304c549328e9db0b3f13adf0df405fa968d1bd8874f3
c1e39a1b32018782664b8aa5b673c8f389902349a43b194d54e25bebab783d47
c4458ee1e53ff0e3e12ef58077e011e84eb915bf4c0b910935e2ebb955758f58
9d4020863b12f6034d58e1ee64344508c95f53cc8b7f181e2a265f5c573d8253
82c4bef5376dbe867d2c6fcd5541906df65cb7cd4c378e8770ecf0908421fb6e
77b6aa58797ff31ffee30ceb0cedbf967811856b76510f40d1349975db7f34a2
9af2bfb9870ef73275c3ec94c439d9ea9e5bee35e9205171a891df8c0f0cc9a2
d04b6c66255dec3d10a12c6cfddb8050ede66206a3f456903a01dffc14552cc4
2c2df109deb7bd722f8fd601ffccb91b3f47ec9a42dd613c08a3ebb1dad2cc0d
1e755af0c9ab9e816e9ba650ba1ddb8bc6a83cd5c14b4375325dd841a45abd30
aec06892a4e9bb7296f2e78f7ed78802c9e43d86cc7842a16c4f54af09c719c9
395e9ae58dabdec2b183024d272112431142a5e8eb2b1aec94f7015c09ae965d
ae21b750a62c0e4f16f0d46abeaa1a80fb5d17125210f2003dfe4db399966779
fdfa53883de81e92188f080269eba8c56649f04ec7dc2760ccc23abeebee22f7
7ea11f1c16f2b06f74486ecd4663a1e7b11b23a344b4f2a3ca202a5f2980a09d
874a79cfcca3c775103628cd49863de9c8532293cddb1aab213a11166ce1ee9c
560b6188991b82fa98aef99fc445c3b5b823d33b1942f4b83035c73d6f4e31bd
6c7a5af56cd0cec6bb006e297a90d867a1ee9c81e315f57c58f703652e77260c
b6e25fb38f83150f00b8059305fbe346e8231337cc313d5e53c6ce42189849df
3f6f1b64aea5bf8f8ff220c37bed395bf05c2dd72a3ede1b337d5c340c305c62
0c2646348db0794b89167fdbebe687edf37ade25a8a2c116e5c63e5f91306be6
1b912fe548dd0c6dc377c5d28c83af504da8fd5d4e0b8d0b78628143d72f9042
b5a69f0f16922d444578fa202be1b9644e089d41d1d52cfd62820cd421fb186e
21488e2806fb74a28244b414564cb469b00cf2d77d1688cd00bf89a647098ca9
5721477da88537d82918df6d8d8a5c3fe592cc86456fad5ff0a7878c805c5088
86a45800a29e8ebf0b89f64645b42b08a191830499b1663d4ae944a9ffe6d459
a012177582143e4ca1d723e7549a1b05e9dd6c7e8df796535334f417e3e7da57
b03ff6818f5f8b4fdb8a196640a2bcae6b7ceea81f4f8757eb101768ffd1a564
bb47d1e7323995289aaa70ae84220e4aa605ba2ecbdae522f9c565a11942509d
cb51ba5c3565e2b0b8c81f7a22c8e74eb6fb33353e9ed713f9b78a988bae500d
b3fcb0c4d0fe01498a031a56bf67760f86fe8d8f38c73f27aac6b933eae324f6
e1cf50d7422d5e95646d89ecbe1c9eb9e9479b77401f47898491441996061755
9f2eb22819113b461c8b5fad8bc51eb5a613d54135b059af320149579ad13c70
7606cb3067fb6de059583f0bceafefec2eb7a6ff3d9c9564af9c526bbed4cd5f
929b6f59ae1795bbcd7fdc6bc2e2135743b18b1aa7995dd37ce9e94307ea395b
ba195525900e0d0a44b687e227c96ffc00ddbd84d00dacfe10b286236dde6e08
b9c4f25cff29d7142530dba1b569f47ff67d3a3b955933bb8b90dcfcbbb6c977
21aa5d27876b0fd46525c151707cc0e17836ceb19a3dc07c9c490f24843d5ddc
1166c10570b4895b83dbdd5b84e815c2521a458c1da60195d91afe22a558d8e7
d27cdcb3d9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
TeXDict begin 39158280 55380996 1000 720 720 (wtest.dvi)
@start
%DVIPSBitmapFont: Fa cmtt10 10.95 16
/Fa 16 126 df<EA0FC0EA3FF0EA7FF8EAFFFCEA7FF8EA3FF0EA0FC00E076B8639>46
D<903803FFF0013FEBFF8048B612F03A07FE001FFCD81FE0EB00FFD83F80EC3F80007FED
1FE012FF6DEC0FF06C5A001EC8FCC9FCEE1FE0A2EE3FC0EE7F80923801FE004B5AED0FF0
ED3FC003FFC7FCEC03FCEC1FF0EC7FC0D901FEC8FCEB07F8EB3FE001FFC7EA07E0D803FC
EC0FF0EA0FF0003FB7FCB8FC003F16E02C217AA039>50 D<123C127EB4FC6C7E6C7E6C7E
6C7E6C7E6C7E6C7E6C7E6D7E6D7E6D7E6D7EA26D7E6D7E6D7E6D7E6E7E6E7E6E7E6E7E6E
7E6E7E6E7E6E7EA26F7E6F7E6F7E6F7E6F7E6F7E6F7E6F7EEE7F80EE3FC0EE1FE0EE0FF0
EE07E0EE03C02C2B7AA539>92 D<90387FFFC00003B512FE000FECFFC03A1FF8003FF06C
48EB07F86C48EB01FEC97EA30207B5FC0107B6FC90B7FC0007EBFC00D81FFCC7FCEA3FC0
485A48C8FCA36C6C5BD81FF8133F0007B81280C6DAFE3F13C0010FD9C007138032187A97
39>97 D<91383FFFF00107B512FE013FECFF809026FFC00013C0D803FCC7EA7F80D807F0
EC3F00D81FE091C7FC485A485AA248CAFCA46C7EA26C7E6C6CEC0FC0D807F0EC1FE0D803
FCEC3FC03B00FFC001FF80013FB5EAFE00010714F0D9003F90C7FC2B18799739>99
D<EC7FF80107B57E013F14F09039FFC007FCD803FCC77ED80FF0EC7F804848EC3FC04848
EC1FE0485AEE0FF048C8FC90B7FCA217E0D87F80C9FCA26C7E6C6CEC07E0D807F0EC0FF0
D803FEEC1FE03B00FFE001FF80013FB61200010314F8D9003F13802C187A9739>101
D<91397FE003FE903B07FFFE3FFFC0013F90B612E0903BFF801FFC1FC03C01FE0007F80F
80D803F8D901FCC7FC00078148486D7EA46C6C495A00035DD801FEEB07F83A00FF801FE0
4890B55AD803F749C8FC9038F07FE091CAFCA26C7E6CB612F0EEFFC0000716F8D81FE0C7
EA0FFC48C9123F007EEE1F8048EE0FC0A3007EEE1F806C6CED7F00D80FF8EC07FC0003B7
12F0C66C1580010702F8C7FC33247D9739>103 D<ED3F80EDFFE0A2ED7FC0ED1F0092C7
FCA4013FB512C04914E07F90C7121FB3A8ED3FC0003FEC7F80D8FFC0EBFF00EC03FC6CB5
12F0001F14C0000301FCC7FC232D7BA039>106 D<007FB57EB67E7EC7123FB3A9007FB7
12E0B812F06C16E02C217AA039>108 D<ECFFF0011FEBFF80017F14E03A03FF801FFC3A
07FC0003FED81FF0903800FF804848EC7FC049143F4848EC1FE048C8EA0FF0A56D141F00
7F16E06C6CEC3FC06D147FD81FF8903801FF80D807FC903803FE003A03FFC03FFCC66CB5
12E0011F1480010001F0C7FC2C187A9739>111 D<D87FFFEBFFE0B5008713FE6C01BFEB
FFC03B007FFF001FF002F8EB03FC02E0EB00FE4A147F4A1580EF3FC0171F18E0A418C017
3F6EEC7F806EECFF006E495A6EEB07F802FFEB3FF002BFB512C0028F49C7FC028013E092
C9FCA9007FB57EB67E6C5C33247F9739>I<263FFFF0EB7FF0B539F807FFFE003F023F7F
D80007D9FF801380913AFBF8007F00DAFFE0131C038090C7FC92C9FC5C5CA25CAA003FB6
12F0B77E003F5D31187D9739>114 D<90391FFFF07848B612FC120F393FF0001F48C712
0700FE1403A26C6E5AD87FE090C8FC381FFFF00007EBFFF8C6ECFF80010314F090C7EA7F
FCED01FF003E9138007F80B4153F7F6D15006D147E01FCEB07FC90B612F0486C1480D878
0701F8C7FC2918789739>I<3B3FFFF007FFFEB56C48EBFF80003F496CEBFE0028007F80
007FC7FC90391FC001FC6D6C485A903903F80FE06D6C485A9026007F3FC8FCEC1FFEEC0F
F8EC03F0EC0FF8EC1FFEEC3F3F9138FC1FC0903901F807E0903907F003F890390FC001FC
90393F80007F49C76C7E277FFFE001B51280B5D8F80714C06CD9E001148032187D9739>
120 D<923803FFE0037F13F00203B512E0020F90C7FCEC1FE04A5AAD4A5AD90FFFC8FC38
7FFFFCB512E06C13FC38000FFF9038007F806E7EAD6E7E6EB4FC0203EBFFE0DA007F13F0
030313E02C2B7AA539>123 D<EA3FFCB512E06C13FC38000FFF9038007F806E7EAD6E7E
6EB4FC0203EBFFE0DA007F13F00203B512E0020F90C7FCEC1FE04A5AAD4A5AD90FFFC8FC
387FFFFCB512E0D83FFCC9FC2C2B7AA539>125 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmss10 10.95 5
/Fb 5 119 df<B46CDB0FFEEE1FC01D3F6C6C4B6CEE7F806C6C4B1800726C5D6C6CDB7F
3F5E057E6D14016C6C9226FE1FE05D05FC16036C6C02016D6C4A5A6C6C03F85F04036D6C
140F6C6CDA07F05F726C141F6C6DD90FE05F4D6C6C143F6D6C011F6E4A5A013F4B6C93C7
FC6E013F6E6C5B011F92C75D6E4991383FC0016D6C017E5F04FE91381FE0036D6C48485F
01034A6E6C485AECFE0301014A6E6C485ADAFF0715036D4A6F485A190191267F8FC06F48
5A023F040091C8FCDBDF806F5A021F90C9EA7F7E03FFEE3FFE6E485F1A1F6E485F62267E
A567>87 D<EE3FC0AE903803FFC0013F13FE90B7FC1203000FEB0003D81FF8EB007FD83F
E0143F485A5B12FF90C8FCA56C7E7F6C6C147FD81FF814FFD80FFE13070003B7FC6C153F
D8003F13FC010713802A267CA538>100 D<EAFFC0A5C7FCA9EA7F80B3A60A2678A51B>
105 D<00FEEB7FF8010FB5FC013F14C090B612E03AFFF8003FF001E0EB0FF84913075B90
C7FCB02518779738>110 D<B4ED07F86C6CEC0FF07F003FED1FE06C6CEC3FC06C6CEC7F
807F0007EDFF006C6C495A6C6C495A7F6C4A5A6D6C485AD93FC05B011F495AECE03FD90F
F05B010749C7FC903803F8FE14FC903801FDFC6DB45A6E5AA22D187E9732>118
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmsy10 10.95 1
/Fc 1 9 df<92380FFFF00203B612C0913A3FF01C0FFCDAFC00EB003FD907C0ED03E001
1FC7EC00F80178171E01E01707D80380EF01C048C8ED00E0000E197048193848191CA248
190EA2481907BCFCA200E0C8001CC81207A20070190EA26C191CA26C19386C19706C19E0
6C6CEF01C0D800E0EF07000178171E011F17F8D907C0ED03E0D900FC033FC7FCDA3FF0EB
0FFC0203B612C0DA000F01F0C8FC48257A9F55>8 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmmi10 10.95 2
/Fd 2 84 df<023FB712F8F1FFC09126000FF8C7EA3FFCF103FF4B48020013C0F27FE04B
5A1BF04B5AA24B48EDFFE01BC04A90C84813804F13004A48ED0FF8F13FE04A48DA01FEC7
FCF03FE04AB600F0C8FC03F8C712FE4A48EC1F80F00FE04A486E7E854A4881A24A48140F
A24990C8485AA24948153F1B18494818381B70010FDC0FFC13E0007FB60203EB0780B648
9139003FFC004D257CA453>82 D<DC7FFE1306030FB5EAE01E923AFF8003F87CDA03F8C7
EA3FFCDA0FC0EC07F8023FC81203027EED01F0495A494816E0A2010717C06E92C7FCA214
FF6D13F86DEBFFF86DECFFF0023F14FE0207ECFFC0DA001F80DB003F7F9338007FF8EF0F
FC170717035A00075FA2484C5A4D5A484C5A6D4BC7FCD83FE015FC01F8EC07F0267C3FE0
EB7FC0D87807B500FEC8FC26E0003F13C03F257AA443>I E
%EndDVIPSBitmapFont
/Fe 134[50 7[50 3[50 3[50 3[50 8[50 2[50 2[50 4[50 3[50
4[50 15[39 7[26 4[19 17 9[2 1[2 3[8 10[25 14[48{}20 99.6264
/XYDASH10 rf
%DVIPSBitmapFont: Ff cmr12 14.4 12
/Ff 12 117 df<EC01F04A7EA24A7E6E5AAA007CEE07C0007F6D48131FD8FF80ED3FE001
C0157F01F0EC01FF01F85CD87FFC4A13C0D81FFF021F130000070181EB3FFC000101C1EB
7FF026007FE1EBFFC090261FF9F390C7FC903907FCE7FC903901FEEFF09039007FFFC002
1F90C8FCEC07FCA2EC1FFF027F13C0903901FEEFF0903907FCE7FC90391FF9F3FF90267F
E1F013C02601FFC1EB7FF000070181EB3FFC001F01016DB4FCD87FFC020713C0D8FFF86E
13E001F08001C0EC007F0180153FD87F00ED1FC0007C496C1307C792C7FCAA4A7E6E5AA2
6E5A333E77EB46>42 D<153815F814011403140F143F14FF1307137FB6FC143F13F81380
C7FCB3B3B3B3A34A7E4A7E0107EBFFC0007FB712FCA42E5F74DE46>49
D<EC07FF027F13F049B512FC010714FF90261FF00F13C090263F000113F0017E6D6C7E01
F8EC1FFE48486E7E48486E1380485A496E13C0000F6F13E048C8FC001E6F13F0003E17F8
003C167FA2007C17FC0078163FA2EAFFC06D16FE6D151F7FA66C5A173FEA1FC00007C913
FCCAFCA2177F18F8A2EFFFF0A218E05E18C05E18804C13004C5A5F161F5F4C5A4C5A4C5A
5F4B90C7FC4B5A4B5A5EED0FE04B5A4B5A4BC8FC15FE4A5A5D4A5A4A5A4A5A4A5A4AC812
0E147E5C4A151C495A495A495A495A49C9123C013E1638133C4916785B484816F848B8FC
5A4817F05AA25A5AB9FC18E0A3375F79DE46>I<913803FFC0021F13F891B6FC902603FE
0113C0903A0FE0003FF049C76C7E013EEC0FFE01786E7E496E7F4848824848808448486E
7F13F813FE486C82A280177FA217FFA26C90C8FCA26C5AD800F85E90C9FCA24C5BA260A2
4C5BA24C90C7FC5F4C5A5F4C5A4C5A4C5A4CC8FCED03FEEDFFF8027F13C05E16FC913800
01FF9238003FC0EE1FF0EE0FFC707E706C7E707F84707F177F8484173F84A28483A21980
A21203EA1FE0487E487E487EA519005B5F6C5A01C05E007CC9FC4D5A7E606C4C5A6C7E6D
4A5B6C6C4A5B6C6C4A5BD801FC4A90C7FC6CB44A5AD93FC0EB3FF8903A1FFC01FFF00107
B612C0010192C8FCD9003F13F80203138039627ADE46>I<170F5FA25F5FA25FA25E5EA2
5E5EA25E5E163B167B16F316E31501ED03C316831507ED0F03150E151E153C1538157815
F015E0140115C0EC0380140715005C141E141C143C5C147014F0495A5C1303495A91C7FC
5B131E131C133C5B137013F05B485A12035B48C8FC5A120E121E5A123812785ABA12F8A4
C9000790C7FCB14C7FA2047F13F092B712F8A43D607CDF46>I<EF03C04D7EA34D7EA34D
7EA34D7EA34D7EA394B5FCA24C8017E7A204038017C3A20407801781A2040F801700A24C
80041E137FA2043E80043C133FA24C80181FA24C8084A24B4881840303824C7FA2030782
4C7FA2030F8293C8FCA24B82031E157FA2033E82033C153FA2037C820378151FA24B8285
A24AB97EA34A8403C0C812030207844B81A2020F8492CAFCA24A84021E177FA2023E8402
3C173FA2027C840278171FA202F8844A83A249488586130388010784496C85131F496C4D
7FD9FFFE4D7F00076D6C043F13FEB600F8031FB7FCA460667CE569>65
D<B912FEF0FFE019FCF1FF80C66C01C0C700077F010F49020113F092C96C7E6DEF3FFE73
7E737F737F85737F878587A2747EA3871A3FA61A7FA263A21AFF63A24F5B63614F5B4F5B
4F90C7FC4F5AF17FF84F5A060313C0061F90C8FC943803FFFC92B712E019FCF1FF8092C9
13F0F13FFCF10FFE736C7E737F737F737F747E87747E1A1F87A2741380A21CC086A21CE0
A91CC0A262A21C80621C006263505A1AFF4F5B4F5B4F5B4F5B49053F5B6FDBFFFEC7FC01
7F6D02075BBB12F01AC04FC8FC19E0536279E163>I<DD3FFC15700407B512C0043F02F0
14F04BB600FC130103079038F001FF031F90C7381FC003DB7FF8913807E007912601FFE0
EC01F84A0180913800FC0F020F90C9EA3E1FDA1FFC161F4A48EE0FBF4A48EE07FF4A4882
494982495B4990CBFC4948187F131F4948183F5C017F191F495A1B0F485B1B07485BA248
1A035C5A1B014890CCFCA35A491900A3127F1C00A25BA212FFB0127FA27FA3123F1C70A2
7F7EA36C7F1CF06C1BE0807E1B016C6D19C0A26C6D18031C806D6C1807013F1A006E606D
6C180E010F191E6D6C606D6D5F6D7F6D6D5F6E6C4C5A6E6C4C5A6E6C4C5A6EB4041FC7FC
02036D153E6E01E015FC9126007FF8EC03F0DB1FFFEC0FE0030701F0EBFF80030190B548
C8FCDB003F14F8040714C09326003FFCC9FC546878E465>I<DA03FFEC0380023F13F091
B500FE13070103ECFF8090260FFE00EBE00FD91FF090380FF01FD97FC0EB01F849C8EAFC
3F4848153E4848ED1F7F49ED0FFF0007824848814981001F82A24848167FA2007F173F5B
181FA200FF170FA418077FA36D1603A27F127F7F6D93C7FCA26C7E6D7E6C7F14F06C13FE
ECFFE06C14FE6CECFFE016FE6CEDFFC06C16F86D15FE011F816D16C0010382010082023F
81020381DA003F80030380ED003F04071480EE007F051F13C0837113E0837113F083A218
7F19F800E0173FA2181FA4180F7EA47E19F0A27E181F6C18E0A26CEF3FC07F19806D167F
6DEEFF007F6D4B5A017E4B5A486C4B5AD91FC04A5A26FC0FF04A5AD903FEEC7FC029F800
FFF003FFC7FC48013FB55A020F14F848010114E09126000FFEC8FC3D6878E44E>83
D<EC1FFC91B512C0010714F090391FE00FFC90393F0001FF01FC6D7FD801F0EC7FE0496E
7E48486E7E486C140F01FC81486C6E7E7F707EA3707FA26C5AA2EA01F8C9FCA60303B5FC
92B6FC140F027F1381903901FFF00101071300EB1FFCEB7FF0EBFFC000035B4890C7FC48
5A5B485A123F5B007F181C5BA212FF5BA25EA35E7F007F5D161E6C6C91391C7FC0386D14
3C6C6C14786C6C903A01F03FE070D803FF903A03E01FF9F06C9026E01F80EBFFE029007F
FFFE000713C0010F01F86D1300010001C0EB00FC3E417ABF46>97
D<D901F0EB7F80D807FF903801FFE0B5010713F892381F81FC92383E03FEED7C07000191
38F00FFFEA007F90383FF1E090381FF3C0158014F792380007FEEE03FC02FFEB00F04A14
00A35CA55CB3AF80133F90B57EB712E0A4303F7DBE37>114 D<1438A71478A414F8A313
01A31303A21307130F131FA2137F13FF1203000F90B61280B8FCA326001FF8C8FCB3AE17
E0AE6D6CEB01C0A3010714036E1480010314076E14006D6D5A6DEBC01E91383FF07C6EB4
5A020713E09138007F802B597DD737>116 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmti10 10.95 20
/Fg 20 122 df<932607FFF013064BB6131E923B1FFE0007E07C912601FFC090380079FC
DA07FCC8EA1FF8DA3FE0150F02FFC9EA07F0D903FC1603D90FF817E0EB3FE04948EE01C0
48484816034890CA1380484894C7FC485A485A485AA2485AA2485AA519E0007F4D5A4E5A
6C6C4CC7FC001F170E6C6C163CD807FC16F0D801FEED03C026007FC0023EC8FCD91FFEEB
07F00103B61280D9000F01E0C9FC472570A44E>67 D<932607FFE0130C4BB500FE133C92
3B3FFE000FC0F8912601FF80EB00F3DA0FF8C8EA3FF0DA3FE0151F02FFC9EA0FE0D903FC
1607D90FF017C0EB3FE04948EE038048484816074848CA1300000795C7FC485A485A485A
A2485AA2485AA20403B612C0A293C7387FC000A2007F4D5AA26C6C4B90C7FC121F6C6C4B
5A6C6C1507D801FE4B5A26007FC0147DD91FFE903807E1F80103B6EA0078D9001F01E013
30462570A454>71 D<023FB612C0609126001FF8C8FC5E4B5AA24B5AA24B5AA24A90C9FC
A24A5AA24A5AA24A5AA24A5AA24A5AA24A5A19704A4815E0F001C04990C8EA0380A24948
ED0700181E4948153E6049484A5AEF0FF04948EB01FF007FB85AB95A3C2579A444>76
D<90BA12E0A24890C7903880003FD803F0EF07C001C04990C7FC4848170348C748481580
120E484A4814074819004B5A5A484A48140EC893C7FC4B5AA24B5AA24B5AA24A90CAFCA2
4A5AA24A5AA24A5AA24A5AA24A5AA24A5AA2EB01FF007FB612FEA243256DA44E>84
D<020FB500FE0107B512F04A4A5BDA000F90C8387FF0006F48037EC7FC6F6C15706F4B5A
71EB07806F6D010EC8FC706C1338043F14F09438F003C0706C48C9FC93380FFC1C187893
3807FFE07013807090CAFC84707F4C7F160793381E3FF09338781FF8EEE00FDB03C07F92
390F0007FE033C6D7E03707F4A4881DA07806D7F020EC86C7E143802F06F7ED907E06F7E
D97FF0ED7FFC007FB5020FB512FEB64A5C54257BA451>88 D<91381FF00F903A01F80E3F
80903907C003BF903A1F0001FF00017E7FD801F85C12034848495A485A4848495A123F48
48495AA248C7485AA24891381FC010173892383F8070007E147F9238FF00E06C903903BF
01C0000FD90E1F13803B07C0780F87003A00FF8001FC2D18749738>97
D<EC07FF91387C00F0D903E0131890391F8001FC90397E0007FE49EB0FFCD803F814F848
48EB03E0484890C7FC485A123F485AA248C9FCA35A007E151816386C15E06CEC0380D807
80EB1E003901E003F026003FFCC7FC2718749732>99 D<EF7F8093B51200A2EE00FEA24C
5AA24C5AA24C5AA24C5AA24C5AEC1FF0903A01F80E3F80903907C003BF90271F0001FFC7
FC017E7FD801F85C12034848495A485A4848495A123F4848495AA248C7485AA24891381F
C01017384B485A007E147F4B485A6C903903BF01C0000FD90E1F5B2807C0780F87C7FC3A
00FF8001FC312674A538>I<EC0FFE903901F803C090390FC000E0013EC712F001FC1470
D803F814F0EA0FF04848EB03C04848EB0F803A7F8001FC0090B512C048C9FCA25AA41630
007E1570ED01C0001FEC07006C6C133C3903E007E026007FF8C7FC2418739732>I<EC7F
8090B5C8FCA2EB00FEA2495AA2495AA2495AA2495AA2495AED7FF090393F87803C91389C
003FD97F60EB1F804A14C049C7FC5B4848EC3F80A24848EC7F00A2484814FE4B5A485A4B
5A4848903807F0021707484890380FE00E92381FC00C48C7141CEE803800FE020F136092
380781800078913801FE00302677A538>104 D<EC3F80ECFFC04913806D130091C7FCA8
137F380383E0380603F0121C1238EA300738700FE012E0C6485A495AA249C7FC13FE485A
A23803F8023807F007140E380FE00CEBC01C5C14603807C1C0D800FEC7FC1A2476A321>
I<EB01FE3801FFFC5A380003F8A2EB07F0A2EB0FE0A2EB1FC0A2EB3F80A2EB7F00A213FE
A2485AA2485AA2485AA2485AA2485AA2485AA2387F004014E038FE01C0A238FC0380EB07
00EA7C0E6C5AEA07F0172676A51C>108 D<D801FCD907FFEC7FF03E070F807C03E00780
3C3E0C07C1C001F81C003F001C01E7C7D8FC60EB1F80003801FCDAFDC014C048484802FF
C7FC02E05C4848484948EC3F80120049484948EC7F00A249C7484814FE4F5A01FE4A5A4F
5A48484A48903807F0021B0748484A4890380FE00E96381FC00C48484AC7141CF2803848
4802FE020F13609638078180D807800278913801FE005018769759>I<D801FCEB07FF3B
070F807803C0270C07C1C013F0001C9039E60001F8003801FC8038700FF05C484848495A
12004948495AA249C7485A4C5A13FE4C5A484891387F00201870484802FE13E04B4813C0
484815019338F8038048480100EB0600EE7818D80780EC1FE0341876973D>I<913807FF
8091387E01F0903903E0007CD91F80131F017EC7138049EC0FC0EA03F8484815E0484814
1F485A123F4848EC3FC0A248C8EA7F80170016FE484A5A007E4A5AED07E06C4A5A6C023F
C7FCD807C013F83901F00FC026003FFCC8FC2B18749738>I<02FEEB07FC903B0387C078
0F80903B0603E1C003C0010ED9F70013F0011C01FCEB01F849485A4B14FC49485A13004A
481303A24A48EB07F8A24AC7EA0FF018E002FEEC1FC0EF3F804948EC7F00177E0103EC01
F86EEB03E0D907F7EB0F809126F1C07EC7FC90390FE03FE092C9FC495AA2495AA249CAFC
A213FEA2387FFFFEB5FC36237F9738>I<D801FCEB1FF83A070F81E00F3B0C07C7001F80
001C01ECEB7FC0003801F813FF48484814804AEB7E0048484890C7FC1200495AA249C9FC
A213FEA2485AA2485AA2485AA2485AA2EA07802A1876972E>114
D<EC3FFC903901E003C0010FC71260011EEB01F0017CEB07F849EB0FF0ED07E0486C90C7
FC6CB47EECFF806D13F0011F13FC010313FFD900031380EC007F151FEA3F80B46C140015
1E90C75A00E05C0070EB01E0001F011FC7FC3801FFF0251877972D>I<D97F80130F2601
81E0EB3FC0260601F0137F001C6D131FD83803140F00301507387007F048484814801200
49481400495A49C7120EA201FE5C5E485A5E5E4B5A4B5A00000206C7FC017E131C011F13
F0903803FF802A18769732>118 D<D97F8014F0260181E0EB03F8380601F0001C6DEB07
F0EA38030030ED0FE0387007F0484848EB1FC012004948EB3F80495A49C7EA7F00A201FE
14FEA24848495AA24B5A5B4B5A6C6C130F017CEB3FE090381E01EF903903FF1FC090C7FC
4B5A4BC7FCD81F80137ED87FC05B00FF495A90388003E039FE000F800070013EC8FC381C
01F0D803FFC9FC2D23769735>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmr10 10.95 59
/Fh 59 122 df<EDFFFE91391FE003E0D901FCC71238D907F0EB01FCD91FE0EB07FE495A
49486D5AEE00F094C7FCA6B812FEA23A007F8000031601B2496C497E007FD9FF81B512FE
A237267EA53D>12 D<EA1F80EA7FE0EAFFF0A4EA7FE0A5EA3FC0A5EA1F80A5EA0F00A57E
C7FCA5EA1F80EA7FE0EAFFF0A2EA7FE0EA1F800C2677A51E>33 D<EA1F80EA7FE0EAFFF0
13F8127FEA1F98EA0018A31330A2136013C0EA0180EA06005A12300D1177A51E>39
D<1403140C143814E0EB03C0EB0780EB1E005B5B13F8485A485A1207485A5B121FA248C7
FCA25A127EA312FEA9127EA3127F7EA26C7EA2120F7F6C7E12036C7E6C7E13787F7FEB07
80EB03C0EB00E01438140C1403183775A82A>I<12C01230121C1207EA03C06C7EEA0078
7F7F131FEB0F80EB07C014E0EB03F0130114F8A2EB00FCA214FE147EA3147FA9147EA314
FE14FCA2EB01F8A214F01303EB07E014C0EB0F80EB1F00131E5B5BEA01E0485A48C7FC12
1C123012C018377AA82A>I<EA1F80EA7FE0EAFFF013F8127FEA1F98EA0018A31330A213
6013C0EA0180EA06005A12300D1177851E>44 D<B612F0A31C037F8D24>I<EA1F80EA7F
E0EAFFF0A2EA7FE0EA1F800C0677851E>I<140E147EEB07FEB5FC13FBEA0003B3A9497E
007FB612F8A2252376A237>49 D<903803FFF8017FEBFFC03A01F0007FF80007C7EA07FE
001C913801FF80486E13C0007FED7FE0D8FFC0EC3FF07FA26C5A000EC813E0C9127F17C0
EEFF804B1300ED03FC4B5AED1FE0ED3F8003FCC7FCEC03F0EC07C0021EC8FC1478EB01E0
D907801470011EC812E01370EA01C048C8EA01C0000FB7FC123FB81280A22C237BA237>
I<913803FFE0023F13FE903A03FE001F80D90FE0EB03C0D93F80EB3FE001FEC7127F485A
D807F8EC3FC0484891C7FC485A123FA2485AEC1FFE00FF9038E007E001C3C712FC01CC14
7F01D8EC1FC001F015E049EC0FF017F84915FC127FA36C7E17F8121F6C6CEC1FF0000716
E06C6CEC3F80D800FEECFE0090393FC007F80107B512C09026007FFCC7FC2E237CA237>
54 D<ECFFFC010FEBFFC090397F800FF03A01FC0001FCD807F0EB007FD81FE0EC3F8000
3FED1FC0484815E017F000FF150F17F8A317FC007F151F123F6C6C143F000F156FD803F8
14CFC66CEB030F90381F801C902601FFE013F890C8FCEE1FF0A217E0EE3FC0D80FF0EC7F
80486C1500ED01FC49495A6CC7EA0FE0D803E001FFC7FCC6B512F8010F13802E237CA237
>57 D<EA1F80EA7FE0EAFFF0A2EA7FE0EA1F80C7FCACEA1F80EA7FE0EAFFF0A2EA7FE0EA
1F800C1877971E>I<90381FFFE03901F0007F000FC7EA0FE00018EC07F80070EC03FCB4
6C14FE7FA26C5AC8EA07FCED0FF8ED1FE0ED7F0015F8EC03E04A5A4AC7FC141E5C14385C
A791C8FCA5EB01F8EB07FE497EA26D5AEB01F827267AA534>63 D<160E161F4C7E4C7EA2
4C7E4B7F4B7F169F9238070FFC030E7F92381E07FFED1C034B6C7F037080824B6D7E4A48
6D7E0203814B131F4AC76C7E020E6E7E021E81021C80023FB77E4A8202F0C87F4A157F49
486F7E494882181F49C96C7E010E707E013F832601FFC04B7FB500FE0207B612E0A24B25
7DA452>65 D<B812FEEFFFF026003FF0C7EA0FFE011F923801FFC09438007FF0F01FF872
7E851807A2180F614E5A4E5AF07FC04D48C7FCEF1FF891B7C8FC02F0C7EA0FF8943800FF
80F01FF0F00FFC727E727E7213801AC0A44E13801A00F00FFE4E5AF07FF0013F923807FF
C0B948C7FC18C042257CA44D>I<922607FFF814C04AB6EAC003021F90390001FC0FDAFF
E09038000F1FD903FEC8EA01FFD91FF0ED007FD97FC0163F4948160F000390CA12074848
1703485A48481701485A007F95C7FCA25B12FFA5127F7FA2123F6C6CEF01C06C7E6C7E6C
6CEF0380C66DEE07006D6C160ED91FF8163CD903FE16F0902600FFE0EC07C0DA1FFF02FE
C7FC020190B512F0DA000701FCC8FC42257AA44F>I<B812FEEFFFF026003FF8C7EA0FFF
011F030013C0F01FF8F007FCF001FF9538007F80F13FE0F11FF01AF8190F1AFCF107FEA3
1AFFA61AFEA2F10FFCA21AF8F11FF0F13FE0F17FC0F1FF00F003FEF00FF8F07FE0013FDB
0FFFC7FCB912F04DC8FC48257CA453>I<BA12F0A226003FF8C87F011F16071801180019
7885191CA305707FA296C7FC17F01601160791B6FCA29138F80007160116001770F101C0
A294C7EA0380A219071A00616161197EF003FE013F163FBA5AA242257CA44A>I<BA12E0
A226003FF8C813F0011F160F18031801180019781938A30570131CA2190017F016011607
91B6FCA29138F80007160116001770A394C8FCA9497EB712E0A23E257CA447>I<922607
FFF814C04AB6EAC003021F90390001FC0FDAFFE09038000F1FD903FEC8EA01FFD91FF0ED
007FD97FC0163F4948160F000390CA120748481703485A48481701485A007F95C8FCA25B
12FFA5127F6D033FB61280A2003FDC0001EBE0006C6C705B6C7E6C7E6C7EC67FEB7FE0EB
1FF8D903FE5D902600FFE0EC07BF91261FFF80EBFE0F020190B5EAF003DA000749C7FC49
257AA456>I<B7017FB61280A226003FFCC8D81FFEC7FC6D486F5AAE91B8FCA202F8C812
0FAF496C4B7EB7017FB61280A249257CA452>I<B7FCA239003FFC006D5AB3AD497EB7FC
A220257DA427>I<B712E0A226003FFCCAFC6D5AB3A219E0A2F001C0A318031807F00F80
181F187FEF01FF013F153FBA1200A23B257CA444>76 D<B500FC0507B512E06E5FD8003F
F28000D91DFF051D90C7FC011C6D16396E6C16716E6C16E1A26E6CED01C16E6CED03816E
6CED0701A26E6C150E6E6C151C6E6D1438A26F6C14706F6C14E06F6CEB01C06F6CEB0380
A26F6CEB07006F6C130E6F6C5BA26F6D5A706C5A706C5AA293381FF1C093380FFB8070B4
C7FC705A133E2601FFC06D484A7FB66C6C48010FB612E017705B257CA464>I<B500FC92
B612808026001FFF0301EBC000011D01C0DA003EC7FC011C6D151CEC3FF0EC1FFC6E7EEC
03FF6E13C06E7FED3FF0ED1FFC6F7EED03FF6F13C06F7FEE3FF0EE1FFC707EEE03FF7013
C07013E0EF3FF0EF1FFCEF0FFEEF03FF7113DC7113FC183F181F180F1803013E16012601
FFC01500B66C153C191C49257CA452>I<92380FFFF0913A03FC003FC0DA3F80EB01FCD9
01FCC8EA3F80D907F0ED0FE0D93FC0ED03FC49486F7E4848CAEAFF804848EF7FC04848EF
3FE04848EF1FF04848EF0FF8003F19FC007F19FE491707A200FF19FFA66C6CEF0FFEA200
3F19FC6C6CEF1FF8A26C6CEF3FF0D803FEEF7FC06C6CEFFF806C6C6C923801FE00D93FE0
ED07FCD90FF8ED1FF0D901FEED7F809026003FC0D903FCC7FCDA03FCEB3FC09127000FFF
F0C8FC48257AA455>I<B812FCEFFFE026003FF8C7EA1FFE011F923801FF809438007FE0
F01FF019F8F00FFC19FEA419FCF01FF8F03FF0F07FC0943801FF00EF1FF891B7128002F8
CAFCAF497EB7FCA23F257CA44A>I<B812E0EFFF8026003FF8C7EA7FF0011FED07FE9438
00FF80F07FE0727E727E85A4614E5AF07FC04D48C8FCEF07F8EFFF8091B600E0C9FC9139
F80001FE9338003FE0EF0FF8EF07FE717E717FA485A31B40716D13E0187F496C92393FF0
01C0B7913907FC07009538007FF84B257CA450>82 D<902601FFF81318013F9038FF8078
3B01FE0007F0F8D807F0EB007FD80F80140F003FC81203007E1501160000FE167817387E
6D1500EA7FE013FC383FFFF0000FEBFFF00003ECFFE0C615FE011FECFF80010115E090C7
14F0030113FC9238000FFE1603EE01FF00408100E0167FA27E177E6C16FC00FEED01F86C
6CEC03F001F0EC0FC026F87FC0EBFF00D8F00FB512F826C0003F138030257AA43D>I<00
3FBA12F0A29026F0000390C7123F48C7EE03F8007C180000781978A200701938A348191C
A3C81700B3A34B7F0103B8FCA246257CA44F>I<B791B61280A226003FFCC80001EBC000
6D48DB003EC7FC191CB3A5010F5F8001075F6D6C5ED900FFED03C0DA3F804AC8FCDA0FF0
143CDA03FFEB07F0DA007FB51280030101F8C9FC49257CA452>I<B600F84AB512F8A226
007FFCC9380FFE006D48EE03E06D6C5F010F606D6C4CC7FC6D6C160E6F151E6D6D151C6D
5F6E6C5D6E6C5D6F14016E6C5D020F4B5A6E6C4AC8FC6E6C140E70131E6E6D131C6E5D6F
6C5B7013F06F6C5B031F495A6F6C485A6F6C48C9FC705A6F138E6F139C6F13F8705AA270
5A705A705AA24D257EA452>I<B600F890B600F8010FB512E0A2C601F8C8D87FF8C8383F
F800D93FF06F48ED07C0726C6F5A6D6C704BC7FC6E030F5E010F4C6C150E6D6C705D6E03
3B163C6D04716D14386D6D616F02E06D14F06D4B486C6C5C6E6C4E5A6F49486C6C130302
3F4A486C6C5C6E6C4EC8FC6F010E6D6C5B020F4A6D6C130E6E6C606F496D6C133C6E4A6D
EB80386E01805F70486DEBC0F06ED9C1C06E6C5ADB7FE1EEE1C0DCF380EC3FF3DB3FF7C8
381FFB806FB404FFC9FC4C816F486F5A03075F4C150303035F6F486F5A4C15006B257EA4
70>I<B600FC92387FFFFEA2D8003F90C900071300D90FFEEE01F06D6C17C06D01C0ED07
8001006D4BC7FC6E6C151C6E6C5DDA1FFE15F0DA07FF4A5A6E6D495A6E6D49C8FC6E01F0
130E6F6C133CDB1FFC5B6F6C5B923907FF81C06FEBC380030001EFC9FCEE7FFE705A705A
AC4C7E92B7FCA24F257FA452>89 D<903807FFE090387C007ED803C0EB0FC0D807F0EB07
F0D80FFC6D7E6F7E6C4880EA01E0C8FCA2EC1FFF90380FFC01EBFF00EA07F8EA1FE0485A
4848ED038048C7FCA215036C6C1306D81FC09039187F0700D807F89038E03FFE3B003FFF
0007F031187C9737>97 D<13FFB5FCA212017EAAEDFFF091390F001F800238EB03F002C0
EB00FC4A147F91C8EA3F80EF1FC018E0EF0FF0A218F8A418F0A2EF1FE018C0EF3F806EEC
7E00496C14F8D9FC70EB07E0D9F80F013FC7FC9039F001FFF035267DA53D>I<EC7FFE90
390FC003E0017EC7123CD801F814FED807F0EB03FF485A48486D5A003FEC0078484891C7
FCA212FFA4127F7F123F6C6CEC0380000FED07006C6C140ED801F85CD8007E147090390F
C007C09026007FFCC7FC29187C9731>I<EE07F8ED07FFA2ED000F1607AAEC7FFC903907
E007C7013FC7127701F8141FD803F0140FD80FE01407485A123F485AA212FFA4127FA26C
7E121F6C7E6C6C140FD801F8143FD8007EECE7FC903B0FC00787FFF89039007FF8073526
7CA53D>I<ECFFF890390FC01FC090397E0003F0D801F8EB00FCD807F0147E4848804848
1580123F4848EC1FC0A2B8FC0180C9FCA3127FA26C7E001FED01C06C6CEC0380D803F0EC
07006C6C140ED8003E1438903907E003C09026007FFCC7FC2A187D9731>I<EC0FFE9138
FC03C0903903F01FE090390FE03FF0EB1FC090393F801FE0017F90C7FCA8B612F0A22600
7F80C7FCB3497E007FEBFFE0A224267DA521>I<903A01FFE001FF903B1F807E1E0FC090
39FC000FE0D803F8903907F0070048486D6CC7FC48486D7E001F81A4000F5D6C6C495A6C
6C495AC66CEB0FC027019F807EC8FC390301FFE048CBFCA37F13E06CB612E0C6EDFF806D
15E0D807E0C7EA1FF8001FC8EA01FC007EED007E4882A3007E167E6C5ED80FC0EC03F0D8
01FCEC3F80D8001FB500F8C7FC32237D9737>I<13FFB5FCA212017EAAED3FFC913903C0
1F8091390C000FE00230EB07F84A13034A805C91C7FCAE486D497EB60003B512FCA23626
7CA53D>I<EA03FCEA0FFFA3EA03FCC8FCA713FFB5FCA212017EB1481380B512FEA21724
7CA31F>I<EC7F80903801FFE0A39038007F8091C7FCA7EC1FE0EB3FFFA2EB007F141FB3
A7003F14C039FFC03F801500387F807E383E01F03803FF801B2F85A321>I<13FFB5FCA2
12017EAA0303B512C0A29239007FF000047EC7FC1670ED01C0030FC8FC153C15E0EC03F0
EC0FF8EC79FEECE0FF9138807FC09039FE001FE06F7EED03FC6F7E6F7EEE3FC083486C15
FCB5D8FE01B512F0A234267DA53A>I<13FFB5FCA212017EB3AD481380B6FCA218267CA5
1F>I<D801FED93FFCECFFF000FF903C03C01F800F007E91280C000FE0306D7E00010130
902607F8C0EB1FE0000049902603F980130F4A02FFC77F6D485C91C75BAE486D496C4A7E
B60003B5D8FC0FB512F0A254187C975B>I<D801FEEB3FFC00FF903903C01F8091390C00
0FE000010130EB07F800004913034A806D5A91C7FCAE486D497EB60003B512FCA236187C
973D>I<EC7FFE90390FE007F0017EC7127ED801F8EC1F80D807F0EC0FE04848EC07F048
48EC03F8003F16FC4848EC01FEA200FF16FFA5007F16FE6C6CEC03FC001F16F86C6CEC07
F06C6CEC0FE0D801F8EC1F80D8007EEC7E0090390FE007F09026007FFEC7FC30187D9737
>I<01FFEBFFF0B5390F003F800238EB07F0000101C0EB01FC6C496DB4FC91C8EA7F80EF
3FC0EF1FE018F0170F18F8A418F0171F18E0EF3FC0EF7F806EECFE006EEB01F80270EB07
E0020F013FC7FC913801FFF091CAFCA8487FB6FCA235237D973D>I<D801FEEBFF8000FF
90380703E09138180FF800011330000090386007F09138C001C06D48C7FCA291C8FCAD48
7FB612C0A225187D972B>114 D<90383FFE033907C003DF001EC7123F4880488000F880
7EB4FCD87FF090C7FC383FFFF8000FEBFFC0000314F8C66C13FE9038003FFF0200138000
E0EC1FC0150F6C14077E6C15806CEC0F006C141CD8F0F013F026C01FFFC7FC22187C972B
>I<EB0380A31307A2130FA2131F137F13FF0007EBFFFEB6FC26007F80C7FCACED0380A5
133F9138C0070090380FE00E903803F0189038007FE021227EA12A>I<01FFEC03FCB5EB
03FFA20001EC00076C1503AD1607A26D140F161BD91F80EB63FE903B07E00383FFFC9039
007FFC0336187C973D>I<B500FE90381FFFF8A20001018001011300D8007FEC00F86E5C
013F5D6D6C495A6D6C495A6D6C49C7FC6E5B0103140E6D6C5B6D6C5B6E6C5AEDC0F0023F
5B91381FE1C091380FF3806EB4C8FCA26E5A6E5A6E5AA235187E973A>I<B527FC3FFFFE
90B512C0A20001902780007FC090380FF8006C90C76C48EB03E06D6C6D6C1480836D6C4C
C7FC6D6C496C130E6E496C131E010F0273141C6D6CD9E1FC5B902803FC01C0FE5BA29028
01FE03807F5B903C00FF07003F81C0038F14C3DA7F8E011F5BDA3FDCD90FE7C8FC03F86D
B4FC021F5D6E486D5A6E486D5AA26E486D5A4A187E974F>I<267FFFFE90387FFFF8A226
007FF090380FFC00D91FE0EB07C0D907F849C7FC6D6C131C6DB413789039007F80E09138
3FE3C0DA0FF7C8FCEC07FE14016E6C7E02037F9138079FF091381E07F891383C03FE9138
F000FFD901C0EB7FC0D90780EB1FE0011FEC0FF8D801FF81B500F090B512FEA237187F97
3A>I<B500FE90381FFFF8A20001018001011300D8007FEC00F86E5C013F5D6D6C495A6D
6C495A6D6C49C7FC6E5B0103140E6D6C5B6D6C5B6E6C5AEDC0F0023F5B91381FE1C09138
0FF3806EB4C8FCA26E5A6E5A6E5AA25D5D4A5A4A5A1407007F49C9FC38FF800E143C387F
0070383C03C0D807FECAFC35237E973A>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmr12 12 15
/Fi 15 119 df<EA1F80EA7FE0EAFFF0A2EA7FE0EA1F800C06768521>46
D<1710177C17F8A2EE01F0EE03E0EE07C0A2EE0F80EE1F00A2163E5E5EA24B5A4B5A4B5A
A24B5A4BC7FCA2153E5D5DA24A5A4A5AA24A5A4A5A4AC8FCA2143E5CA25C495A495AA249
5A495AA249C9FC133E5BA25B485A485AA2485A485AA248CAFC123E5AA25A12202E3C7AAC
3B>I<EC3FFC903907E007E0013FC712FC01FC143F4848EC1F80D807F0EC0FE04848EC07
F0491403001F16F8003F16FCA24848EC01FEA300FF16FFAB007F16FEA36C6CEC03FCA200
1F16F86D1407000F16F06C6CEC0FE0D801F8EC1F806C6CEC3F00013F14FC903907E007E0
9026007FFEC7FC30277BA63B>I<1407143F49B4FC90B5FCB6FC13011200B3AC497FB712
FEA2272775A63B>I<903801FFF8011FEBFFE09039FC003FFCD803C0EB03FF000EC813C0
48ED3FE048ED1FF0007416F8B46CEC0FFC13E0A26C5A001FC8FCC9EA1FF817F0163FEE7F
C01780923801FF00ED03FCED07F0ED0FC0033FC7FC15FCEC01F0EC07C0021FC8FC143C14
F0D903C0141C010FC8FC011C15381370D801C015780007C912F048B7FC123FB812E0A22E
277AA63B>I<160F5E167F5E5D1507150E15385D15C0EC03804A5A141C5C14E0495A49C7
FC130E5B13705BEA038048C8FC120E12385AB912F0A2C8000190C7FCA84B7F020FB612E0
A234277DA63B>52 D<D80380EC01C001FEEC7F0090B612FE16F016C001BF01FCC7FC0180
C9FCA9ECFFFC90399F0007E001E0EB01F80180EB007EC9EA3F80EE1FE017F0160F17F817
FCA2121FEA7FC0487E4915F849141F0070C813F06CED3FE0003CED7FC0000FEDFF00D807
C0EB03FCD800FCEB3FF0013FB51280010301F0C7FC2E277AA63B>I<121EEA1F8090B812
C0A2481780EFFE00003CC9121C48167000705EEE0380484BC7FC160EC912385EED01C04B
5A4BC8FC151E5D5D5D14014A5A1407140F5D141F143FA24A5AA214FFA35BA6D9007EC9FC
32297AA83B>55 D<EC7FFE0107B512F090393F8003FE01F8C7EA3F80D803E0EC0FE04848
EC03F0485A001FED01F8A27F6DEC03F0D80FFC15E001FFEC07C06C01E0EB1F00000101FC
133C3A007FFF81F0011F01FFC7FC01035B9039007FFFC0D903EF13F8D91F0113FF9026F8
003F13C0D803E0010713F0D80FC0010013F848C8EA1FFC003EED03FE007EED00FF48167F
173FA2173E127E007F167C6C6C15F8D80FC0EC03E0D803F8EC0F803B00FF8001FE00011F
B512F0010049C7FC30277BA63B>I<EC7FFC0107B512E090393FC007F801FEC712FED803
F8EC3F80D80FF0EC1FC04848EC0FE0003FED07F0484815F817FC12FFEE03FEA317FF007F
5DA26C6C5C120F6C6C141BD801F81463D8007E14C390390FC00F03902600FFF013FE91C7
FCA2EE07FC17F8A2EE0FF0EE1FE0D80FF015C0486CEC7F0016FE49EB01F86CC7EA0FE0D8
03E0EB7F80C6B500FCC7FC010F138030277BA63B>I<B600F8010FB66C010FB512E0A2C6
01FCC8000F01C0C8387FF800D93FF0030390C9EA0FC06E716F5A011F7095C7FC6D6C6F6D
150E866D6C4B5F6D6C922603BFF05DA26D6D9126071FF85D6F91260E0FFC15F06D646E6C
4A6C6C4A5A6F023C6D1403023FDB38035E6E6C4A6C6D49C8FC6F02F06E5B020F4B6C150E
6E6C49486D6C5B6F836E4A48013F5C6E6D48C76C6C5B876ED9C00E020F5C6F6C486E6C48
5AA26F6C486E6C485A70486E1387031F96C9FC6F6C486E13CE04FF17FE6F496F5A6F496F
5AA26F90C96C5A6F48705AA2047C705A0438705A73297EA878>87
D<17FF4BB5FCA2ED00031600ACEC1FFF903903F800F0D91F80131C017EC71207D801F814
01D807F080485A485A123F485AA212FFA5127F6C7EA26C7ED807F05C6C6C5CC66C140601
1F023813C0902703F001E0EBFF809039003FFE00392A7CA941>100
D<EA01FE3807FF80A3D801FEC7FCC9FCA9EB7F80B5FCA21201EA007FB3497EB61280A219
287CA721>105 D<01FFEB0FFFB59038F007F09139030001FC0001010C6D7E26007F3014
7F4A815CA25CAF496C4A7EB600C0B612C0A23A1A7C9941>110 D<B60103B51280A2C601
C09039003FF0006D48EC1F806D6C020EC7FC6D6C5C6E143C6D6C5C010715706D6C5C6D6C
495A6E13036D01805B027F49C8FC91383FC00E6E6C5AEDF03C020F13386E6C5A6E6C5A6E
B45AA26E5B6FC9FC153EA2391A7E993E>118 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmr17 17.28 12
/Fj 12 119 df<BD12F8A2D8000F01C0C9003F7F6D4916006D190F1B031B001C7E1C3E1C
1EA21C0E1C0F88A4F40380191C99C7FCA4193CA219FC1801181F92B7FCA20380C7121F18
011800193CA2191CA596CAFCAF497F4913F0B812C0A2593B78BA68>70
D<B700C04AB76C030FB512FEA2C66C01C0CA0280CA6C13C0011F90CBD83FFECB380FFC00
6D487248F003F06E73616D070F735A6D6D716C4E5A6F856D734FC7FC6D6D4D6D170E896E
6C050E616F4D6C6C173C023F20386E6C4D6C6C5F6F05786D17F0020FDE701F606E6C4D6C
6C4C5A700301806E4E6C4D5A6E6D4B486C6D4BC8FC8A6E6D4B486C170E70030E6D6D151E
037F1E1C6F6C4B6E6C5D70033C81031F0438023F5E6F6C4B6E6C5D7003F0816F4C020F4B
5A6F6D49486E6C4A5A8B6F6D49486E4BC9FC7149C86C6D5B6F1D0E706C010E6F6D5B7101
1E83043F021C047F5C706C49706C5B077883706C0170041F5C706C49706C485A1FFF70D9
81C070495ADEC3807013877099CAFC7001E7CA6C13CE06FF19EE71487113FC7148725AA2
7148725A7148725AA27148725A4E18070503629F3B7EBAA4>87 D<913807FFE09139F800
7F80D90780EB07F0011CC812FE0170ED7F80496F7E4848ED1FF0D803F86F7E48B415076E
81A26C90C8FC6C5ACAFCA2EE07FF92387FFE0791381FF80049B4C7FCEB1FF0EB7FC04848
C8FCEA07FCEA1FF8485A4848180EA2485A170FA2171B6C6C15336C6CDBC1FE131CD80FF8
91260180FF1338D803FE913A0E007F807026003FE001F090381FFFC00100B5C73803FE00
472579A44F>97 D<F003FF051FB5FCA2EF000F180384B292381FFF80913907F8007C023F
C7EA0381D901F8EC00E1D90FE01519D93FC0150F49C97ED801FE82484882485A120F485A
123F127F5B12FFA7127F7F123F121F7F120F6C7ED801FE5E6C6C5ED93F80151DD90FE015
31D903F0DA01C17FD9007EDA0F0113E0DA0FE001F8ECFFF09139003FFF004C3C7ABB58>
100 D<ED7FFF91391FC003F802FCC7EA3F80D903F0EC0FE0D91FC0EC03F8D97F80EC01FE
01FEC97E0003EF7F804848EE3FC0484817E0001FEF1FF0485AA2484817F8180F12FF90B9
FC01E0CBFCA5127F7F123F121F7F000F1838D803FC17706C6C17E06C6CEE01C0D93F80ED
0380D90FE0ED0E00D903F81538D9007FEC03E0DA07F0017EC7FC9139003FFFC03D257BA4
46>I<EB7F803801FFE0487FA26C5B38007F8090C8FCADEB3FF0B5FCA2C6FC133F131FB3
ABEB7FFCB612FCA21E387AB72A>105 D<D93FF0903807FFF0B59138F800FF0303C7EA0F
E0D8007F010CEC07F8011F01306E7E010F01C06E7EDAF1808102F3C9FC02F68314FCA25C
B3A5D93FFE030313E0B7D8800FB612F8A24D257AA458>110 D<D97FE0EB3FF8B5903803
C00F92390C007FC0C691393001FFE0013F13C090381FE18002E3C7EA7F8002E6EC1E0002
EC91C7FCA214F8A35CB3A280EB7FFEB712C0A233257AA43D>114
D<91B538C00380903A1F80003C07D801F0C7EA039FD80780EC007F001FC9123F003E161F
48160F170712FC6C16037E7FD87FF092C7FC6CB4FC000F13FE000390B57EC615FE011FEC
FFE0010015F8DA007F13FE9239003FFF80040113C000E09238003FE0EF0FF06CEE07F817
036C16017E18F07E6CEE03E06D16C001E0ED0780D8FE30ED1E00D8F80E15F826F001F0EB
1FC028E0001FFFF0C7FC35257CA43E>I<1407A45CA35CA25C5C5C5B5B130F133F0003B7
12FEB8FCD8000190C9FCB3EF01C0A86D16806F1303027F15006E6C5B6E6C130CDA07F05B
DA00FE13E0DB0FFFC7FC32357EB43D>I<D91FF84BB47EB5030FB5FCA2D8007FED000701
1F1601010F82B3A360A260130718066D6C5D010116306D6C4B7FDA3F80D9038013F0DA07
F8D93C00EBFFF89139003FFFC04D257AA458>I<B600F84AB512FCA2C649C9001F1380D9
3FF8933807FC00011FEF03F06D6C17C00107606D6C4CC7FC6D6C160E6F151E6D6D151C02
7F5E6E6C5D6E6C5D6F14016E6C5D02074B5A6E6C4AC8FC6E6C140E70131E6E6D131C037F
5C6F6C5B6F6C5BEEF801DB0FFC5B0307495A6F6C48C9FC923801FF0E179E6F13DCEE7FF8
705A705AA2705A705A4E257EA453>I E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 720dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop Black Black Black Black 1 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 1650 1125 1203 180 v 1 0 0 TeXcolorrgb Black
0 0 1 0 TeXcolorcmyk 1680 1095 a Fj(Windvi)55 b(F)-13
b(eatures)p Black 1 0 0 TeXcolorrgb Black 1939 1398 a
Fi(Windvi)39 b(0.54)p 0 0 1 TeXcolorrgb 1959 1643 a(21/07/1998)p
Black 458 2061 a Fh(Man)m(y)c(of)i(these)e(examples)e(are)i(tak)m(en)g
(from)h(the)g Fg(L)-6 b(aT)e(eX)40 b(Gr)-6 b(aphics)39
b(Comp)-6 b(anion)p Fh(.)458 2197 y(First,)37 b(w)m(e)e(c)m(hec)m(k)f
(the)i(color)e(text)i(b)s(eha)m(vior:)p 0 1 0 TeXcolorrgb
Black 0 1 0 TeXcolorrgb 458 2452 a(green)e(text)p Black
1 0 0 TeXcolorrgb 458 2587 a(red)h(text)p Black 0 0 1 0
TeXcolorcmyk 458 2723 a(y)m(ello)m(w)f(text)p Black 0 1 0 0
TeXcolorcmyk 458 2858 a(magen)m(ta)h(text)p Black 1 0 0 0
TeXcolorcmyk 458 2994 a(cy)m(an)g(text)p Black 628 3249
a(This)g(is)g(the)h(default)f(text.)p Black 2224 6783
a(1)p Black eop
%%Page: 2 2
2 1 bop Black Black 458 658 a Fh(Next,)36 b(some)g(P)m(ostScript)e
(inclusions)e(:)628 1413 y(left)p 783 1413 110 4 v 891
693 728 4 v 891 1413 4 720 v 112 w @beginspecial 100
@llx 100 @lly 172 @urx 172 @ury 720 @rwi @setspecial
%%BeginDocument: wsample.ps
%! A small Encapsulated Postscript image used in the examples
%%BoundingBox: 100 100 172 172
100 100 translate
  0   0    moveto
 72  72    rlineto
 72 neg 0  rlineto
 72 72 neg rlineto
stroke
  0  0     moveto
/Times-Roman findfont
 72        scalefont
           setfont
(W) show

%%EndDocument
 @endspecial 1615 1413 V 891 1417 728 4 v 1619 1413 110
4 v 833 w(righ)m(t)628 2248 y(left)p 819 2248 V 928 1448
308 4 v 928 2248 4 801 v 149 w @beginspecial 120 @llx
120 @lly 150 @urx 200 @ury 300 @rwi @setspecial
%%BeginDocument: wsample.ps
%! A small Encapsulated Postscript image used in the examples
%%BoundingBox: 100 100 172 172
100 100 translate
  0   0    moveto
 72  72    rlineto
 72 neg 0  rlineto
 72 72 neg rlineto
stroke
  0  0     moveto
/Times-Roman findfont
 72        scalefont
           setfont
(W) show

%%EndDocument
 @endspecial 1232 2248 V 928 2252 308 4 v 1236 2248 110
4 v 413 w(righ)m(t)144 b(left)p 1909 2248 V 2018 1448
308 4 v 2018 2248 4 801 v 149 w @beginspecial 120 @llx
120 @lly 150 @urx 200 @ury 300 @rwi @clip @setspecial
%%BeginDocument: wsample.ps
%! A small Encapsulated Postscript image used in the examples
%%BoundingBox: 100 100 172 172
100 100 translate
  0   0    moveto
 72  72    rlineto
 72 neg 0  rlineto
 72 72 neg rlineto
stroke
  0  0     moveto
/Times-Roman findfont
 72        scalefont
           setfont
(W) show

%%EndDocument
 @endspecial 2322 2248 V 2018 2252 308 4 v 2326 2248
110 4 v 413 w(righ)m(t)628 3301 y(left)p 783 3301 V 891
2283 1027 4 v 891 3301 4 1019 v 1404 3301 a
 gsave currentpoint currentpoint translate 45 neg rotate neg exch neg
exch translate
 1404 3301
a @beginspecial 100 @llx 100 @lly 172 @urx 172 @ury 720
@rwi @setspecial
%%BeginDocument: wsample.ps
%! A small Encapsulated Postscript image used in the examples
%%BoundingBox: 100 100 172 172
100 100 translate
  0   0    moveto
 72  72    rlineto
 72 neg 0  rlineto
 72 72 neg rlineto
stroke
  0  0     moveto
/Times-Roman findfont
 72        scalefont
           setfont
(W) show

%%EndDocument
 @endspecial 2124 3301 a
 currentpoint grestore moveto
 2124 3301 a 1913 3301 4 1019
v 891 3305 1027 4 v 1917 3301 110 4 v -97 w Fh(righ)m(t)p
Black Black eop
%%Page: 3 3
3 2 bop Black Black 458 658 a Fh(Y)-9 b(ou)36 b(can)f(include)d(the)k
(compressed)d(v)m(ersion)h(to)s(o:)628 1711 y(left)p
783 1711 110 4 v 891 693 1027 4 v 891 1711 4 1019 v 1404
1711 a
 gsave currentpoint currentpoint translate 45 neg rotate neg exch neg
exch translate
 1404 1711 a @beginspecial 100 @llx 100 @lly 172
@urx 172 @ury 720 @rwi @setspecial
%%BeginDocument: ws_gzip.ps.gz
%! A small Encapsulated Postscript image used in the examples
%%BoundingBox: 100 100 172 172
100 100 translate
  0   0    moveto
 72  72    rlineto
 72 neg 0  rlineto
 72 72 neg rlineto
stroke
  0  0     moveto
/Times-Roman findfont
 72        scalefont
           setfont
(W) show

%%EndDocument
 @endspecial 2124 1711 a
 currentpoint grestore moveto
 2124 1711 a 1913 1711 4 1019
v 891 1715 1027 4 v 1917 1711 110 4 v -97 w Fh(righ)m(t)628
1846 y(or)45 b(ev)m(en)f(some)h(ra)m(w)g(P)m(ostScript)f(co)s(de.)76
b(The)44 b(follo)m(wing)e(\014gure,)47 b(Fig.)e(1,)j(is)e(an)458
1982 y(example)39 b(of)j(ra)m(w)f(p)s(ostscript)f(b)s(eing)f(sen)m(t)j
(to)f(the)h(driv)m(er.)63 b(It)42 b(w)m(as)f(tak)m(en)g(from)g(the)458
2117 y Fg(dvips)36 b Fh(man)m(ual.)p Black 458 3698 a
@beginspecial @setspecial
 newpath 000 000 moveto 100 100 lineto 394 0 lineto closepath gsave
0.8 setgray fill grestore stroke
 
@endspecial Black 839 4933
a(Figure)f(1:)48 b(P)m(ostscript)35 b(co)s(de)g(directly)e(from)j(a)g
Fg(sp)-6 b(e)g(cial)37 b Fh(command.)p Black Black Black
Black eop
%%Page: 4 4
4 3 bop Black Black 628 658 a Fh(A)36 b(TPiC)f(trial:)p
8 setlinewidth np 3196 1466 a 3184 1424 li st 8 setlinewidth
np 3184 1424 a 3175 1466 li st 8 setlinewidth np 3264
1421 79 277.78 538.25 arc st 8 setlinewidth np 1886 1101
a 1906 1136 li st 8 setlinewidth np 1906 1136 a 1905
1096 li st 8 setlinewidth np 1976 1115 72 163.26 425.63
arc st 8 setlinewidth np 1748 1224 a 1780 1216 li st
8 setlinewidth np 1780 1216 a 1748 1207 li st 8 setlinewidth
np 1783 1156 60 92.12 357.88 arc st 764 1288 a @beginspecial
@setspecial
1 1 1 1 0.79999 16383.18573 61.41437 23.48196 !O
 
@endspecial 8 setlinewidth np 1925 1288
98 0.00 360.00 arc st 8 setlinewidth np 2537 1288 98
0.00 360.00 arc st 8 setlinewidth np 3149 1288 98 0.00
360.00 arc st 8 setlinewidth np 3751 1288 98 0.00 360.00
arc st 8 setlinewidth np 4354 1288 98 0.00 360.00 arc
st 8 setlinewidth np 1114 1288 a 1772 1288 li st 8 setlinewidth
np 1700 1306 a 1772 1288 li st 8 setlinewidth np 1772
1288 a 1700 1270 li st 8 setlinewidth np 2086 1288 a
2384 1288 li st 8 setlinewidth np 2312 1306 a 2384 1288
li st 8 setlinewidth np 2384 1288 a 2312 1270 li st 8
setlinewidth np 2680 1288 a 2995 1288 li st 8 setlinewidth
np 2923 1306 a 2995 1288 li st 8 setlinewidth np 2995
1288 a 2923 1270 li st 8 setlinewidth np 3292 1288 a
3598 1288 li st 8 setlinewidth np 3526 1306 a 3598 1288
li st 8 setlinewidth np 3598 1288 a 3526 1270 li st 8
setlinewidth np 3904 1288 a 4201 1288 li st 8 setlinewidth
np 4129 1306 a 4201 1288 li st 8 setlinewidth np 4201
1288 a 4129 1270 li st 8 setlinewidth np 3103 1396 a
-180 134 rl -120 90 -269 142 -449 156 rc -179 14 -314
0 -404 -45 rc -90 -44 -142 -88 -157 -133 rc 1888 1442
li st 8 setlinewidth np 1928 1504 a 1888 1442 li st 8
setlinewidth np 1888 1442 a 1894 1515 li st 8 setlinewidth
np 2518 1396 a -90 67 rl -60 45 -127 67 -202 67 rc -74
0 -134 -22 -179 -67 rc 1978 1396 li st 8 setlinewidth
np 2042 1435 a 1978 1396 li st 8 setlinewidth np 1978
1396 a 2016 1460 li st 8 setlinewidth np 2446 1388 a
-98 26 rl -66 18 -135 18 -207 0 rc 2032 1388 li st 8
setlinewidth np 2106 1388 a 2032 1388 li st 8 setlinewidth
np 2032 1388 a 2098 1422 li st 8 setlinewidth np 3643
1172 a -270 -90 rl -180 -60 -345 -60 -495 0 rc 2653 1172
li st 8 setlinewidth np 2713 1128 a 2653 1172 li st 8
setlinewidth np 2653 1172 a 2727 1162 li st 8 setlinewidth
np 3688 1126 a -184 -126 rl -123 -84 -325 -114 -607 -90
rc -282 24 -490 79 -625 166 rc 2068 1208 li st 8 setlinewidth
np 2119 1153 a 2068 1208 li st 8 setlinewidth np 2068
1208 a 2139 1183 li st 3967 1234 a Ff(C)3365 1252 y(B)3140
856 y(B)2888 1036 y(A)3347 1558 y(A)2798 1540 y(C)2780
1243 y(A)2447 1558 y(C)2222 1387 y(B)2186 1252 y(A)1961
1009 y(C)1619 1126 y(B)629 1324 y(Start)974 b(1)524 b(2)560
b(3)514 b(4)551 b(*)628 1928 y Fh(End)35 b(of)i(TPic)e(test.)1053
2505 y @beginspecial @setspecial
0.39998 56.90521 !C
 
@endspecial 1761 2505
a
 currentpoint currentpoint translate 1 2 scale neg exch neg exch translate
 1761 2505 a @beginspecial @setspecial
0.39998 56.90521 !C
 
@endspecial
1761 2505 a
 currentpoint currentpoint translate 1 1 div 1 2 div scale neg exch
neg exch translate
 1761 2505 a 1761 2505 a
 currentpoint currentpoint translate 1 .5 scale neg exch neg exch translate
 1761 2505 a 0 setgray
@beginspecial @setspecial
0.39998 56.90521 !C
 
@endspecial 1761 2505 a
 currentpoint currentpoint translate 1 1 div 1 .5 div scale neg exch
neg exch translate
 1761
2505 a 458 3207 a Fh(Here)27 b(the)g(text)h(should)e(b)s(e)h(rotated,)i
(but)e(giv)m(en)f(this)h(is)h(text,)h(and)e(that)h(this)g(material)458
3343 y(is)36 b(not)g(pro)s(cessed)d(b)m(y)j(ghostscript,)e(the)i(text)g
(is)g(not)g(rotated.)p 628 3378 1426 4 v 628 4079 4 702
v 632 3945 a
 currentpoint currentpoint translate 1.36647 0.67609 scale neg exch
neg exch translate
 632 3945 a 869 3945 a
 gsave currentpoint currentpoint translate 45 neg rotate neg exch neg
exch translate
 869 3945 a -261 x
Fh(TUG96)f(in)g(Russia)869 3819 y(TUG96)g(in)g(Russia)869
3955 y(TUG96)g(in)g(Russia)869 4090 y(TUG96)g(in)g(Russia)869
4226 y(TUG96)g(in)g(Russia)1719 3945 y
 currentpoint grestore moveto
 1719 3945 a 632
3945 a
 currentpoint currentpoint translate 1 1.36647 div 1 0.67609 div scale
neg exch neg exch translate
 632 3945 a 2049 4079 4 702 v 628 4083 1426 4 v
Black Black eop
%%Page: 5 5
5 4 bop Black Black 458 658 a Fh(The)36 b(W)-9 b(orld)34
b(of)i(Color)f(\(I\))i(:)p Black 592 913 a(1.)p Black
0 1 0 0 TeXcolorcmyk 54 w(magen)m(ta)d(cm)m(yk)p Black
35 w(blac)m(k)p 0.5 TeXcolorgray Black 592 1138 a(2.)p
0.5 TeXcolorgray 0 0 1 TeXcolorrgb 54 w(prede\014ned)f(blue)p
0.5 TeXcolorgray 34 w(gra)m(y)i(text)p Black Black Black
eop
%%Page: 6 6
6 5 bop Black Black 458 658 a Fh(The)36 b(W)-9 b(orld)34
b(of)i(Color)f(\(I)s(I\))j(:)p 1 0 0 TeXcolorrgb 458
717 1881 4 v 458 814 4 97 v 0 0 1 TeXcolorrgb 0 0 1 TeXcolorrgb
462 814 1873 97 v 0 0 1 TeXcolorrgb Black 462 793 a(Blac)m(k)d(text,)h
(blue)f(bac)m(kground,)d(red)j(frame)p 0 0 1 TeXcolorrgb
1 0 0 TeXcolorrgb 2334 814 4 97 v 458 818 1881 4 v Black
1 0 0 TeXcolorrgb 458 853 1909 4 v 458 950 4 97 v 0 0 1
TeXcolorrgb 0 0 1 TeXcolorrgb 462 950 1901 97 v 0 0 1
TeXcolorrgb Black 1 TeXcolorgray 462 929 a(White)h(text,)g(blue)f(bac)m
(kground,)d(red)j(frame)p Black 0 0 1 TeXcolorrgb 1 0 0
TeXcolorrgb 2363 950 4 97 v 458 954 1909 4 v Black 1 0 0
TeXcolorrgb 458 988 1901 4 v 458 1085 4 97 v 0 0 1 TeXcolorrgb
0 0 1 TeXcolorrgb 462 1085 1893 97 v 0 0 1 TeXcolorrgb
Black 0 1 0 TeXcolorrgb 462 1064 a(Green)g(text,)h(blue)e(bac)m
(kground,)f(red)i(frame)p Black 0 0 1 TeXcolorrgb 1 0 0
TeXcolorrgb 2355 1085 4 97 v 458 1089 1901 4 v Black
0 0 1 0 TeXcolorcmyk 0 0 1 0 TeXcolorcmyk 628 1434 899
276 v 0 0 1 0 TeXcolorcmyk Black 727 1334 a(F)-9 b(un)36
b(with)f(color)p 0 0 1 0 TeXcolorcmyk Black 1 0 0 TeXcolorrgb
1744 1159 1018 60 v 1744 1434 60 276 v 0 0 1 0 TeXcolorcmyk
0 0 1 0 TeXcolorcmyk 1804 1434 899 276 v 0 0 1 0 TeXcolorcmyk
Black 475 w(F)-9 b(un)36 b(with)f(color)p 0 0 1 0 TeXcolorcmyk
1 0 0 TeXcolorrgb 2702 1434 60 276 v 1744 1494 1018 60
v Black 0 1 0 TeXcolorrgb 0 1 0 TeXcolorrgb 628 1908
899 276 v 0 1 0 TeXcolorrgb Black 727 1809 a(F)-9 b(un)36
b(with)f(color)p 0 1 0 TeXcolorrgb Black 1 0 0 TeXcolorrgb
1744 1633 918 10 v 1744 1908 10 276 v 0 1 0 TeXcolorrgb
0 1 0 TeXcolorrgb 1754 1908 899 276 v 0 1 0 TeXcolorrgb
Black 425 w(F)-9 b(un)36 b(with)g(color)p 0 1 0 TeXcolorrgb
1 0 0 TeXcolorrgb 2652 1908 10 276 v 1744 1918 918 10
v Black Black Black eop
%%Page: 7 7
7 6 bop Black Black 1819 1563 a Fe(\\)1778 1559 y(\\)1737
1555 y(\\)1696 1551 y(\\)1655 1547 y(\\)1614 1542 y(\\)1703
1503 y(m)1658 1523 y(m)1614 1542 y(m)1749 1482 y(H)1789
1510 y(H)1828 1539 y(H)1493 1456 y(H)1533 1485 y(H)1573
1513 y(H)1493 1457 y(\\)1535 1461 y(\\)1576 1465 y(\\)1617
1469 y(\\)1658 1474 y(\\)1699 1478 y(\\)1359 1517 y(\\)1400
1521 y(\\)1441 1525 y(\\)1482 1530 y(\\)1523 1534 y(\\)1564
1538 y(\\)1359 1517 y(m)1403 1497 y(m)1448 1477 y(m)1479
1602 y(m)1524 1583 y(m)1568 1563 y(m)1438 1574 y(H)1399
1545 y(H)1359 1517 y(H)1694 1599 y(H)1654 1571 y(H)1614
1542 y(H)1684 1623 y(\\)1643 1619 y(\\)1602 1615 y(\\)1561
1611 y(\\)1520 1607 y(\\)1479 1603 y(\\)1823 1588 y(m)1779
1608 y(m)1734 1628 y(m)1820 1073 y(Y)1779 1065 y(Y)1737
1057 y(Y)1696 1049 y(Y)1655 1040 y(Y)1614 1032 y(Y)1720
972 y(q)1685 992 y(q)1649 1012 y(q)1614 1032 y(q)1763
947 y(8)1788 979 y(8)1813 1012 y(8)1838 1044 y(8)1508
896 y(8)1533 928 y(8)1558 961 y(8)1583 993 y(8)1508 897
y(Y)1550 905 y(Y)1591 913 y(Y)1632 922 y(Y)1673 930 y(Y)1714
938 y(Y)1359 982 y(Y)1400 990 y(Y)1441 998 y(Y)1482 1007
y(Y)1524 1015 y(Y)1565 1023 y(Y)1359 981 y(q)1394 961
y(q)1429 941 y(q)1465 921 y(q)1464 1117 y(q)1500 1097
y(q)1535 1077 y(q)1570 1057 y(q)1433 1078 y(8)1408 1046
y(8)1383 1013 y(8)1358 981 y(8)1689 1129 y(8)1664 1097
y(8)1639 1064 y(8)1614 1032 y(8)1670 1158 y(Y)1629 1150
y(Y)1588 1142 y(Y)1547 1134 y(Y)1505 1125 y(Y)1464 1117
y(Y)1825 1108 y(q)1790 1128 y(q)1755 1148 y(q)1719 1168
y(q)2458 1501 y(e)2416 1509 y(e)2375 1518 y(e)2334 1526
y(e)2293 1534 y(e)2252 1542 y(e)2344 1570 y(V)2298 1556
y(V)2252 1542 y(V)2392 1584 y(y)2430 1553 y(y)2468 1523
y(y)2137 1635 y(y)2175 1604 y(y)2213 1574 y(y)2137 1634
y(e)2178 1625 y(e)2220 1617 y(e)2261 1609 y(e)2302 1601
y(e)2343 1592 y(e)1996 1593 y(e)2038 1585 y(e)2079 1577
y(e)2120 1568 y(e)2161 1560 y(e)2203 1552 y(e)1996 1594
y(V)2043 1607 y(V)2089 1621 y(V)2111 1502 y(V)2157 1515
y(V)2204 1529 y(V)2072 1533 y(y)2034 1563 y(y)1996 1593
y(y)2327 1482 y(y)2289 1512 y(y)2252 1542 y(y)2317 1460
y(e)2276 1469 y(e)2234 1477 y(e)2193 1485 y(e)2152 1493
y(e)2111 1502 y(e)2459 1478 y(V)2412 1464 y(V)2366 1451
y(V)2459 970 y(i)2418 982 y(i)2376 995 y(i)2335 1007
y(i)2293 1020 y(i)2252 1032 y(i)2375 1102 y(M)2334 1079
y(M)2293 1055 y(M)2252 1032 y(M)2419 1127 y(\017)2441
1084 y(\017)2462 1042 y(\017)2484 1000 y(\017)2164 1203
y(\017)2185 1161 y(\017)2207 1119 y(\017)2229 1077 y(\017)2164
1204 y(i)2205 1191 y(i)2247 1179 y(i)2288 1166 y(i)2330
1154 y(i)2371 1141 y(i)1996 1109 y(i)2038 1097 y(i)2079
1084 y(i)2121 1072 y(i)2162 1060 y(i)2204 1047 y(i)1996
1109 y(M)2038 1132 y(M)2079 1155 y(M)2120 1179 y(M)2084
938 y(M)2126 961 y(M)2167 985 y(M)2208 1008 y(M)2062
982 y(\017)2040 1025 y(\017)2019 1067 y(\017)1997 1109
y(\017)2317 906 y(\017)2295 948 y(\017)2274 990 y(\017)2252
1032 y(\017)2292 876 y(i)2250 888 y(i)2209 901 y(i)2167
913 y(i)2126 925 y(i)2084 938 y(i)2463 931 y(M)2422 908
y(M)2381 885 y(M)2339 861 y(M)2762 777 y(0)2784 819 y(0)2807
861 y(0)2829 903 y(0)2852 945 y(0)2874 987 y(0)2896 1028
y(0)2919 1070 y(0)2941 1112 y(0)2964 1154 y(0)2986 1196
y(0)3009 1238 y(0)3031 1280 y(0)3054 1322 y(0)3076 1364
y(0)3098 1406 y(0)3121 1447 y(0)2762 777 y(+)2779 824
y(+)2796 870 y(+)2813 917 y(+)2830 963 y(+)2847 1010
y(+)2864 1056 y(+)2880 1103 y(+)2897 1149 y(+)2914 1196
y(+)2931 1242 y(+)2948 1289 y(+)2965 1335 y(+)2982 1382
y(+)2999 1428 y(Q)3032 1443 y(Q)3066 1457 y(Q)3099 1471
y(Q)2760 827 y(\036)2759 873 y(\036)2758 920 y(\036)2757
967 y(\036)2756 1013 y(\036)2754 1060 y(\036)2753 1107
y(\036)2752 1153 y(\036)2751 1200 y(\036)2750 1246 y(\036)2749
1293 y(\036)2747 1340 y(\036)2746 1386 y(\036)2745 1433
y(\036)2744 1480 y(\036)2744 1479 y(e)2785 1471 y(e)2827
1462 y(e)2868 1454 y(e)2909 1446 y(e)2950 1438 y(e)2754
826 y(\032)2747 874 y(\032)2739 922 y(\032)2732 970 y(\032)2724
1018 y(\032)2717 1066 y(\032)2709 1114 y(\032)2702 1162
y(\032)2694 1210 y(\032)2687 1258 y(\032)2679 1306 y(\032)2672
1354 y(\032)2664 1402 y(\032)2657 1450 y(\032)2649 1498
y(\032)2642 1546 y(\032)2634 1593 y(\032)-8 b(\000)2659
1567 y(\000)2684 1541 y(\000)2710 1515 y(\000)2762 777
y( )2763 826 y( )2764 875 y( )2765 923 y( )2766 972 y( )2767
1021 y( )2768 1070 y( )2769 1119 y( )2770 1167 y( )2771
1216 y( )2772 1265 y( )2773 1314 y( )2774 1363 y( )2775
1411 y( )2776 1460 y( )2776 1509 y( )2777 1558 y( )2778
1607 y( )2734 1637 y(Q)2701 1622 y(Q)2667 1608 y(Q)2634
1593 y(Q)2762 777 y(*)2777 823 y(*)2792 869 y(*)2807
915 y(*)2822 961 y(*)2837 1007 y(*)2853 1053 y(*)2868
1099 y(*)2883 1145 y(*)2898 1191 y(*)2913 1237 y(*)2928
1283 y(*)2943 1328 y(*)2959 1374 y(*)2974 1420 y(*)2989
1466 y(*)3004 1512 y(*)3019 1558 y(*)2986 1615 y(e)2944
1623 y(e)2903 1632 y(e)2862 1640 y(e)2821 1648 y(e)2779
1656 y(e)3110 1527 y(\000)3085 1553 y(\000)3060 1579
y(\000)3034 1605 y(\000)p Black Black eop
%%Page: 8 8
8 7 bop Black Black 458 658 a Fh(PST)-9 b(ric)m(ks)34
b(\(I\))2314 826 y
 tx@Dict begin tx@NodeDict begin {7.48248 3.71083 41.36009 20.68004
3.30017 } false /N@T-0 16 {InitRnode } NewNode end end
 2314 826 a Fd(R)2397 863 y Fh(AMSU)1504
1393 y
 tx@Dict begin tx@NodeDict begin {7.48248 3.71083 51.92702 25.9635
3.30017 } false /N@T-0-0 16 {InitRnode } NewNode end end
 1504 1393 a Fd(S)1571 1430 y Fh(Ra)m(wData)1763
1360 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0
2.0 0 0 /N@T-0 /N@T-0-0 InitNC { NCLine  } if end gsave 0.8 SLW 0 
setgray 0 setlinecap stroke  grestore  grestore end
 1763 1360 a 2234 1393 a
 tx@Dict begin tx@NodeDict begin {7.48248 3.8325 46.45201 23.226 3.30017
} false /N@T-0-1 16 {InitRnode } NewNode end end
 2234 1393 a Fd(S)2301
1431 y Fh(com)m(bine)2465 1360 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0
2.0 0 0 /N@T-0 /N@T-0-1 InitNC { NCLine  } if end gsave 0.8 SLW 0 
setgray 0 setlinecap stroke  grestore  grestore end
 2465 1360 a 2465 1360
a
 tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ HPutPos } { CP /Y ED /X ED /NAngle 0 def /NCLW 0 def } ifelse /Sin
NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def /l 4.25835 def
/r 4.25835 def /h 3.08733 def /d 4.21268 def /flag false def HPutAdjust
LPutCoor end PutBegin  end
 2465 1360 a 2423 1393 a Fc(\010)2465 1360 y
 tx@Dict begin PutEnd  end
 2465 1360
a 2465 1360 a
 tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ HPutPos } { CP /Y ED /X ED /NAngle 0 def /NCLW 0 def } ifelse /Sin
NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def /l 4.25835 def
/r 4.25835 def /h 3.08733 def /d 4.21268 def /flag true def HPutAdjust
LPutCoor end PutBegin  end
 2465 1360 a 2423 1393 a Fc(\010)2465 1360
y
 tx@Dict begin PutEnd  end
 2465 1360 a 628 1960 a
 tx@Dict begin tx@NodeDict begin {7.48248 3.8325 39.90009 19.95004
3.30017 } false /N@T-0-1-0 16 {InitRnode } NewNode end end
 628 1960 a Fd(R)711 1998 y Fh(Mo)s(des)826
1927 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0
2.0 0 0 /N@T-0-1 /N@T-0-1-0 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 5.0 3.0 0 0 add DashLine  grestore  grestore end
 826 1927 a 1238 1960 a
 tx@Dict begin tx@NodeDict begin {7.48248 3.8325 44.43217 22.21608
3.30017 } false /N@T-0-1-1 16 {InitRnode } NewNode end end
 1238 1960 a Fd(R)1321 1998
y Fh(Normal)1459 1927 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0
2.0 0 0 /N@T-0-1 /N@T-0-1-1 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 5.0 3.0 0 0 add DashLine  grestore  grestore end
 1459 1927 a 1893 1960 a
 tx@Dict begin tx@NodeDict begin {7.48248 3.8325 45.95299 22.97649
3.30017 } false /N@T-0-1-2 16 {InitRnode } NewNode end end
 1893
1960 a Fd(R)1976 1998 y Fh(V)-9 b(ertical)2122 1927 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0
2.0 0 0 /N@T-0-1 /N@T-0-1-2 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 5.0 3.0 0 0 add DashLine  grestore  grestore end

2122 1927 a 2563 1960 a
 tx@Dict begin tx@NodeDict begin {7.48248 3.8325 46.98717 23.49358
3.30017 } false /N@T-0-1-3 16 {InitRnode } NewNode end end
 2563 1960 a Fd(R)2646 1998 y
Fh(Latc)m(hed)2797 1927 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0
2.0 0 0 /N@T-0-1 /N@T-0-1-3 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 5.0 3.0 0 0 add DashLine  grestore  grestore end
 2797 1927 a 3244 1960 a
 tx@Dict begin tx@NodeDict begin {7.48248 5.96167 46.56133 23.28065
3.30017 } false /N@T-0-1-4 16 {InitRnode } NewNode end end
 3244
1960 a Fd(R)3327 1998 y Fh(T)g(ripp)s(ed)3476 1927 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0
2.0 0 0 /N@T-0-1 /N@T-0-1-4 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 5.0 3.0 0 0 add DashLine  grestore  grestore end

3476 1927 a 3921 1960 a
 tx@Dict begin tx@NodeDict begin {7.48248 3.8325 36.82802 18.414 3.30017
} false /N@T-0-1-5 16 {InitRnode } NewNode end end
 3921 1960 a Fd(R)4004 1998 y
Fh(Other)4104 1927 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0
2.0 0 0 /N@T-0-1 /N@T-0-1-5 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 5.0 3.0 0 0 add DashLine  grestore  grestore end
 4104 1927 a 2909 1393 a
 tx@Dict begin tx@NodeDict begin {7.48248 3.71083 74.08562 37.0428
3.30017 } false /N@T-0-2 16 {InitRnode } NewNode end end
 2909 1393
a Fd(S)2976 1430 y Fh(GenerateData)3278 1360 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0
2.0 0 0 /N@T-0 /N@T-0-2 InitNC { NCLine  } if end gsave 0.8 SLW 0 
setgray 0 setlinecap stroke  grestore  grestore end
 3278 1360
a Black Black eop
%%Page: 9 9
9 8 bop Black Black 458 658 a Fh(PST)-9 b(ric)m(ks)34
b(\(I)s(I\))628 793 y(Here,)h(only)f(the)i(PS)g(dra)m(wing)e(is)h
(rotated,)h(not)g(the)g(text)g(:)669 5018 y
 gsave currentpoint currentpoint translate 90 neg rotate neg exch neg
exch translate
 669 5018
a 2429 5051 a
 tx@Dict begin tx@NodeDict begin {7.48248 3.71083 41.36009 20.68004
3.30017 } false /N@T-0 16 {InitRnode } NewNode end end
 2429 5051 a Fd(R)2512 5088 y Fh(AMSU)1618
5618 y
 tx@Dict begin tx@NodeDict begin {7.48248 3.71083 51.92702 25.9635
3.30017 } false /N@T-0-0 16 {InitRnode } NewNode end end
 1618 5618 a Fd(S)1685 5655 y Fh(Ra)m(wData)1877
5585 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0
2.0 0 0 /N@T-0 /N@T-0-0 InitNC { NCLine  } if end gsave 0.8 SLW 0 
setgray 0 setlinecap stroke  grestore  grestore end
 1877 5585 a 2348 5618 a
 tx@Dict begin tx@NodeDict begin {7.48248 3.8325 46.45201 23.226 3.30017
} false /N@T-0-1 16 {InitRnode } NewNode end end
 2348 5618 a Fd(S)2415
5656 y Fh(com)m(bine)2580 5585 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0
2.0 0 0 /N@T-0 /N@T-0-1 InitNC { NCLine  } if end gsave 0.8 SLW 0 
setgray 0 setlinecap stroke  grestore  grestore end
 2580 5585 a 2580 5585
a
 tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ HPutPos } { CP /Y ED /X ED /NAngle 0 def /NCLW 0 def } ifelse /Sin
NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def /l 4.25835 def
/r 4.25835 def /h 3.08733 def /d 4.21268 def /flag false def HPutAdjust
LPutCoor end PutBegin  end
 2580 5585 a 2538 5618 a Fc(\010)2580 5585 y
 tx@Dict begin PutEnd  end
 2580 5585
a 2580 5585 a
 tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ HPutPos } { CP /Y ED /X ED /NAngle 0 def /NCLW 0 def } ifelse /Sin
NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def /l 4.25835 def
/r 4.25835 def /h 3.08733 def /d 4.21268 def /flag true def HPutAdjust
LPutCoor end PutBegin  end
 2580 5585 a 2538 5618 a Fc(\010)2580 5585
y
 tx@Dict begin PutEnd  end
 2580 5585 a 742 6185 a
 tx@Dict begin tx@NodeDict begin {7.48248 3.8325 39.90009 19.95004
3.30017 } false /N@T-0-1-0 16 {InitRnode } NewNode end end
 742 6185 a Fd(R)825 6223 y Fh(Mo)s(des)941
6152 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0
2.0 0 0 /N@T-0-1 /N@T-0-1-0 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 5.0 3.0 0 0 add DashLine  grestore  grestore end
 941 6152 a 1352 6185 a
 tx@Dict begin tx@NodeDict begin {7.48248 3.8325 44.43217 22.21608
3.30017 } false /N@T-0-1-1 16 {InitRnode } NewNode end end
 1352 6185 a Fd(R)1435 6223
y Fh(Normal)1573 6152 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0
2.0 0 0 /N@T-0-1 /N@T-0-1-1 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 5.0 3.0 0 0 add DashLine  grestore  grestore end
 1573 6152 a 2007 6185 a
 tx@Dict begin tx@NodeDict begin {7.48248 3.8325 45.95299 22.97649
3.30017 } false /N@T-0-1-2 16 {InitRnode } NewNode end end
 2007
6185 a Fd(R)2090 6223 y Fh(V)-9 b(ertical)2236 6152 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0
2.0 0 0 /N@T-0-1 /N@T-0-1-2 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 5.0 3.0 0 0 add DashLine  grestore  grestore end

2236 6152 a 2678 6185 a
 tx@Dict begin tx@NodeDict begin {7.48248 3.8325 46.98717 23.49358
3.30017 } false /N@T-0-1-3 16 {InitRnode } NewNode end end
 2678 6185 a Fd(R)2761 6223 y
Fh(Latc)m(hed)2912 6152 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0
2.0 0 0 /N@T-0-1 /N@T-0-1-3 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 5.0 3.0 0 0 add DashLine  grestore  grestore end
 2912 6152 a 3359 6185 a
 tx@Dict begin tx@NodeDict begin {7.48248 5.96167 46.56133 23.28065
3.30017 } false /N@T-0-1-4 16 {InitRnode } NewNode end end
 3359
6185 a Fd(R)3442 6223 y Fh(T)g(ripp)s(ed)3590 6152 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0
2.0 0 0 /N@T-0-1 /N@T-0-1-4 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 5.0 3.0 0 0 add DashLine  grestore  grestore end

3590 6152 a 4035 6185 a
 tx@Dict begin tx@NodeDict begin {7.48248 3.8325 36.82802 18.414 3.30017
} false /N@T-0-1-5 16 {InitRnode } NewNode end end
 4035 6185 a Fd(R)4118 6223 y
Fh(Other)4218 6152 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0
2.0 0 0 /N@T-0-1 /N@T-0-1-5 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 5.0 3.0 0 0 add DashLine  grestore  grestore end
 4218 6152 a 3024 5618 a
 tx@Dict begin tx@NodeDict begin {7.48248 3.71083 74.08562 37.0428
3.30017 } false /N@T-0-2 16 {InitRnode } NewNode end end
 3024 5618
a Fd(S)3091 5655 y Fh(GenerateData)3393 5585 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0
2.0 0 0 /N@T-0 /N@T-0-2 InitNC { NCLine  } if end gsave 0.8 SLW 0 
setgray 0 setlinecap stroke  grestore  grestore end
 3393 5585
a 4863 5018 a
 currentpoint grestore moveto
 4863 5018 a Black Black eop
%%Page: 10 10
10 9 bop Black Black 628 658 a Fh(Something)31 b(that)k(is)f(higly)e
(desirable)e(:)48 b(b)s(eing)33 b(able)f(to)j(jump)f(to)g
Fg(any)45 b Fh(page,)33 b(and)458 793 y(b)s(e)41 b(placed)d(in)j(the)g
(correct)e(color)h(stac)m(k)g(state.)64 b(This)41 b(is)f(p)s(ossible)f
(b)s(ecause)g Fb(Windvi)458 929 y Fh(do)s(es)c(pre-scanning)e(of)j(all)
e(sp)s(ecials.)628 1064 y(What)i(will)e(happ)s(en)g(if)i(w)m(e)p
0 0 1 TeXcolorrgb 35 w(break)f(some)p Black 0 0 1 TeXcolorrgb
eop
%%Page: 11 11
11 10 bop 0 0 1 TeXcolorrgb Black 0 0 1 TeXcolorrgb 628
658 a Fh(page)34 b(across)h(color)f(text)i(?)p Black
48 w(Will)f(w)m(e)g(get)h(the)g(exp)s(ected)d(result)i(?)p
Black Black eop
%%Page: 12 12
12 11 bop gsave 0 0 1 0 TeXcolorcmyk clippath fill grestore
Black Black 628 658 a Fh(T)-9 b(est)36 b(of)g(the)g(bac)m(kground)c
(for)k(the)p 1 0 0 TeXcolorrgb 36 w(windvi)d(program)p
Black(.)p Black Black eop
%%Page: 13 13
13 12 bop gsave 0 0 1 0 TeXcolorcmyk clippath fill grestore
Black Black 628 658 a Fh(Is)36 b(the)g(bac)m(kground)c(restored)j(to)h
(white)f(?)628 793 y(I)g(hop)s(e)f(not)g(!)49 b(Because)33
b(the)h Fa(\\pagecolor{})39 b Fh(command)32 b(is)j(stic)m(ky)e(through)
g(out)458 929 y(the)j(do)s(cumen)m(t.)p Black Black eop
%%Page: 14 14
14 13 bop gsave 1 TeXcolorgray clippath fill grestore
Black Black Black 1685 2195 a @beginspecial 20 @llx 20
@lly 572 @urx 822 @ury 1133 @rwi @setspecial
%%BeginDocument: jpeg2ps -r 0 -h fab.jpg
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: jpeg2ps V1.5 by Thomas Merz
%%Title: fab.jpg
%%CreationDate: Tue Jul 13 10:29:56 1999
%%BoundingBox: 20 20 572 822
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%EndComments
%%BeginProlog
%%EndProlog
%%Page: 1 1
/languagelevel where {pop languagelevel 2 lt}{true} ifelse {
  (JPEG file 'fab.jpg' needs PostScript Level 2!\n) dup print flush
  /Helvetica findfont 20 scalefont setfont 100 100 moveto show showpage stop
} if
save
/RawData currentfile /ASCIIHexDecode filter def
/Data RawData << >> /DCTDecode filter def
20 20 translate
551.37 802.00 scale
/DeviceRGB setcolorspace
{ << /ImageType 1
     /Width 110
     /Height 160
     /ImageMatrix [ 110 0 0 -160 0 160 ]
     /DataSource Data
     /BitsPerComponent 8
     /Decode [0 1 0 1 0 1]
  >> image
  Data closefile
  RawData flushfile
  showpage
  restore
} exec
FFD8FFE000104A46494600010102000000000000FFDB00430003020203020203
03030304030304050805050404050A070706080C0A0C0C0B0A0B0B0D0E12100D
0E110E0B0B1016101113141515150C0F171816141812141514FFDB0043010304
0405040509050509140D0B0D1414141414141414141414141414141414141414
141414141414141414141414141414141414141414141414141414141414FFC0
00110800A0006E03011100021101031101FFC4001E0000010403010101000000
000000000000060507080900030402010AFFC4003E1000010302040404030604
0407010000000102030405110006122107314151081322611471810915324291
A152C1D1F02372B1E1161762748292C2F1FFC4001C0100010501010100000000
000000000000050002030406070108FFC4003311000202010204030704030100
030000000102000311042105123141132251061432617191A181B1C1D142E1F0
230743F1FFDA000C03010002110311003F00B53C28A66145330A2998514E5A85
5615259F3674B621B57B79921C084DFB5CED88DAC55386388A71D3B3750AB0E1
6E056A9F35C06C511E521C23E80E10B10F431BCC222D778C191B2C85FDE99BA8
D0D48BEA6D739BD62DCFD20DFF006C34DD5AF531F83E91BFAB78D6E0BD16688D
2B3BC60BBE9529B8CFAD09F9A8208B7BE22F7A4CE3788AB0FF00131C2C95C5DC
93C466D0BCB19AA935CD69D494429685AC8EFA6F7FDB130B51BA18CE610BB12C
74CC28A66145330A2998514CC28A661453E72C2E91467FC43789ACA7E1F32FAD
EABCAF3EB4FB4A543A5B1EA79D3636247E54DFA9FA5F00F59AFE4CD757C5FB49
AA4E76F9094FFC68F10B9AF8C1587EA95F9F266A56A296D9F89506994DF925B4
9D23F4C0441CC799C64C2FC898C0023631EA7320494C9875275A57E64ADD4DC5
FAEF6187BA87D80C4F574C877C09D4F6755B89B3D3172DE04A9CD2D04691DD4A
17C3069D86E3F79210883689D2F35B8521319A4D858124955CF7BAAF7C48B513
DE2039A29653CDF2038DFC3487A04964EB6DE6565B71A23AA48C4A00A8F9A44F
A64B063024DBF0BBF68F54B285629D96388B3DCAAD0D452C8A9BE4AE44604D82
D440BAD23AF502F83546A171D7681AED3D941DB712CF69157855FA646A8D3653
5360C96C3ACC861614871245C104731826082322440823227663D9ECCC28A661
45330A29985146F78EFC5EA7704786D54CD1501E6A984688D1C1B17DE3F811F5
3CFD81C0CD75DE1A7229C1324AD799809499C57E2D56B89F9BEA7986B75053B5
09720BCEB6847A1B0792137DF4A46C05F60319A4A8A0E5249F9FAFCE14A6BE45
0234D3F30175C52F50BEAB0EA08FAFFA1DB1716A18960B95D844A5C813377468
08F55C1EDF3C4C1793E1EF232D99F66CE6A1D35CD094EB2764A91B0F7279F3C3
ABACB36F3C2D0665D45F52C2838DAD26E411DBF9609254A063121F18AF439843
96ABA5A714DBA34B853E9501CBDC7CF9606EAB4F9195E92DA585BA89B2A551F2
1F6FCF68589D497077C2A6B207967AE108DE4A8F07FE3C2B9E1FEB5129324BD5
BC9D21567A96A70028FF00AD852B642AFBD89D27DB98215B15EB01DF5721E649
6FDC1CE38651E3B6566EBB94AA425C7BE97A3BA343F1D7FC2E20EE0FEC7A1C11
5756E865756076EF0F70F8F998514CC28A7C51D2093C8618EDC83314A97FB453
C4DBB9FB88EBCA94194E269196D6A41750A294B9286CB5743E92348E63D248E7
8C8A33EB58EA3B1E9F4EC7F5EBFAE0F49734A55AB16750DD3E9DBEFD7E8467A4
8192EAD2BCF5053BA977B12372A1EF7C5C14FCA5ECE7A44C9331C5A8A96E16D0
4EFB2411FB62C0AC81D3F7919698C2CC8900A56556D82DC16481DF0D6000DC47
80C7A4E6AB559A60069290BF9EF61DF13D5516DE78DE51BCFB1A4C5A93696951
D8D4146EEA4292E11FADB6F97EB86B87AF70678006EA278A8B51E03C90CB9769
47D2BFE03D4118757CD60F3758E002ED36C8A8B32A384387414D937E63E63AE2
35AD91B224C6B389E5890EB372D865EBF5362156EE2FFD30F001233B4672EDD2
3B7E1BFC47660F0F9C53A466AA617FE110EA1BA9416569299514A87988295733
6B949E840C5F55E5DC1104EA29EEBD65F5F0A38B196F8D192A0E67CAF506E7D3
A4A77D27D6D2FAA169E6950EA0E2C83912BAB7308638F63A6614523BF8E2E3AB
1C16E0A5552C4B2C661AC32B874F4A0D9409165B97E8129277EE47CC01E21A96
522843B9EBF4FF00727A579DF6EDBFF5F9FE651BD46B299121DD4F79AB3CCA8F
337C5340FD610DFB4189B3F41BA480B3EA2398F7B6082298B360EA2277C7BCA5
904950BEE4FF005C592A08DE4EA73D44EF4A9C521494EC9573B733F2C5538CE6
4A40ED131D8322538A70B66C91CBA6DD062D8B154633213513B898DB0EC774E8
46A49DBA8FA7CF08B061BC70AD87413DC8624A8EA536B2950DCA93CFFDF0D564
1B6638D67AE273BB06432805285A85F716C48B6231DCCAEEB628F2CDAC797A82
9D25ABEDE9B9513FBE1AD9C61779E7D62B52DF099016D35A92CFAFD491752473
17B6220590E657B2A2FB032C77ECA6E2E8A0714AB1916438A6A0D763ADF8CD28
DD2892D0D440F9A02CFD3176B627AC16E86B704F7DA5ACE2C492661452B5BED5
FE24E5CA949A064E8CB6E4E62A7A1D9129C4907E150EA404A09BECA3606C4722
0F5C66AD55BF52CCABD3627E63FACFDF32DE98EEC47C87DB3FDFDF23B4AD2814
854E75A8B1CEA79D5696907652FBED8958F26E615AE967DC4EDA970CAA74C064
3F4E3262E8D65D6AE5200E77208D27117BE29D9584B3EE8E7B4451932A939654
8A53F1509504A1AD0A2A26D7DFAE24F7A45DB9B264A9A273DA1C640C80DCDAD4
BA6CB8EA6E645590E0526E6D7EB7ED80DAED6595A864E866834BA245F8C49054
4E0D52DD82754649241B829BEDEF8CF7BE5E5B26113A7ABB2CEFA6F870A53F39
0E2A07E6B84802DF3C5D4D6DBDE4274C9D961E65FF000A140A8A8BB2A96DA90A
55FCB0926C6F898EB148D8EF3C3A42DD14432ABF84BC8D1E005AA9109A710825
448D8EDCC83EF6C0EB388DB59DA2F7318C30917F8CBE1CA0D1E2AEA54F88A4AD
83A92DB6D94A6D7EA317F4BC51DB63DE07D56880DD448E0C476E32DE4A5012EE
A5252DDCEF73FD71A4F119B101B54778F570373AB3C35E35642CCB11D486D8A9
C36DC748B59975C4B4F13F26D6B3F4C18A932013339AB42A0E7B7F1BCBED8EEA
5F61B7506E85A4281EE08C5E8D1B89B31E19ECA46FB42B3546CD1E25B387C2AF
CF662484450BD247ADA4250B17205ECA4A87D3AE32757300CC7604B11F4E638F
B8C421A2E71580E3B9F9EC49C7DC7FB8D57876CAD1F347129A69E3A531DB2A04
8DD4797D37EB8A3C46E15D3E63B19B0D28071B49873B80D1259F898CCC56D481
A96E38C82AF9F504FD3191362FFF005E61D181B72CF54CE01457A6466612DC2E
05F9AF4B5A826C39EEA57337EBB0C56176A036419313CC3188DE53386C9A6F1A
24BEDB8E3EC4F4BAA4EB209290E5B513EE3B6089BEC6AB948DF31FB67223E941
CA2863D200BFBDBF7C56E66EFB4BE880F687943CA6A0BF5B685A750E56562317
F6CC90A22F58794CA33909093A0247B8B624C13B894DEC43B2CF95C8F0E7321A
90D9524286C4F3F6386B862379E548C607664CA50EBB12A4DA186DB6F48B0527
6201E5F2276C5155B11F6322BABDB7953FC76CA2AC81C4BAB420D910FCE2E35A
D3CC13B0C74BD03F8D40F598BD556A8E7783F4696ECFA67C3A5E287005A1B739
942B9A4FED6C1B472BB4CFEA114FD27E827C3867E1C4FE0664ACCE10968D4298
CBAA42557093A6C477E9D70481C881EACF2E0F68E41B91B6C7098123024B2903
C7F70E2ABC38F107989153A844A8FDF2FBB5969C8CD16C36D3EEB852DA9249F5
26C45C1B1E7B5F6CC57CDE6A9CE4A601F99E50723E5BC23A0B56F253BA10A7B6
FCA0EDB9DB7837E0AA90F54B3B556A6956CC2420ED716270178D2E512B1F59B7
D1A0CEF2C1696CE961205CFB81B5BDF19315BAF49A35543D62AB7F0C223AD865
B7AFF8D0850055F3ED8B0871D449455593D60F7DC9424CB5C8F83F877C803520
8DEDCAFB76C26BF1B6D2DA6947F8C50349842436FB528595F892AB9BFF00438A
CEC1BE232D2AB2ED88434C08608BACEDD6FF00B63C54A86E6476824748BCC661
69B6BCAF3879BDD448FDF13175030A60C7D292DCC46D348754E7AFCE0A0773B9
24FF00BE2AB358075CC90A85DB138AB124334F5ADE2942517515293D3DBDF036
CB1B38208905B803695AFE333C8A86606A5148438EA5401EA0037BFED8DCF046
7EBBCC76BBE291C72DBAA60C9B9F50F501D14472B5F6BE3795856333D7E48E92
E57ECA5CD68AE786E7E962421D551EA8F47F293F89B41374DFE763822060404A
7CEC3FEDE4CF3CB1E364038924A94FB589A66A3C5E85323B692FD3698D3329C4
2F50DD4A5252BD86955977B6F7046FD065130D6D8DDC9FC8007F18FF00B30C70
FD338CBA8EA73F803F882DE02728A23E48A9D61CF4FC44C536164724A763CBDC
602F19726D1B769AFD20619CC907987354E82EAD3016A69A50B26E00BFB6320F
7907198692B67EF1A0AB711F315067BAE25D65C2157D1E704127A5C28E1B866F
F284174CE37CCDF45F10AAAC10DD420BF1966DEB3BA4FD7BFCB105953AFA112D
D65EB87C9CF6B9F446A5425A9C415841D42C6F7B6FEF88857839265B1666763F
C42954A871FE2BD017604EADBFFDC4C2DAC6C630B1EB35C4E254553A56FCF69A
6D3B9F308B8EFD6F7C5806AEB9903DB8EB0BF2FF001A32EBAE3319339725CBD9
4EA6C40EE4E1C533F09955AE53B42FADCF8F5DA43BF0EF3525B282A494ABDB60
47F238A1657606CCAAECA46D2B77C6734E53F34D363EA23FC23607A1ED8DE702
04A1E61325C453241064763314DC77472D600494F4371BDFF9E35F4AF9C4CCDC
5954E659CFD8BF3642A3F13A3F94A44553B15CD412749584A873E57B13B60C60
080F989B7F4966E70C7240C8934ADDF160B6B32E62E2854012B65942E1BCDAF4
9D3E5B41049493B8BA4D88DC73B639A53A9B72DCFDD98FDC923F13A470DD31AF
4D587EB8CFE84923F060F7842A4A297C06A5BFA08129E7E57ABB29648BFB58E2
8714BAC3614F4DBED09E96A1927D4C0FE2D3D99B3155FE069854CD354AD2B701
D36F727ADBB0E7DFA628E968ADCE5C665CD43F86BE4EB184E2C655AE65CCDABA
452D87825010E479454EAD52EE3F094EE8363B91A536EF8D4574E9D53CC9F894
F4F6EA0B6F3B852DCA0D504269C42D6A48BA51BA544F4BF2B8C03B139CE4CD31
6C28CC961E13E8EFD72833A3556314A038A5210E732907AE07EA154F944A2F62
A64C42F16C8391ABF4E871D2A024DC5AC4E8B7CB99EA0628D5A4058E4F497B4D
60BA9160EF22956D75694DCF9C92E18B11A53CEEB5A89D23A6C799E561FB634F
A5D2A1C28128EA754951C149E387FC64A732FA132680EFF82DEB5C98AF294529
E6544137F99BE2E6A386B20CA907F4C4A496D77FC3B4959C31E2245AA2E34A84
F075A3E9D27627A58F638CCDD4B0383B48AC460363190F1F340723AE8F9863B2
A5452B0C9591B02524DB1ACE04149284F51333AFCF2E7D243A90E6B6A312B035
120DCFF4FE78DBD3E57200996B89C7496E7F63255694EF09F3AD3E39B5599AA2
1C94837BE8295683DB976FAE2F1F9C0E062C39EF2C48E237E926902FC52E4466
3D6F88CC84A986EA118BED1D44025C6FD4A0799057ABEB7E56C72C7ADEBBAC5C
83863F6CE47E313A9F0722ED1A333648C83F2C741F6C7EF11BC3F505FA3F05F2
94092C161E6E9B1C3CD38085215A06A0477BE20D51F12F76EC498468A48AC087
73F28409519E64C56D697137F50BDCF4C44A817753892F8447511B5CE7935C62
1D8CC790DA469421D7D4A03D929B9B63D0F7B1F8B693A582AED02B2E704E64B9
CDD52A41D8F4FD576DA78695C83DC83D2F891DD40C1EB233635A7692038574C6
A973A7961B096DA8E494E9BE28385691DBD94F73387C4E70BD9CF755954FF3BC
89D1528723CDB6CDBA500EFDC106C47627080A92C233D363FA47709BC3699588
D8E7F790D3FE515632D57DF8353A62234A7D05A57949B21E42858D8725020EE3
DF059359E18C24B9A944B37DA11503C38B298531BA453DF872E6B462A9E79D53
8B0D916D080B4FA47CB131D5DD60FF00D3A4A14A555373622E64CF0E198F8715
2459D6DD8CE0B80D5EE93EE7BE01EAEE361391BCB2FCAFD04F5E3568CB3C0960
BE801C6EA0D0D8126C76FD77C5FE0A596F07EBFB401A9A39C15FA7EF21CE45E1
7A2AD975EABC96BCE82D3BA7F1587A415117FA63A0D7ABB12CD8417A9E1F5A54
4E65DBF838F0ED41F0FBC2B618A536E8A856B44FA838EAAF7708D92916164A41
B0BEFEE70779CB004CC0607316F58FCE1A7A4748E5E2AB2A226BB066BC857C34
F60D35D710827CA55C9428F71B9FD31CE38CD0F5EA0D8831CDFB8DBF6026E380
5EBE1BD27A839FE0FDB68D9B122547A4B5F1AD86A583A1E1620150E76D86DDB1
9E06DCEF36B530C6276D3EA721E425842410764A966F61D312786ED2D72E44ED
3476E1A44B7994C85821492EF2E7EFCF0E657419918AD58E3304733D69EFBCD9
65C905E92537090B240FA62B273336F1E5028D843EE113294C89321F0032FA9A
65C56E0849705EE7A1B609AD6A7AC09AE0DD57A8048FAE0CD5C4E2ED2F3154DF
96A716842CEB71DFC41006CA27FCB6C0CB557C43B773FEE12E1C12CD2D6500C6
3B7E7F3125FA2C1CED4861AA834898DD82A3BE002B6FB6E37C59AF024EF5F2EE
268A250A4D05419549742790246BC3EC398953B88BEE53D2B66EA5DD5A6E6C9B
0E5D303ACCE30278DF4916FC79D51707877061A5175BF27D294EE6E126DF5BF2
C17E18ADCE39BA41FCAE72D89BBC377876FF008B328E4ECAAB48BCB71B935150
4923CA1EA7813D0A901491D2EA18D8E9C35D6EC36999E2979A74DC87A9969916
3A22466586C59B6901091EC0586350369829B71EC50278BF4A9353C9528C3A62
AAD2E3AD0FB715B235A8050D5A6FCCE82AB0E6790C67B8BE9EDBAB06A5C907F5
85F85EA469B52ACC70A720FF00DF5C48A8FBB3971419B47AAD1DE5282846A942
7A3900A7F2EB48D407B723B639DDBE354DCAEB8FACE8D46A92EDEB6047CA6315
14C55A494AB972388CDD91D44375389CB9A33BF914DBA52A1CC253DF151ED6EE
65B5E5198D8D473B0C9AAFBF6A301F94E3CA480508042124DF493D3F9E189A97
070822F01DB71D212646F113166D39D619516A9AF3F7512749D605BD7B731873
EBAD4F2B2C8FDCEA2FE2B2F986D3BF39F89BA03957522A84BAB7C240414F985C
1B245C0E8761F2C346A6CB58B049E53A64D2D62BAF61107867C4A6B2EE679B42
6D6E08497966189608506AF709DFADB1712FC8E9892BA0B07298F8BB5C8B528C
8371BA4ABCC045EF8792CC36958506A39CC48935A5216101414DA8902E2C476D
FBE3C1593BB0956EB17A0817C4CCBB1B37A922A496C52E224B921D080E3C2DBA
5286FF0011528D86C3AE0C695133B488B9AEB9203C2864E112872F332E22E289
A911A121D165A5849B926DB10A212411DB1BED0D7C89CDEB396F14D478F7903A
08FF00609C0D330A2998F08C88A321E275853745A34C48052DC85B4A04FF0012
09FF00E71CF7DA055565661D8FEFFEE693835DC96327AEFF006FFF0064649756
2D020A8A557EA39FE98E7AC55BE113A650C4888ADBE9A94E2ECA36851D572951
B6B5F6B0C3AB0BDCC95ECC453CCF54CBB3E88FD3E4B299315F416DC65439FBEF
D47318215647C06475EAEC5385123BE63A240CB6EB0DC02B0C3EE84A50EA8A94
07BDFDB12780EED96844EAB95725613F0DF22437330C5ADD5545C7187038D36B
04E950DC5C5B723171AB289E5C41CDAB67309B8B9424333919869EA52BC9B07D
206E072D7F2EF80AED6038388412C0EB91D610E51CE8A910E3D9EF41481CB61F
DF7C5AA9C8ED2A5B6377868C55D329B69095EAB2C6E4DEFBE082AD967419812C
BD01F39C42FE18526167BCF8FD1BEE49AECB8A4B1519AF30F34D36C7323CC290
2EB02C92937DEE0DB7C69387686C6B073260403C4F88D62B2B53F98C983060C7
A643662446511E3329086DA6D3A52948E400C6F800A30260BACDF8F62998514C
C28A339E242B743195514A95538CCD616F21E8D0D4B05C5EF626DD058AB73DAD
8C4F1F6ADEBC67CC0F4857863F2DFB7D0FCBBFF521DD414805494B89171E9B93
BEDCB1C9ACF8BACEB1A41CC008D7664CE52E951511DA84E4B70004A11B1528FB
1B0E7EF825A7553DBEF0C2E99586E60B9E2B7DDC84A66D0EAD0C837066475A11
FF00B8047B5F055B4F628E64C1FA1FE3ACB55F0F0DD0CD29E21D1AA85B972E34
6986300E36B6E614F23F9B617FEF6C23EF2A318939E16CE3E2188A31F8D997E1
AC7C5796C5F70634A4BB64FB8D8FD31EA2DE7AA13FA41B6F09753B18A54EE36E
5F9B350CC796CCD6D63438C6A16520EC410714F53A7B00CB2103E929A69DEB3B
4F7902721A8EFB6DAEEC30FADA656A3B100EDFB61D55796073D650D4B3264623
DDC3B80ACE7986994A8E1C2E4D7131D7A372942B65A87F953A95F4C6E787E97A
60CC0713D530040961B163A62C669940012DA424585B90C6DC0C0C4CACDB8F62
998514CC28A321E2578DEAE1A505C814C72D5779A2B53836F25163B83D147A76
DCE3CF99E8266389F123559EED4F5EE7D3E529FF003C71AEB19973FD3EA0AA8C
8329539A750B538490BD62C493BABDEFCF01388AD2F4B2A81D216E0F4B7307F4
929EB95154592E1372527723FD0E38F5CB52B6C2771D2B3728107A97995B6A7B
9252DDD69512091ABF6C4014E321B10CA06CE73333366113A32C10852D69B042
CEC7DFE78B755D62EC0E66934FA8641868CAD7A0D1EA32097698B4B84D8A9B4A
493BF53B6F82F5EA9947497FC7A5BAF5841932914A6DC6DB894E43481B294EA1
09D56EE06EA3F5B7B621D46A1D8679A09D45C46D59C438CC141CBB2E9A975A8A
84CB4A6DA9B1A4AADD6C0017C04F11DCE0181DF50F8F319A32FA98A741692848
D0BF5587217E98B95A953924401AAB0B7787B9138D47877C49A3C7A52D891588
C8F8879A72D60858B68573B15249DC72C74EE035597D1E2AF69C978EEA9749AA
15B1EBBCB29C959BA0E79CB50AB34F512C49405142ADA90AEA93EE31A9C11D65
5AAC16A8611730A4B330A28D0F88BF12D963C3A65D8922AAEA26E60AA3A23522
84DB9A5E9CE920763A509B82A59161B0DC900D7370368D3A6EE7F03D4FF1EBDB
A18335BAE4D1D6CC772A093F21EA7EB8DBD77F43887DC78CCEFE6F9754A94940
42DE2A510D5F484DAC00279ED8B96546B4E53BCE5FA2D5FBC5E6DB4EE4E4FEA7
F6F4903B81DC3393C44E33ADE94EAD14BA44CF885A00FC5A17E949F9DB188E31
AFAF4741000CB6D3BE70DD32BA0F492E7880DBAC3AA79A04809B2D2ABDEDDFB1
231CC17161E6137F43F26C202D39687DE5B8975684723622E13EF8215E992CF8
8C2A2F603CB0EB29E59A6D71B5AA6484B09BDC249DFF006C111A2A9464349EBD
5DB99E6770528931CD4E549053CF4B6D90B3F4BF3F7C78C2B51B1968EAACC6C2
7DA9709A35020B0FD366A9D42C5D6852C2B4DBA9EA3029D518EE6526D531D888
273E9C2325DD6522FB585B63DBFBE78A86B00F96536B7313A8A83509AD44657B
9FC5A7F2FF002BE2C8F2FC4B04DD66FD221D6A8EED03C4E54901252CC9871A43
5B6DA0A397BDBB63B1FB20EAFA5283D4ED3877B7AED55D55C076C493B3F8DD9D
3823C21A8666C9F22248934875A97269539BD71E6B05410E25447A9040515852
083748BDC5C1D26A74CC879D41C407C178AF8C7C323071FB49A7C06E345138FD
C2EA1E74A12B4C6A8B095B9156A49723396F536BB120281F7C519B9ADF9C7CC7
58E0E14967E7C73A71B33171CB8FF4ECED99E62DF972AA6C1698BDDB84C072E8
61B03609483F53727724E2BF0BA8A5E18F73927D4FFDB0F4181D04C8719E43A4
BF97BAB1FC7FC3F1D24D4ADAD354A7C846CA42D277E9CB1AAD4A649C62723D2B
721EB19AE00446F2B711737D3D612DBAF4812500ED7428DFB7BE3847B415B171
CF8DB227D51C02FAEDD356C8720811DDCDACA1C86545295255BAB50BFD7193AE
B1EB89B9423D234158892A8AB79E8A0A926FA90A36DFA1BF7F9E2F8A7986C65C
4700F9A0E43E299A6C9F2D7A90B0ADC1569BFF00BE265D358067AC22BE138D8C
5C1C60F88AB34EB4EAD2CB6852B4AC93BF4C31A961B912421718067D99C6F60B
850DAD6E057A752B64DBDEFF00CF1E9D3D846CA204BFCA6275633CBF9974478A
54D8DB53F6B13F2B8FDF110A96AF3309403130EB8774944271A77469EBB8E679
FEB885EC0FFE52375189D59E19454F8BF4C75290A5C2A7069C20FE1D6A4A937F
FC41C74EF62AB726C65E938A7FF235AA95D15FD61D66ED0384B9DE3A93A12E50
27A6E3FED9C37001FAE3A0711D45B4A61672DE09614D42B01DE47FF079E20736
70068D1DCA14D43F0644B2B7A933567E164A4EC791BA55BDC2C5EC45C850BA4E
33DFDBC5E533ABD1A8CB119C1FFBB4B5BE04F8A2C95C79A6BC29933EEACC10D3
79F40A990D4C8DB8055A49F5A2E400B4DC6E3BE0CA58AE33986058BFE471280E
BCC3B96731A94D80865B5F9ACA827D2537D88F962B686F60C0C07704D4272E3A
CB06815544B6906E34389D40DF6B11718E8A6B475DC4E05CDCAD9CC6BF88B1E5
659CC94FCD700287C2BA3E2D201FF123957A8D876DCE39E7B4FC2EBD4506C55D
C7FC3FA9D73D8CE2FEEF7FBAB3EC7A0F9C78E0CE66B9486DD43895871215CC7C
F7C70B7ACD27A19F46D167300440CCC908B3E62CD8DC5AC137E5DC61D5DE4741
0AA8C88CF66CCBCC4C25E6015A169045D3622FD4E0BD3A87CEF2BB2E3A407934
15B6484B6084FD36FEBED82A9616199E02DD2755172AA44942DF45BB5EE4620B
F5440C088D7CDB931D9C9D95590B6D4A45AFC8DB97E980565EBFE4233E1DA39A
2445CB90172A53A98F198495ADC51D92902E4E06874B1B0AB926517393D60DE4
2724661AB4DAF4D6D4C39397A9283F89B6F92104F5B0C7D1FECB70FF0071D185
2373BCF95BDB3E2ABC4B88B7867CABB0FD219E7F9CA8FC39CDC412B52A8B35A4
A7F896B616902DEE48C5BE2EF85C1827831417A64E3790E23D5E1E5F89063BB2
9A416128053A8158B6C7F4E7B8E9D71CAAC17BDA59019B6E5B18F38114337D21
ACF34EA6D4E9D1A2D51FD3E53FADD68682397E3E44E0EE92E7230FB433A7D532
272B406ABBF4FCCF4E0DB729BF896C5DAF30D94A3EF738ABA7F79A5F27388D52
E8771247F08736B99838794395E6954965811DE3D7CC47A547F51D31D8342FE2
52AD390F1BA069B596578C0CE47D0EE3F10E644A62A71B4BB62402ABDF7387EA
2836A907A182F4BAB34B02A7047489144AD3B925498EEA4AA956D40A012181D8
9FE1F7E98E1BED0F05BF44FCE83287BFF73E96F65BDABA75E829B4E2C1DBD7E6
2144E7A3D56379ECB89750B1BA93DBE98E7E0286F34EB94DE1C6C636D5A6C449
2AB6C93DB716C5D5B6B4F865DE5E683F2E2C65DB4A5173755D36EBCF1612CF13
E53D35903A4E8A6410F484EA404807F29BFF00670C7AD7D65460C3B472A94FC4
A6C30E3CE25A693EA255B7EBEF818F59276942CB31B188D32439C457D96DA494
5199703817727CF503B72E6906C7B1F718E89ECBFB3ED7DC3537A61474F9CE4D
ED97B4EBA0A1B47A56FF00D1B627D07F70F6146669711A4B5A6E816B5AD6FEA3
1DDD2B08981B4F9A59DAD6C9DCC41E30C1A9D77873368B42694F4EA938D32087
3421B6C2D2A595A8FE14E94917EE40DF9631FC5ED5D3D66DB37026DB82154B40
71BFDE31507C3047662A5EADD5E417F7BB34B612117EC5C77DFA84E39A59C7AB
248A17EE2746AC330DBF31C6E1F7870A74965C146ACD4A9927482EB7396DB882
3ADB484906F6EF88E9E26D6672B2ADA9CA7CC7ED3FFFD9>
%%EOF

%%EndDocument
 @endspecial Black 1728 2430 a Fh(Figure)34 b(2:)48 b(The)36
b(author.)p Black Black 458 2760 a(This)f(is)h(an)g(inclusion)c(of)k(a)
g Fa(.jpg)h Fh(image)d(thanks)i(to)g Fa(jpeg2ps.exe)p
Fh(.)458 2896 y(Oh)g(!)49 b(By)36 b(the)g(w)m(a)m(y)f(:)49
b(that's)37 b(me.)48 b(This)35 b(w)m(as)h(the)g(easiest)e(jp)s(eg)i
(picture)e(to)i(\014nd.)p Black Black eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
