%
% Copyright (c) 2002-2003 the Omega Task Force
%
% Change file to assist in creating the web2c-specific change file.
% This one resolves inconsistencies between the etex changes for
% web2c and Omega changes for web2c.
% Public domain.
%

@x [4.51] - Change `eomega.pool' to `pdftex.pool' in error messages
else  bad_pool('! I can''t read omega.pool; bad path?')
@y
else  bad_pool('! I can''t read eomega.pool; bad path?')
@z

@x [4.51] - Change `eomega.pool' to `omega.pool' in error messages
begin if eof(pool_file) then bad_pool('! omega.pool has no check sum.');
@y
begin if eof(pool_file) then bad_pool('! eomega.pool has no check sum.');
@z

@x [4.51] - Change `eomega.pool' to `omega.pool' in error messages
    bad_pool('! omega.pool line doesn''t begin with two digits.');
@y
    bad_pool('! eomega.pool line doesn''t begin with two digits.');
@z

@x [4.51] - Change `eomega.pool' to `omega.pool' in error messages
  bad_pool('! omega.pool check sum doesn''t have nine digits.');
@y
  bad_pool('! eomega.pool check sum doesn''t have nine digits.');
@z

@x [4.51] - Change `eomega.pool' to `omega.pool' in error messages
  bad_pool('! omega.pool doesn''t match; otangle me again (or fix the path).');
@y
  bad_pool('! eomega.pool doesn''t match; otangle me again (or fix the path).');
@z

%----------------------------------------
@x
print_err("Omega capacity exceeded, sorry [");
@y
print_err("e-Omega capacity exceeded, sorry [");
@z
%----------------------------------------

@x
@=#include "omegamem.h";@>
@y
@=#include "eomegamem.h";@>
@z

@x
  print("Omega output, Version 3.141592--1.15, ");
@y
  print("e-Omega output, Version 3.141592--1.15--2.1--RC1, ");
@z

@x
if ini_version then format_ident:=" (INIOMEGA)";
@y
if ini_version then format_ident:=" (INIEOMEGA)";
@z

@x
  xmalloc_array (line_stack, max_in_open);
  xmalloc_array (eof_seen, max_in_open);
  xmalloc_array (grp_stack, max_in_open);
  xmalloc_array (if_stack, max_in_open);
@y
  line_stack:=xmalloc_array (integer, max_in_open);
  eof_seen:=xmalloc_array (boolean, max_in_open);
  grp_stack:=xmalloc_array (save_pointer, max_in_open);
  if_stack:=xmalloc_array (pointer, max_in_open);
@z

@x
@!init if (buffer[loc]="*")and(format_ident=" (INITEX)") then
@y
@!init if (buffer[loc]="*")and(format_ident=" (INIEOMEGA)") then
@z

