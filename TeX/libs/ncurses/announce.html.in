<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 3.0//EN">
<!--
  $Id: announce.html.in,v 1.44 2002/10/12 23:35:32 tom Exp $
-->
<HTML>
<HEAD>
<TITLE>Announcing ncurses @VERSION@ Pre-Release</TITLE>
<link rev=made href="mailto:bug-ncurses@gnu.org">
</HEAD>
<BODY>

<H1>Announcing ncurses @VERSION@</H1>

The ncurses (new curses) library is a free software emulation of
curses in System V Release 4.0, and more.  It uses terminfo format,
supports pads and color
and multiple highlights and forms characters and function-key mapping,
and has all the other SYSV-curses enhancements over BSD curses.<P>

In mid-June 1995, the maintainer of 4.4BSD curses declared that he
considered 4.4BSD curses obsolete, and is encouraging the keepers of
Unix releases such as BSD/OS, freeBSD and netBSD to switch over to
ncurses.<P>

The ncurses code was developed under GNU/Linux.
It has been in use for some time with OpenBSD as the system curses library,
and on FreeBSD and NetBSD as an external package.
It should port easily to any ANSI/POSIX-conforming UNIX.
It has even been ported to OS/2 Warp!<P>

The distribution includes the library and support utilities, including a
terminfo compiler tic(1), a decompiler infocmp(1), clear(1), tput(1), tset(1),
and a termcap conversion tool captoinfo(1).  Full manual pages are provided for
the library and tools.<P>

The ncurses distribution is available via anonymous FTP at
the GNU distribution site
<A HREF="ftp://ftp.gnu.org/pub/gnu/ncurses">ftp://ftp.gnu.org/pub/gnu/ncurses</A>.
<br>It is also available at
<A HREF="ftp://invisible-island.net/ncurses">ftp://invisible-island.net/ncurses</A>.

<H1>Release Notes</H1>

This release is designed to be upward compatible from ncurses 5.0 and 5.2;
very few applications will require recompilation, depending on the platform.
These are the highlights from the change-log since ncurses 5.2 release.
<p>
Interface changes:
<ul>
	<li>change type for bool used in headers to <code>NCURSES_BOOL</code>,
	  which usually is the same as the compiler's definition for
	  <code>bool</code>.

	<li>add all but two functions for X/Open curses wide-character support. 
	  These are only available if the library is configured using the
	  <kbd>--enable-widec</kbd> option.  Missing functions are
	  	<ul>
		<li>pecho_wchar()
		<li>slk_wset()
	  	</ul>

	<li>add environment variable <code>$NCURSES_ASSUMED_COLORS</code> to
	  modify the <code>assume_default_colors()</code> extension.

</ul>
New features and improvements:
<ul>
	<li>Improved support for termcap applications:
	<ul>
	<li>add logic to dump_entry.c to remove function-key definitions that do
	  not fit into the 1023-byte limit for generated termcaps.  This makes
	  hds200 fit.

	<li>modify tgetent() to check if exit_attribute_mode resets the alternate
	  character set, and if so, attempt to adjust the copy of the termcap
	  "me" string which it will return to eliminate that part.  In
	  particular, 'screen' would lose track of line-drawing characters.

	<li>add check/fix to comp_parse.c to suppress warning about missing acsc
	  string.  This happens in configurations where raw termcap information
	  is processed; tic already does this and other checks.

	<li>add tic -A option to suppress capabilities which are commented out
	  when translating to termcap.

	<li>modify logic in lib_baudrate.c for ospeed, for FreeBSD to make it
	  work properly for termcap applications (patch by Andrey A Chernov).

	</ul>

	<li>add a call to _nc_keypad() in keypad() to accommodate applications
	  such as nvi, which use curses for output but not for input (fixes
	  Debian #131263, cf: 20011215).

	<li>correct logic for COLORFGBG environment variable: if rxvt is compiled
	  with xpm support, the variable has three fields, making it slightly
	  incompatible with itself.  In either case, the background color is
	  the last field.
</ul>
Major bug fixes:
<ul>
	<li>rewrote limit-checks in wscrl() and associated _nc_scroll_window(),
	  to ensure that if the parameter of wscrl() is larger than the size of
	  the scrolling region, then the scrolling region will be cleared.

	<li>modify tset to restore original I/O modes if an error is encountered.
	  Also modify to use buffered stderr consistently rather than mixing
	  with write().

	<li>move calls to def_shell_mode() and def_prog_mode() before loop with
	  callbacks in lib_set_term.c, since the c++ demo otherwise initialized
	  the tty modes before saving them.

	<li>modified wresize() to ensure that a failed realloc will not corrupt
	  the window structure, and to make subwindows fit within the resized
	  window.

	<li>altered resizeterm() to avoid having it fail when a child window
	  cannot be resized because it would be larger than its parent.

	<li>correct/improve logic to produce an exit status for errors in tput,
	  which did not exit with an error when told to put a string not in the
	  current terminfo entry.

	<li>modify behavior of can_clear_with() so that if an application is
	  running in a non-bce terminals with default colors enabled, it
	  returns true, allowing the user to select/paste text without picking
	  up extraneous trailing blanks.

	<li>add a check in relative_move() to guard against buffer overflow in
	  the overwrite logic.

	<li>add some limit/pointer checks to -S option of tputs.

	<li>modify mvcur() to avoid emitting newline characters when nonl() mode
	  is set.  Normally this is not a problem since the actual terminal
	  mode is set to suppress nl/crlf translations, however it is useful to
	  allow the caller to manipulate the terminal mode to avoid staircasing
	  effects after spawning a process which writes messages (for lynx
	  2.8.4).
</ul>

Portability:
<ul>
	<li>configure script:
	<ul>
	  <li>modify check in --disable-overwrite option so that it is used by
	    default unless the --prefix/$prefix value is not /usr, in attempt to
	    work around packagers who do not read the INSTALL notes.

	  <li>correct a typo in configure --enable-colorfgbg option, and move it
	    to the experimental section (cf: 20011208).

	  <li>modify configure script to allow building with termcap only, or with
	    fallbacks only.  In this case, we do not build tic and toe.

	  <li>modify run_tic.sh to check if the build is a cross-compile.  In that
	    case, do not use the build's tic to install the terminfo database.

	  <li>modify c++/Makefile.in to accommodate archive programs that are
	    different for C++ than for C, and add cases for vendor's C++
	    compilers on Solaris and IRIX.

	  <li>add several configure script options to aid with cross-compiling:
	    --with-build-cc, --with-build-cflags, --with-build-ldflags, and
	    --with-build-libs.

	  <li>add experimental --with-caps=XXX option to customize to similar
	    terminfo database formats such as AIX 4.x

	  <li>add configure option --with-ospeed to assist packagers in transition
	    to 5.3 change to ospeed type.
	  </ul>

	<li>library:
	<ul>
	  <li>implement a simple vsscanf() fallback function which uses the %n
	    conversion to help parse the input data.

	  <li>various fixes to build/work with different implementations of
	    vsscanf().

	  <li>add/use macro to suppress sign-extension of char type on
	    platforms where this is a problem in ctype macros, e.g., Solaris.

	  <li>finish changes needed to build dll's on cygwin.

	  <li>add #undef's before possible redefinition of ERR and OK in curses.h
	</ul>

	<li>programs:
	<ul>
	  <li>modify ifdef's in write_entry.c to allow use of symbolic links on
	    platforms with no hard links, e.g., BeOS.

	  <li>modify _nc_write_entry() to allow for the possibility that linking
	    aliases on a filesystem that ignores case would not succeed because
	    the source and destination differ only by case, e.g., NCR260VT300WPP0
	    on cygwin.

	  <li>modify logic in tic, toe, tput and tset which checks for basename of
	    argv[0] to work properly on systems such as OS/2 which have
	    case-independent filenames and/or program suffixes, e.g., ".ext".
	</ul>
</ul>

<H1>Features of Ncurses</H1>

The ncurses package is fully compatible with SVr4 (System V Release 4) curses:

<UL>
<LI>All 257 of the SVr4 calls have been implemented (and are documented).
<LI>Full support for SVr4 curses features including keyboard mapping, color,
forms-drawing with ACS characters, and automatic recognition of keypad
and function keys.
<LI>An emulation of the SVr4 panels library, supporting
a stack of windows with backing store, is included.
<LI>An emulation of the SVr4 menus library, supporting
a uniform but flexible interface for menu programming, is included.
<LI>An emulation of the SVr4 form library, supporting
data collection through on-screen forms, is included.
<LI>Binary terminfo entries generated by the ncurses tic(1) implementation
are bit-for-bit-compatible with the entry format SVr4 curses uses.
<LI>The utilities have options to allow you to filter terminfo
entries for use with less capable <STRONG>curses</STRONG>/<STRONG>terminfo</STRONG>
versions such as the HP/UX and AIX ports.</UL>

The ncurses package also has many useful extensions over SVr4:

<UL>
<LI>The API is 8-bit clean and base-level conformant with the X/OPEN curses
specification, XSI curses (that is, it implements all BASE level features,
but not all EXTENDED features).  Most EXTENDED-level features not directly
concerned with wide-character support are implemented, including many
function calls not supported under SVr4 curses (but portability of all
calls is documented so you can use the SVr4 subset only).
<LI>Unlike SVr3 curses, ncurses can write to the rightmost-bottommost corner
of the screen if your terminal has an insert-character capability.
<LI>Ada95 and C++ bindings.
<LI>Support for mouse event reporting with X Window xterm and OS/2 console windows.
<LI>Extended mouse support via Alessandro Rubini's gpm package.
<LI>The function <CODE>wresize()</CODE> allows you to resize windows, preserving
their data.
<LI>The function <CODE>use_default_colors()</CODE> allows you to
use the terminal's default colors for the default color pair,
achieving the effect of transparent colors.
<LI>The functions <CODE>keyok()</CODE>
and <CODE>define_key()</CODE> allow
you to better control the use of function keys,
e.g., disabling the ncurses KEY_MOUSE,
or by defining more than one control sequence to map to a given key code.
<LI>Support for 16-color terminals, such as aixterm and XFree86 xterm.
<LI>Better cursor-movement optimization.  The package now features a
cursor-local-movement computation more efficient than either BSD's
or System V's.
<LI>Super hardware scrolling support.  The screen-update code incorporates
a novel, simple, and cheap algorithm that enables it to make optimal
use of hardware scrolling, line-insertion, and line-deletion
for screen-line movements.  This algorithm is more powerful than
the 4.4BSD curses quickch() routine.
<LI>Real support for terminals with the magic-cookie glitch.  The
screen-update code will refrain from drawing a highlight if the magic-
cookie unattributed spaces required just before the beginning and
after the end would step on a non-space character.  It will
automatically shift highlight boundaries when doing so would make it
possible to draw the highlight without changing the visual appearance
of the screen.
<LI>It is possible to generate the library with a list of pre-loaded
fallback entries linked to it so that it can serve those terminal types even
when no terminfo tree or termcap file is accessible (this may be useful
for support of screen-oriented programs that must run in single-user mode).
<LI>The tic(1)/captoinfo utility provided with ncurses has the
ability to translate many termcaps from the XENIX, IBM and
AT&amp;T extension sets.
<LI>A BSD-like tset(1) utility is provided.
<LI>The ncurses library and utilities will automatically read terminfo
entries from $HOME/.terminfo if it exists, and compile to that directory
if it exists and the user has no write access to the system directory.
This feature makes it easier for users to have personal terminfo entries
without giving up access to the system terminfo directory.
<LI>You may specify a path of directories to search for compiled
descriptions with the environment variable TERMINFO_DIRS (this
generalizes the feature provided by TERMINFO under stock System V.)
<LI>In terminfo source files, use capabilities may refer not just to
other entries in the same source file (as in System V) but also to
compiled entries in either the system terminfo directory or the user's
$HOME/.terminfo directory.
<LI>A script (<STRONG>capconvert</STRONG>) is provided to help BSD users
transition from termcap to terminfo.  It gathers the information in a
TERMCAP environment variable and/or a ~/.termcap local entries file
and converts it to an equivalent local terminfo tree under $HOME/.terminfo.
<LI>Automatic fallback to the /etc/termcap file can be compiled in
when it is not possible to build a terminfo tree.  This feature is neither
fast nor cheap, you don't want to use it unless you have to,
but it's there.
<LI>The table-of-entries utility <STRONG>toe</STRONG> makes it easy for users to
see exactly what terminal types are available on the system.
<LI>The library meets the XSI requirement that every macro entry
point have a corresponding function which may be linked (and will be
prototype-checked) if the macro definition is disabled with
<CODE>#undef</CODE>.
<LI>An HTML "Introduction to Programming with NCURSES" document provides
a narrative introduction to the curses programming interface.
</UL>

<H1>State of the Package</H1>

Numerous bugs present in earlier versions have been fixed; the
library is far more reliable than it used to be.  Bounds checking in many
`dangerous' entry points has been improved.  The code is now type-safe
according to gcc -Wall.  The library has been checked for malloc leaks and
arena corruption by the Purify memory-allocation tester.<P>

The ncurses code has been tested with a wide variety of applications
including (versions starting with those noted):
<DL>
<DT> cdk
<DD> Curses Development Kit
<br>
<A HREF="http://invisible-island.net/cdk/cdk.html">http://invisible-island.net/cdk</A>.
<br>
<A HREF="http://www.vexus.ca/CDK.html">http://www.vexus.ca/CDK.html</a>
<DT> ded
<DD> directory-editor
<br>
<A HREF="http://invisible-island.net/ded/ded.html">http://invisible-island.net/ded</A>.
<DT> dialog
<DD> the underlying application used in Slackware's setup, and the basis
for similar applications on GNU/Linux.
<br>
<A HREF="http://invisible-island.net/dialog/dialog.html">http://invisible-island.net/dialog</A>.
<DT> lynx
<DD> the character-screen WWW browser
<br>
<A HREF="http://lynx.isc.org/release/">http://lynx.isc.org/release</A>.
<DT> Midnight Commander
<DD> file manager
<br>
<A HREF="www.gnome.org/mc/">www.gnome.org/mc/</A>.
<DT> mutt
<DD> mail utility
<br>
<A HREF="http://www.mutt.org">http://www.mutt.org</A>.
<DT> ncftp
<DD> file-transfer utility
<br>
<A HREF="http://www.ncftp.com">http://www.ncftp.com</A>.
<DT> nvi
<DD> New vi versions 1.50 are able to use ncurses versions 1.9.7 and later.
<br>
<A HREF="http://www.bostic.com/vi/">http://www.bostic.com/vi/</A>.
<DT> tin
<DD> newsreader, supporting color, MIME
<br>
<A HREF="http://www.tin.org">http://www.tin.org</A>.
<DT> taper
<DD> tape archive utility
<br>
<A HREF="http://members.iinet.net.au/~yusuf/taper/">http://members.iinet.net.au/~yusuf/taper/</A>.
<DT> vh-1.6
<DD> Volks-Hypertext browser for the Jargon File
<br>
<A HREF="http://www.bg.debian.org/Packages/unstable/text/vh.html">http://www.bg.debian.org/Packages/unstable/text/vh.html</A>.
</DL>
as well as some that use ncurses for the terminfo support alone:
<DL>
<DT> minicom
<DD> terminal emulator
<br>
<A HREF="http://www.pp.clinet.fi/~walker/minicom.html">http://www.pp.clinet.fi/~walker/minicom.html</A>.
<DT> vile
<DD> vi-like-emacs
<br>
<A HREF="http://invisible-island.net/vile/vile.html">http://invisible-island.net/vile</A>.
</DL>
<P>

The ncurses distribution includes a selection of test programs (including
a few games).

<H2>Who's Who and What's What</H2>

The original developers of ncurses are <A
HREF="mailto:zmbenhal@netcom.com">Zeyd Ben-Halim</A> and
<A HREF="http://www.ccil.org/~esr/home.html">Eric S. Raymond</A>.
Ongoing work is being done by
<A HREF="mailto:dickey@herndon4.his.com">Thomas Dickey</A>
and
<A HREF="http://www.familiepfeifer.de/Contact.aspx?Lang=en">J&uuml;rgen Pfeifer</A>.
<A HREF="mailto:dickey@herndon4.his.com">Thomas Dickey</A>
acts as the maintainer for the Free Software Foundation, which holds the
copyright on ncurses.
Contact the current maintainers at
<A HREF="mailto:bug-ncurses@gnu.org">bug-ncurses@gnu.org</A>.
<P>

To join the ncurses mailing list, please write email to
<CODE>bug-ncurses-request@gnu.org</CODE> containing the line:
<PRE>
             subscribe &lt;name&gt;@&lt;host.domain&gt;
</PRE>

This list is open to anyone interested in helping with the development and
testing of this package.<P>

Beta versions of ncurses and patches to the current release are made available at
<A HREF="ftp://invisible-island.net/ncurses">ftp://invisible-island.net/ncurses</A>.

<H2>Future Plans</H2>
<UL>
<LI>Extended-level XPG4 conformance, with internationalization support.
<LI>Ports to more systems, including DOS and Windows.
</UL>
We need people to help with these projects.  If you are interested in working
on them, please join the ncurses list.

<H2>Other Related Resources</H2>

The distribution includes and uses a version of the terminfo-format
terminal description file maintained by Eric Raymond.
<A HREF="http://earthspace.net/~esr/terminfo">http://earthspace.net/~esr/terminfo</A>.<P>

You can find lots of information on terminal-related topics
not covered in the terminfo file at
<A HREF="http://www.cs.utk.edu/~shuford/terminal_index.html">Richard Shuford's
archive</A>.
</BODY>
</HTML>
<!--
# The following sets edit modes for GNU EMACS
# Local Variables:
# mode:html
# case-fold-search:nil
# fill-column:70
# End:
-->
