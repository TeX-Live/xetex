dnl Process this file with autoconf to produce a configure script.
AC_INIT(src/dvipdfmx.c)
AM_INIT_AUTOMAKE(xdvipdfmx, 0.6)
AM_CONFIG_HEADER(config.h)
AM_MAINTAINER_MODE

dnl Checks for programs.
AC_PROG_CC
AM_PROG_CC_C_O
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_LIBTOOL

AC_SYS_LARGEFILE
AC_FUNC_FSEEKO

# Building inside teTeX or TeX Live?
AC_ARG_ENABLE(tetex-build, [  --enable-tetex-build    build as part of a teTeX installation])


dnl Check for kpathsea library. (required)
if test "x$enable_tetex_build" = xyes; then
  # In teTeX and TeX Live, LDFLAGS is passed by texk/Makefile and
  # reserved for the user.  Therefore we need another variable for the
  # loader flags to find the local kpathsea.  We use xdvipdfmx_LDFLAGS
  # since Automake already sets that up in the link command.
  xdvipdfmx_LDFLAGS=
  AC_SUBST(xdvipdfmx_LDFLAGS)

  if test ! -d $srcdir/../../texk/kpathsea; then
    AC_MSG_ERROR([
=========================================

You specified --enable-tetex-build, but I can't find the kpathsea
directory.  I expected it to be in $srcdir/../../texk/kpathsea.

=========================================])
  fi
  CPPFLAGS="$CPPFLAGS -I\$(top_builddir)/../../texk -I\$(top_srcdir)/../../texk"
  xdvipdfmx_LDFLAGS="-L\$(top_builddir)/../../texk/kpathsea/.libs"

  AM_CONDITIONAL(TDS_VERSION_11, true)
  AC_DEFINE([__TDS_VERSION__], 0x200406L)
else
  dnl Don't bother going further if we don't have kpse installed.
  AC_ARG_WITH(kpathsea,
  [  --with-kpathsea=DIR     use kpathsea include/library files from DIR], [
    if test -d "$withval"; then
      CPPFLAGS="$CPPFLAGS -I$withval/include"
      LDFLAGS="$LDFLAGS -L$withval/lib"
    fi
  ], [
    if test -d "$prefix"; then
      CPPFLAGS="$CPPFLAGS -I$prefix/include"
      LDFLAGS="$LDFLAGS -L$prefix/lib"
    else
      CPPFLAGS="$CPPFLAGS -I$ac_default_prefix/include"
      LDFLAGS="$LDFLAGS -L$ac_default_prefix/lib"
    fi
  ])

  AC_CHECK_LIB(kpathsea, kpse_find_file, [LIBS="-lkpathsea $LIBS"],
    AC_MSG_ERROR([kpathsea library not found
This version of xdvipdfmx requires the kpathsea library and its headers. If
you know where it is you might try setting the LDFLAGS environment variable
with -L pointing to the directory containing libkpathsea.a.
    ])
  )

  dnl Check kpathsea support for required formats and funcs.
  CHO_CHECK_KPSE_SUPPORT([xdvipdfmx])

  dnl Check for TDS version kpathsea library supports.
  CHO_CHECK_KPSE_TDS_VERSION

  dnl Check for libfreetype, required for xdvipdfmx features
  CHO_CHECK_LIBFREETYPE([xdvipdfmx])
fi

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(unistd.h)
AC_CHECK_HEADERS(stdint.h inttypes.h sys/types.h)

dnl Checks for library functions.
AC_FUNC_MEMCMP
AC_CHECK_FUNCS(open close system getenv mkstemp basename)

dnl Checks for typedefs, structures, and compiler characteristics.
MAW_EXT_TIMEZONE
MAW_TZ_HAS_TM_GMTOFF

AC_C_CONST
AC_C_INLINE
AC_TYPE_SIZE_T
AC_STRUCT_TM
AC_STRUCT_TIMEZONE
AC_C_BIGENDIAN

AC_CHECK_SIZEOF(char)
AC_CHECK_SIZEOF(short)
AC_CHECK_SIZEOF(int)
AC_CHECK_SIZEOF(long)


dnl Check for additonal libraries.

CHO_HAS_LIBFONTCONFIG
JFK_HAS_APP_SERVICES

if test "x$enable_tetex_build" = xyes; then
  # Get these common libraries from the sources, too.
  # Seems like it would be simpler to treat kpathsea this way too, but
  # we're just starting from what lcdf-typetools did.
  sinclude(../../libs/libpng/withenable.ac)
  sinclude(../../libs/libpng/libpng.ac)

  sinclude(../../libs/zlib/withenable.ac)
  sinclude(../../libs/zlib/zlib.ac)

  sinclude(../../libs/freetype2/withenable.ac)
  sinclude(../../libs/freetype2/freetype2.ac)

  # yes, we have zlib and png.
  AC_DEFINE(HAVE_ZLIB)
  AC_DEFINE(HAVE_LIBPNG)
  AC_DEFINE([HAVE_FREETYPE2], [], [Define if you have freetype2 and its headers])

  # You must define HAVE_ZLIB_COMPRESS2 to enable '-z' option for controlling
  # zlib compression level, but zlib.ac included above does not do this test.
  # We assume zlib always has compress2() here although that's not always true.
  AC_DEFINE([HAVE_ZLIB_COMPRESS2], 1)

  # for tetex/tex live build we may need to define XETEX and XETEX_MAC
  if test "x$have_app_services" = xyes; then
    AC_DEFINE([XETEX], [], [Define if part of a teTeX/TeX live build.])
    AC_DEFINE([XETEX_MAC], [], [Define if part of a teTeX/TeX live build for Mac OS X.])
  elif test "x$have_libfontconfig" = xyes; then
    AC_DEFINE([XETEX])
  fi

  # tetex/tex live build; this always has kpathsea, xbasename, etc.,
  # as we're building from current sources.  Do this stuff at the end so
  # other configure tests don't try to link with kpathsea (which doesn't
  # exist at configure time).
  LIBS="-lkpathsea -lm $LIBS"
  xdvipdfmx_LDFLAGS="$xdvipdfmx_LDFLAGS $FONTCONFIGLDFLAGS"
  AC_SUBST(xdvipdfmx_LDFLAGS)
  AC_MSG_NOTICE([tetex build enabled, LIBS now: $LIBS])
else
  CHO_HAS_LIBPAPER
  CHO_HAS_ZLIB
  CHO_HAS_LIBPNG

dnl these variables are defined in the tetex case and used in src/Makefile.am.
dnl just let them be empty.
  AC_SUBST(LIBPNGCPPFLAGS)
  AC_SUBST(LDLIBPNG)
  AC_SUBST(LIBPNGDEP)
  AC_SUBST(ZLIBCPPFLAGS)
  AC_SUBST(LDZLIB)
  AC_SUBST(ZLIBDEP)
  AC_SUBST(FREETYPE2CPPFLAGS)
  AC_SUBST(LDFREETYPE2)
  AC_SUBST(FREETYPE2DEP)
  AC_SUBST(dvipdfmx_LDFLAGS)
  AC_SUBST(xdvipdfmx_LDFLAGS)
fi

AC_CONFIG_FILES([Makefile data/Makefile src/Makefile])
AC_OUTPUT

