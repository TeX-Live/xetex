#!/bin/sh
# Convert WEB programs not needing special treatment to C.

: ${srcdir=.}

usage="Usage: $0 TOOLDIR BASEFILE

TOOLDIR is the root of a tree for native tools; when not cross-compiling,
this is just the present web2c directory.

BASEFILE is the root part of the file to be converted; it is extended
native=$1
shift

with .p to make the name of the (input) Pascal file, and extended with
.c and .h to make the name of the main (output) C files.  Additional
files BASEini.c, BASEd.h, BASEcoerce.h are created for the larger program.
"

native=$1
shift
if test ! -d "$native"; then
  echo "$0: native argument not a directory: $native" >&2
  exit 1
fi

basefile=
while test $# -gt 0; do
  case $1 in
    -*) echo "$1?" >&2; echo "$usage" >&2; exit 1;;
     *) if test -n "$basefile"; then
          echo "$1?" >&2; echo "$usage" >&2; exit 1; fi
        basefile=$1;;
  esac
  shift
done
if test -z "$basefile"; then
  echo "$0: missing base (Pascal) file argument." >&2
  echo "$usage" >&2
  exit 1
fi

pascalfile=$basefile.p
cfile=$basefile.c

# This is for tangleboot if the build and source directories are different.
test -r $pascalfile || pascalfile=$srcdir/$pascalfile

# We use cpascal.h by default instead of config.h because straight C
# routines can only be confused by the definitions for `chr', etc.
hfile=cpascal.h
more_defines=
web2c_options=-c$basefile
precmd=
midcmd=
fixwrites_options=
splitup_options="-i -l 11500"
# was 10000, but that caused pdfetex4.c to appear. With 11500, the number of
# files for pdf{e}tex is unchanged.
postcmd=
output="> $cfile"
output_files="$cfile $basefile.h"

case $basefile in
  bibtex)
    midcmd="| sed -f $srcdir/web2c/cvtbib.sed"
    ;;

  mf) # MF and MP are almost the same.
    more_defines="$srcdir/web2c/texmf.defines $srcdir/web2c/mfmp.defines"
    precmd="| sed -f $srcdir/web2c/cvtmf1.sed"
    web2c_options="-m -c${basefile}coerce"
    hfile=texmfmp.h
    midcmd="| sed -f $srcdir/web2c/cvtmf2.sed"
    postcmd="| $native/web2c/splitup $splitup_options $basefile"
    cfile=${basefile}1.c # last output file, or thereabouts
    output=
    output_files="$basefile[0-9].c ${basefile}ini.c ${basefile}d.h \
${basefile}coerce.h"
    ;;

  mp) # MP now needs mp.defines for font inclusion library
    more_defines="$srcdir/web2c/texmf.defines $srcdir/web2c/mfmp.defines"
    prog_defines="$srcdir/${basefile}dir/$basefile.defines"
    if test -f $prog_defines; then
       more_defines="$more_defines $prog_defines"
     fi
    precmd="| sed -f $srcdir/web2c/cvtmf1.sed"
    web2c_options="-m -c${basefile}coerce"
    hfile=texmfmp.h
    midcmd="| sed -f $srcdir/web2c/cvtmf2.sed"
    postcmd="| $native/web2c/splitup $splitup_options $basefile"
    cfile=${basefile}2.c # last output file, or thereabouts
    output=
    output_files="$basefile[0-9].c ${basefile}ini.c ${basefile}d.h \
${basefile}coerce.h"
    ;;

  tex|eomega|etex|pdftex|pdfetex|omega|aleph|xetex)
    more_defines="$srcdir/web2c/texmf.defines $srcdir/synctexdir/synctex.defines"
    prog_defines="$srcdir/${basefile}dir/$basefile.defines"
    if test -f $prog_defines; then
      more_defines="$more_defines $prog_defines"
    fi
    web2c_options="-t -c${basefile}coerce"
    hfile=texmfmp.h
    fixwrites_options=-t
    postcmd="| $native/web2c/splitup $splitup_options ${basefile}"
    cfile=${basefile}2.c # last output file, or thereabouts
    output=
    output_files="$basefile[0-9].c ${basefile}ini.c ${basefile}d.h \
                  ${basefile}coerce.h"
    ;;

  luatex)
    more_defines="$srcdir/web2c/texmf.defines"
    prog_defines="$srcdir/${basefile}dir/$basefile.defines"
    if test -f $prog_defines; then
      more_defines="$more_defines $prog_defines"
    fi
    web2c_options="-t -c${basefile}coerce"
    hfile=texmfmp.h
    fixwrites_options=-t
    splitup_options="-i -l 13500"
    postcmd="| $native/web2c/splitup $splitup_options ${basefile}"
    cfile=${basefile}2.c # last output file, or thereabouts
    output=
    output_files="$basefile[0-9].c ${basefile}ini.c ${basefile}d.h \
                 ${basefile}coerce.h"
    ;;
esac

# Do it.
#set -x
eval "cat $srcdir/web2c/common.defines $more_defines $pascalfile \
  $precmd \
  | $native/web2c/web2c -h$hfile $web2c_options \
  $midcmd \
  | $native/web2c/fixwrites $fixwrites_options $basefile \
  $postcmd \
  $output"

# Using the above pipeline as the condition of an if does no good, since
# typical sh's use the status of the first command as the pipeline result.
# So check for an empty output file, or one with the error marker we put in.
if test ! -s $cfile || grep @error@ $output_files >/dev/null; then
  : ${TMPDIR=/tmp}
  # Don't just delete it, since it may be useful for debugging.
  echo "$0: conversion of $pascalfile failed, moving dregs:" >&2
  cmd="mv $output_files $TMPDIR"
  (cd $TMPDIR && rm -f $output_files)
  echo "$0:   $cmd" >&2
  $cmd
  exit 1
fi

case $basefile in
  bibtex)
    sed -e 's/(buftype)//g' -e 's/(pdstype)//g' <bibtex.h >xbibtex.h
    mv xbibtex.h bibtex.h
    ;;
  tex|eomega|etex|luatex|pdftex|pdfetex|omega|aleph|mf|mp|xetex)
    sleep 2 # so timestamps are definitely later, to avoid make weirdness
    cat ${basefile}coerce.h $srcdir/web2c/coerce.h >x${basefile}coerce.h
    mv x${basefile}coerce.h ${basefile}coerce.h
    touch ${basefile}d.h
    ;;
esac

exit 0
