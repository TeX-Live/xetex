{
/****************************************************************************\
 Part of the XeTeX typesetting system
 copyright (c) 1994-2006 by SIL International
 written by Jonathan Kew

Permission is hereby granted, free of charge, to any person obtaining  
a copy of this software and associated documentation files (the  
"Software"), to deal in the Software without restriction, including  
without limitation the rights to use, copy, modify, merge, publish,  
distribute, sublicense, and/or sell copies of the Software, and to  
permit persons to whom the Software is furnished to do so, subject to  
the following conditions:

The above copyright notice and this permission notice shall be  
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,  
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF  
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND  
NONINFRINGEMENT. IN NO EVENT SHALL SIL INTERNATIONAL BE LIABLE FOR  
ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF  
CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION  
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Except as contained in this notice, the name of SIL International  
shall not be used in advertising or otherwise to promote the sale,  
use or other dealings in this Software without prior written  
authorization from SIL International.
\****************************************************************************/
}

{ xetex.defines: additions for xetex }

@define @field ptr;
@define const nullptr;
@define type voidpointer;
@define function getnativechar();
@define procedure setnativechar();
@define function getnativeglyph();
@define procedure setnativemetrics();
@define procedure setjustifiednativeglyphs();
@define procedure setnativeglyphmetrics();
@define function findnativefont();
@define procedure releasefontengine();
@define function sizeof();
@define function makefontdef();
@define function makexdvglypharraydata();
@define function xdvbufferbyte();
@define procedure fprintf();
@define type unicodefile;
@define function uopenin();
@define function uopenout();
@define procedure uclose();
@define function dviopenout();
@define function dviclose();
@define function delcode1();
@define procedure setdelcode1();
@define function readcint1();
@define procedure setcint1();
@define procedure printcstring();
@define procedure printutf8str();
@define procedure setinputfileencoding();
@define procedure terminatefontmanager;
@define function initpool();
@define type gzFile;
@define function weof();

@define procedure initGraphiteBreaking();
@define function findNextGraphiteBreak();
@define function usingOpenType();
@define function usingGraphite();
@define procedure grprintfontname();
@define function grfontgetnamed();
@define function grfontgetnamed1();

@define function strerror();
@define procedure memcpy();
@define function glyphinfobyte();
@define function casttoushort();

@define function atsufontget();
@define function atsufontget1();
@define function atsufontget2();
@define function atsufontgetnamed();
@define function atsufontgetnamed1();
@define procedure atsuprintfontname();
@define function otfontget();
@define function otfontget1();
@define function otfontget2();
@define function otfontget3();
@define function mapchartoglyph();
@define function mapglyphtoindex();
@define procedure getnativecharheightdepth();
@define procedure getnativecharsidebearings();
@define function getnativeitaliccorrection();
@define function getnativeglyphitaliccorrection();
@define procedure printglyphname();
@define function getfontcharrange();

@define function getnativecharwd();
@define function getnativecharht();
@define function getnativechardp();
@define function getnativecharic();

@define function getnativemathsyparam();
@define function getnativemathexparam();
@define function getotmathconstant();
@define function getotmathvariant();
@define function getotassemblyptr();
@define function getotmathitalcorr();
@define function getotmathaccentpos();

@define function otpartcount();
@define function otpartglyph();
@define function otpartstartconnector();
@define function otpartendconnector();
@define function otpartfulladvance();
@define function otpartisextender();
@define function otminconnectoroverlap();

@define function setfamilyfield();
@define function setclassfield();
@define function mathfamfield();
@define function mathclassfield();
@define function mathcharfield();

@define procedure atsugetfontmetrics();
@define procedure otgetfontmetrics();

@define function getencodingmodeandinfo();

@define procedure linebreakstart();
@define function linebreaknext;

{ extra stuff used in picfile code }
@define type realpoint;
@define type realrect;
@define type transform;

@define function deref();

@define function X2Fix();
@define function Fix2X();

@define function findpicfile();
@define function picpathbyte();
@define function countpdffilepages;

@define procedure makeidentity();
@define procedure makescale();
@define procedure maketranslation();
@define procedure makerotation();
@define procedure transformpoint();
@define procedure transformconcat();

@define procedure setPoint();

@define function xCoord();
@define function yCoord();
@define function aField();
@define function bField();
@define function cField();
@define function dField();
@define function xField();
@define function yField();
@define function txField();
@define function tyField();
@define function wdField();
@define function htField();
@define function applymapping();
