%
% Copyright (c) 1996-2007 Han The Thanh, <thanh@pdftex.org>
%
% This file is part of pdfTeX.
%
% pdfTeX is free software; you can redistribute it and/or modify
% it under the terms of the GNU General Public License as published by
% the Free Software Foundation; either version 2 of the License, or
% (at your option) any later version.
%
% pdfTeX is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU General Public License for more details.
%
% You should have received a copy of the GNU General Public License along with
% pdfTeX; if not, write to the Free Software Foundation, Inc., 51 Franklin
% Street, Fifth Floor, Boston, MA 02110-1301 USA.
%
% These are synctex specific additions to pdftex.
% This change file is meant to override previous changes made by synctex.ch
%

@x
margin_kern_node,
kern_node: begin
@y
margin_kern_node:cur_h:=cur_h+width(p); {separate the |margin_kern_node| case in |hlist_out|}
kern_node: begin
@z

@x
procedure pdf_hlist_out; {output an |hlist_node| box}
@y
procedure pdf_hlist_out; {output an |hlist_node| box}
@z

@x pdftex.web l.18367
while p<>null do
    @<Output node |p| for |pdf_hlist_out| and move to the next node,
    maintaining the condition |cur_v=base_line|@>;
@y
@<Start hlist {\sl Sync\TeX} information record@>;
while p<>null do
    @<Output node |p| for |pdf_hlist_out| and move to the next node,
    maintaining the condition |cur_v=base_line|@>;
@<Finish hlist {\sl Sync\TeX} information record@>;
@z

@x
@ @<Output node |p| for |pdf_hlist_out|...@>=
@y
@ @<Output node |p| for |pdf_hlist_out|...@>=
@z

@x pdftex.web l.18382
  until not is_char_node(p);
@y
  until not is_char_node(p);
  @<Record current point {\sl Sync\TeX} information@>;
@z

@x
@ @<Output the non-|char_node| |p| for |pdf_hlist_out|...@>=
@y
@ @<Output the non-|char_node| |p| for |pdf_hlist_out|...@>=
@z

@x
margin_kern_node,
kern_node:cur_h:=cur_h+width(p);
@y
margin_kern_node:cur_h:=cur_h+width(p);
kern_node: begin
  @<Record |kern_node| {\sl Sync\TeX} information@>;
  cur_h:=cur_h+width(p);
end;
@z

@x
math_node: @<Handle a math node in |hlist_out|@>;
@y
math_node: begin
  @<Record |math_node| {\sl Sync\TeX} information@>;
  @<Handle a math node in |hlist_out|@>;
end;
@z

@x pdftex.web l.18411
move_past: cur_h:=cur_h+rule_wd;
@y
move_past: begin
  cur_h:=cur_h+rule_wd;
  @<Record horizontal |rule_node| or |glue_node| {\sl Sync\TeX} information@>;
end;
@z

@x
@ @<(\pdfTeX) Output a box in an hlist@>=
@y
@ @<(\pdfTeX) Output a box in an hlist@>=
@z

@x
if list_ptr(p)=null then cur_h:=cur_h+width(p)
@y
if list_ptr(p)=null then
  begin
    @<Record void list {\sl Sync\TeX} information@>;
    cur_h:=cur_h+width(p);
  end
@z

@x
@p procedure pdf_vlist_out; {output a |pdf_vlist_node| box}
@y
@p procedure pdf_vlist_out; {output a |pdf_vlist_node| box}
@z

@x pdftex.web l.18521
left_edge:=cur_h; cur_v:=cur_v-height(this_box); top_edge:=cur_v;
@y
left_edge:=cur_h;
@<Start vlist {\sl Sync\TeX} information record@>;
cur_v:=cur_v-height(this_box); top_edge:=cur_v;
@z

@x pdftex.web l.18523
while p<>null do
    @<Output node |p| for |pdf_vlist_out| and move to the next node,
    maintaining the condition |cur_h=left_edge|@>;
@y
while p<>null do
    @<Output node |p| for |pdf_vlist_out| and move to the next node,
    maintaining the condition |cur_h=left_edge|@>;
@<Finish vlist {\sl Sync\TeX} information record@>;
@z

@x pdftex.web l.18557
@ @<(\pdfTeX) Output a box in a vlist@>=
if list_ptr(p)=null then cur_v:=cur_v+height(p)+depth(p)
@y
@ @<(\pdfTeX) Output a box in a vlist@>=
if list_ptr(p)=null then begin
  cur_v:=cur_v+height(p);
  @<Record void list {\sl Sync\TeX} information@>;
  cur_v:=cur_v+depth(p);
end
@z

@x
@p procedure pdf_ship_out(p: pointer; shipping_page: boolean); {output the box |p|}
@y
@p procedure pdf_ship_out(p: pointer; shipping_page: boolean); {output the box |p|}
@z

@x pdftex.web l.18680
pdf_last_resources: integer; {pointer to most recently generated Resources object}
@y
pdf_last_resources: integer; {pointer to most recently generated Resources object}
begin @<Start sheet {\sl Sync\TeX} information record@>;
@z

@x pdftex.web l.18699
@<Flush the box from memory, showing statistics if requested@>;
end;
@y
@<Flush the box from memory, showing statistics if requested@>;
end;
@<Finish sheet {\sl Sync\TeX} information record@>;
end;
@z

@x
synctex_sheet(mag);
@y
pdf_output_value:=pdf_output; {{\sl Sync\TeX}: we assume that |pdf_output| is properly set up}
synctex_sheet(mag);
@z
